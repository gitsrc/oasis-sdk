var searchIndex = new Map(JSON.parse('[\
["fuzz_mkvs_node",{"doc":"","t":"H","n":["main"],"q":[[0,"fuzz_mkvs_node"]],"d":[""],"i":[0],"f":"{{}b}","c":[],"p":[[1,"unit"]],"b":[]}],\
["fuzz_mkvs_proof",{"doc":"","t":"H","n":["main"],"q":[[0,"fuzz_mkvs_proof"]],"d":[""],"i":[0],"f":"{{}b}","c":[],"p":[[1,"unit"]],"b":[]}],\
["oasis_contract_sdk",{"doc":"Oasis Contract SDK.","t":"EEEYEYECCQCCCCCCERKRRMMMMMMMMMMMKRRRMNNNNMKGPKMNNNMMMNNNMNNNNNMMMMMNNNNNMKMMNKMNMFFHNNNNHNNNNNNNNNNNNNNNNNNOOOONNNNNNNNKKKMMMFFFNNNNNNNNNNNNNNONNNNNNNNNNNNNNNONNNNOONNNNNNNNNNNNNNNONNNONNNNNNNNNNNNNNNNNNNNN","n":["Context","Contract","Error","Error","Event","Event","cbor","context","contract","create_contract","env","error","event","memory","storage","testing","types","ConfidentialStore","Context","Env","PublicStore","call_format","caller_address","confidential_store","deposited_tokens","emit_event","emit_message","env","instance_address","instance_id","is_read_only","public_store","Contract","Error","Request","Response","call","handle_reply","instantiate","post_upgrade","pre_upgrade","query","Crypto","CryptoError","DecryptionFailed","Env","address_for_instance","as_fail","borrow","borrow_mut","debug_print","deoxysii_open","deoxysii_seal","deref","deref_mut","drop","ecdsa_recover","fmt","fmt","from","init","into","query","random_bytes","signature_verify_ed25519","signature_verify_secp256k1","signature_verify_sr25519","to_string","try_from","try_into","type_id","vzip","x25519_derive_symmetric","Error","code","module_name","to_execution_result","Event","code","into_raw","module_name","HostRegion","HostRegionRef","allocate_host","borrow","borrow","borrow_mut","borrow_mut","deallocate_host","deref","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_arg","from_args","from_slice","from_vec","init","init","into","into","into_vec","length","length","offset","offset","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ConfidentialStore","PublicStore","Store","get","insert","remove","MockContext","MockEnv","MockStore","address_for_instance","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","call_format","caller_address","clone","clone","clone_into","clone_into","confidential_store","confidential_store","debug_print","default","default","deoxysii_open","deoxysii_seal","deposited_tokens","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","ec","ecdsa_recover","emit_event","emit_message","env","env","events","from","from","from","from","get","init","init","init","insert","instance_address","instance_id","into","into","into","is_read_only","messages","new","new","public_store","public_store","query","random_bytes","remove","signature_verify_ed25519","signature_verify_secp256k1","signature_verify_sr25519","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","x25519_derive_symmetric"],"q":[[0,"oasis_contract_sdk"],[17,"oasis_contract_sdk::context"],[32,"oasis_contract_sdk::contract"],[42,"oasis_contract_sdk::env"],[73,"oasis_contract_sdk::error"],[77,"oasis_contract_sdk::event"],[81,"oasis_contract_sdk::memory"],[119,"oasis_contract_sdk::storage"],[125,"oasis_contract_sdk::testing"],[206,"oasis_contract_sdk_types"],[207,"oasis_contract_sdk_types::address"],[208,"oasis_contract_sdk_types::token"],[209,"oasis_contract_sdk_types::message"],[210,"oasis_contract_sdk_types"],[211,"oasis_contract_sdk_types::message"],[212,"failure"],[213,"alloc::vec"],[214,"core::fmt"],[215,"core::fmt"],[216,"oasis_contract_sdk_types::env"],[217,"alloc::string"],[218,"core::any"],[219,"oasis_contract_sdk_types"],[220,"oasis_contract_sdk_types"]],"d":["","","","Derives the <code>Error</code> trait on an enum.","","Derives the <code>Event</code> trait on an enum.","","Contract execution context.","The contract trait.","","Smart contract environment query interface.","Contract error trait.","Contract event trait.","Memory management.","Smart contract storage interface.","Utilities for testing smart contracts.","","The confidential store.","Execution context.","The environment.","The public store.","Call format.","Caller address.","Confidential contract store.","Tokens deposited by the caller.","Emits an event.","Emits a message.","Environment.","Contract instance address.","Contract instance identifier.","Whether the call is read-only and must not make any …","Public contract store.","Trait that needs to be implemented by contract …","Type of all errors.","Type of all requests.","Type of all responses.","Call the contract.","Handle replies from sent messages.","Instantiate the contract.","Perform any post-upgrade tasks. This method is called on …","Perform any pre-upgrade tasks. This method is called on …","Query the contract.","Crypto helpers trait.","Errors that can be returned from crypto functions.","","Environment query trait.","Returns an address for the contract instance id.","","","","Prints a message to the console. Useful when debugging.","Decrypt and authenticate a message and authenticate …","Encrypt and authenticate a message and authenticate …","","","","ECDSA public key recovery function.","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Perform an environment query.","Fills <code>dst</code> with cryptographically secure random bytes. …","Verify an ed25519 message signature.","Verify a secp256k1 message signature.","Verify an sr25519 message signature.","","","","","","Derive a symmetric key from a public/private key pair.","A contract error that gets propagated to the caller.","Error code uniquely identifying the error.","Name of the module that emitted the error.","Converts the error into an execution result.","An event emitted by the contract.","Code uniquely identifying the event.","Converts an event into the raw event type that can be …","Name of the module that emitted the event.","A region of memory managed on behalf of the host.","Reference to a host region.","Allocate memory on host’s behalf.","","","","","Deallocate memory on host’s behalf.","","Returns a new region by dereferencing a pointer to the …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new host region from arguments.","Creates a new host region from arguments.","Creates a new host region from the given byte slice.","Transfers ownership of memory to the host by constructing …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Transfers ownership of memory from the host and returns …","","","","","","","","","","","","","Marker trait for stores backed by confidential storage.","Marker trait for stores backed by public storage.","Key/value store trait.","Fetch a given key from contract storage.","Insert a given key/value pair into contract storage.","Remove a given key from contract storage.","A mock contract context suitable for testing.","Mock environment.","Mock store.","","","","","","","","","","","","","","","“Confidential” store.","","","","","","","","","","","","","","","","Execution context.","","","","","Environment.","Emitted events.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Emitted messages.","Create a new empty mock store.","Create a new mock environment.","","Public store.","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,4,4,4,4,4,4,4,4,4,4,4,4,4,0,47,47,47,47,47,47,47,47,47,0,0,25,0,8,25,25,25,8,9,9,25,25,25,9,25,25,25,25,25,8,9,9,9,9,25,25,25,25,25,9,0,35,35,35,0,14,14,14,0,0,0,39,41,39,41,0,39,39,41,39,41,39,41,39,41,39,39,41,39,39,41,39,41,39,39,41,39,41,39,41,39,41,39,41,39,41,0,0,0,42,42,42,0,0,0,43,44,45,43,44,45,43,44,44,45,43,45,43,44,44,43,45,43,43,43,44,44,45,43,44,45,43,44,45,43,44,43,44,44,44,44,44,44,44,45,43,45,44,45,43,45,44,44,44,45,43,44,44,45,43,44,44,43,43,45,43,43,43,45,43,44,45,43,44,45,43,44,45,43,44,45,43,43],"f":"`````````````````````{{{h{}{{b{c}}{d{e}}{f{g}}}}}jln{A`Ab}}{{{h{}{{b{c}}{d{e}}{f{g}}}}}Adln{A`Ab}}{{{h{}{{b{c}}{d{e}}{f{g}}}}}eln{A`Ab}}{{{h{}{{b{c}}{d{e}}{f{g}}}}}{{Ah{Af}}}ln{A`Ab}}{{{h{}{{b{c}}{d{e}}{f{g}}}}i}Ajln{A`Ab}Al}{{{h{}{{b{c}}{d{e}}{f{g}}}}An}Ajln{A`Ab}}{{{h{}{{b{c}}{d{e}}{f{g}}}}}gln{A`Ab}}5{{{h{}{{b{c}}{d{e}}{f{g}}}}}B`ln{A`Ab}}{{{h{}{{b{c}}{d{e}}{f{g}}}}}Bbln{A`Ab}}{{{h{}{{b{c}}{d{e}}{f{g}}}}}cln{A`Ab}}````{{ce}{{Bd{gi}}}h{}{}{}}{{cBf}{{Bd{{Bh{e}}g}}}h{}{}}{{ce}{{Bd{Ajg}}}h{}{}}002````{{A`B`}Ad}{cBj{}}{ce{}{}}0{{A`Bl}Aj}{{Ab{Ah{Bn}}{Ah{Bn}}{Ah{Bn}}{Ah{Bn}}}{{Bd{{C`{Bn}}Cb}}}}0{Cdc{}}0{CdAj}{{Ab{Ah{Bn}}}{{Cf{Bn}}}}{{CbCh}Cj}0{cc{}}{{}Cd}8{{A`c}Cl{{D`{Cn}}}}{{Ab{Ah{Bn}}{Ah{Bn}}}Cd}{{Ab{Ah{Bn}}{Ah{Bn}}{Ah{Bn}}}Bb}0{{Ab{Ah{Bn}}{Ah{Bn}}{Ah{Bn}}{Ah{Bn}}}Bb}{cDb{}}{c{{Bd{e}}}{}{}}0{cDd{}}?{{Ab{Ah{Bn}}{Ah{Bn}}}{{Cf{Bn}}}}`{DfDh}{DfBl}{DfDj}`{AlDh}{AlDl}{AlBl}``{DhDh}{ce{}{}}000{{DhDh}Aj}{Cdc{}}{DnDn}111{CdAj}0{cc{}}0{{{E`{DhDh}}}Dn}{{DhDh}Dn}{{{Ah{Bn}}}Eb}{{{C`{Bn}}}Dn}{{}Cd}0::{Dn{{C`{Bn}}}}````{c{{Bd{e}}}{}{}}000{cDd{}}0==```{{Ed{Ah{Bn}}}{{Bh{{C`{Bn}}}}}}{{Ed{Ah{Bn}}{Ah{Bn}}}Aj}{{Ed{Ah{Bn}}}Aj}```{{EfB`}Ad}{ce{}{}}00000{Ehj}{EhAd}{EjEj}{EfEf}{{ce}Aj{}{}}0{Ehc{}}`{{EfBl}Aj}{{}Ej}{{}Ef}{{Ef{Ah{Bn}}{Ah{Bn}}{Ah{Bn}}{Ah{Bn}}}{{Bd{{C`{Bn}}Cb}}}}0{Eh{{Ah{Af}}}}{Cdc{}}00000{CdAj}00`{{Ef{Ah{Bn}}}{{Cf{Bn}}}}{{Ehc}AjAl}{{EhAn}Aj}:``{ElEh}{cc{}}00{{Ej{Ah{Bn}}}{{Bh{{C`{Bn}}}}}}{{}Cd}00{{Ej{Ah{Bn}}{Ah{Bn}}}Aj}{EhAd}{EhB`}{ce{}{}}00{EhBb}`{{}Ej}{{}Ef}{Ehc{}}`{{Efc}Cl{{D`{Cn}}}}{{Ef{Ah{Bn}}{Ah{Bn}}}Cd}{{Ej{Ah{Bn}}}Aj}{{Ef{Ah{Bn}}{Ah{Bn}}{Ah{Bn}}}Bb}0{{Ef{Ah{Bn}}{Ah{Bn}}{Ah{Bn}}{Ah{Bn}}}Bb}99{c{{Bd{e}}}{}{}}00000{cDd{}}00;;;{{Ef{Ah{Bn}}{Ah{Bn}}}{{Cf{Bn}}}}","c":[],"p":[[17,"PublicStore"],[17,"ConfidentialStore"],[17,"Env"],[10,"Context",17],[6,"CallFormat",206],[10,"PublicStore",119],[10,"ConfidentialStore",119],[10,"Env",42],[10,"Crypto",42],[5,"Address",207],[5,"BaseUnits",208],[1,"slice"],[1,"unit"],[10,"Event",77],[6,"Message",209],[5,"InstanceId",206],[1,"bool"],[6,"Result",210],[6,"Reply",209],[6,"Option",211],[10,"Fail",212],[1,"str"],[1,"u8"],[5,"Vec",213],[6,"CryptoError",42],[1,"usize"],[1,"array"],[5,"Formatter",214],[8,"Result",214],[6,"QueryResponse",215],[6,"QueryRequest",215],[10,"Into",216],[5,"String",217],[5,"TypeId",218],[10,"Error",73],[1,"u32"],[6,"ExecutionResult",206],[5,"Event",219],[5,"HostRegion",81],[1,"tuple"],[5,"HostRegionRef",81],[10,"Store",119],[5,"MockEnv",125],[5,"MockContext",125],[5,"MockStore",125],[5,"ExecutionContext",206],[10,"Contract",32]],"b":[[57,"impl-Display-for-CryptoError"],[58,"impl-Debug-for-CryptoError"]]}],\
["oasis_contract_sdk_storage",{"doc":"High-level storage helpers for the Oasis Contract SDK.","t":"CCFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFRFKKFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNMNNNNNNNNNNNN","n":["cell","map","ConfidentialCell","PublicCell","borrow","borrow","borrow_mut","borrow_mut","clear","clear","deref","deref","deref_mut","deref_mut","drop","drop","from","from","get","get","init","init","into","into","new","new","set","set","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ConfidentialMap","Encoded","Int","Integer","MapKey","PublicMap","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","from","from","from","from","get","get","init","init","init","insert","insert","into","into","into","key","key","new","new","new","remove","remove","to_be_bytes","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip"],"q":[[0,"oasis_contract_sdk_storage"],[2,"oasis_contract_sdk_storage::cell"],[36,"oasis_contract_sdk_storage::map"],[91,"oasis_contract_sdk::storage"],[92,"oasis_contract_sdk::storage"],[93,"oasis_cbor::decode"],[94,"oasis_cbor::encode"],[95,"core::result"],[96,"core::any"],[97,"alloc::vec"],[98,"core::convert"]],"d":["Low-level storage primitive that holds one value.","A map backed by contract storage.","A storage cell identifies a storage key of a specific type.","A storage cell identifies a storage key of a specific type.","","","","","Clear the value in the storage cell.","Clear the value in the storage cell.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Return the current value of the storage cell.","Return the current value of the storage cell.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new storage cell with the specified key and type.","Create a new storage cell with the specified key and type.","Set the value of the storage cell.","Set the value of the storage cell.","","","","","","","","","A map backed by contract storage.","Type of the encoded representation.","An integer in big-endian representation.","A trait representing an integer that can be encoded into …","A trait for types which can be used as map keys.","A map backed by contract storage.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Lookup a given key.","Lookup a given key.","","","","Insert a given key/value pair.","Insert a given key/value pair.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return the composite key.","","Create a new integer in big-endian representation.","Create a new map instance.","Create a new map instance.","Remove a given key.","Remove a given key.","Return the memory representation of this integer as a byte …","","","","","","","","","","","",""],"i":[0,0,0,0,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,0,15,0,0,0,0,14,16,18,14,16,18,14,16,18,14,16,18,14,16,18,14,14,16,18,16,18,14,16,18,16,18,14,16,18,17,14,14,16,18,16,18,15,14,16,18,14,16,18,14,16,18,14,16,18],"f":"````{ce{}{}}000{{{b{c}}d}f{}}{{{h{c}}j}f{}}{lc{}}000{lf}0{cc{}}0{{{b{c}}d}{{n{c}}}A`}{{{h{c}}j}{{n{c}}}A`}{{}l}088{{{Ad{Ab}}}{{b{c}}}{}}{{{Ad{Ab}}}{{h{c}}}{}}{{{b{c}}dc}fAf}{{{h{c}}jc}fAf}{c{{Ah{e}}}{}{}}000{cAj{}}0>>``````>>>>>>;;;;;;:::9{c{{Al{c}}}An}::{{{B`{ce}}dc}{{n{e}}}Bb{AfA`}}{{{Bd{ce}}jc}{{n{e}}}Bb{AfA`}}999{{{B`{ce}}dce}fBb{AfA`}}{{{Bd{ce}}jce}fBb{AfA`}}{ce{}{}}00{Bb{{Bf{{Ad{Ab}}}}}}{{{Al{c}}}{{Bf{{Ad{Ab}}}}}An}7{{{Ad{Ab}}}{{B`{ce}}}{}{}}{{{Ad{Ab}}}{{Bd{ce}}}{}{}}{{{B`{ce}}dc}fBb{AfA`}}{{{Bd{ce}}jc}fBb{AfA`}}{{{An{}{{Bh{c}}}}}c{{Bj{{Ad{Ab}}}}}}>>>>>>===777","c":[],"p":[[5,"PublicCell",2],[10,"PublicStore",91],[1,"unit"],[5,"ConfidentialCell",2],[10,"ConfidentialStore",91],[1,"usize"],[6,"Option",92],[10,"Decode",93],[1,"u8"],[1,"slice"],[10,"Encode",94],[6,"Result",95],[5,"TypeId",96],[5,"Int",36],[10,"Integer",36],[5,"PublicMap",36],[10,"MapKey",36],[5,"ConfidentialMap",36],[5,"Vec",97],[17,"Encoded"],[10,"AsRef",98]],"b":[]}],\
["oasis_contract_sdk_types",{"doc":"A collection of common types used by the Oasis Contract …","t":"GFPFFGPFPPCNNNNNNNNNNNNNNOONNNNNNNNNNCONNNNNONNNNNNNNNNNNNNNNNNCNNNNNNNNNCONNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNCOCOCCNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOFGPTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPGPNNNNNNNNNNNNNNNNPPGGPPPPPGGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOFNNNNOONNNNNNNNONNNNNNPPPGPGPGPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOCFNNNNNNNNNNONNNNNNNNNNPPGNNNNNNNNNNNNNNNNNCCCCCHHHHFFGTTPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNO","n":["CallFormat","CodeId","EncryptedX25519DeoxysII","ExecutionContext","ExecutionOk","ExecutionResult","Failed","InstanceId","Ok","Plain","address","as_u64","as_u64","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_format","caller_address","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","crypto","data","default","default","default","default","default","deposited_tokens","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","env","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","event","events","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","increment","increment","init","init","init","init","init","init","instance_address","instance_id","into","into","into","into","into","into","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","message","messages","modules","read_only","storage","testing","to_owned","to_owned","to_owned","to_owned","to_owned","to_storage_key","to_storage_key","token","try_default","try_default","try_default","try_default","try_default","try_from","try_from","try_from","try_from","try_from","try_from","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","code","message","module","Address","Error","MalformedAddress","SIZE","as_fail","as_ref","base32_len","borrow","borrow","borrow_mut","borrow_mut","check_base32","clone","clone_into","cmp","default","deref","deref","deref_mut","deref_mut","drop","drop","encode_hex","encode_hex_upper","eq","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from_bech32","from_bytes","init","init","into","into","into_cbor_value","partial_cmp","to_bech32","to_owned","to_string","try_default","try_from","try_from","try_from","try_from_cbor_value","try_into","try_into","type_id","type_id","vzip","vzip","write_base32","Ed25519","Secp256k1","SignatureKind","Sr25519","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","init","into","to_owned","try_from","try_from","try_into","type_id","vzip","Accounts","Accounts","AccountsQuery","AccountsResponse","Balance","Balance","BlockInfo","BlockInfo","Error","QueryRequest","QueryResponse","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","from","from","init","init","init","init","into","into","into","into","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","address","denomination","balance","code","epoch","message","module","round","timestamp","Event","borrow","borrow_mut","clone","clone_into","code","data","deref","deref_mut","drop","fmt","from","init","into","into_cbor_value","module","to_owned","try_from","try_from_cbor_value","try_into","type_id","vzip","Always","Call","Call","CallResult","Failed","Message","Never","NotifyReply","Ok","OnError","OnSuccess","Reply","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","init","init","init","init","into","into","into","into","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","is_success","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","code","module","body","data","id","max_gas","method","reply","data","id","result","contracts","InstantiateResult","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","fmt","from","id","init","into","into_cbor_value","to_owned","try_default","try_from","try_from_cbor_value","try_into","type_id","vzip","Confidential","Public","StoreKind","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","init","into","prefix","to_owned","try_from","try_from","try_into","type_id","vzip","addresses","alice","bob","charlie","dave","address","address","address","address","BaseUnits","Denomination","Error","MAX_LENGTH","NATIVE","NameTooLong","amount","as_fail","as_ref","base32_len","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check_base32","clone","clone","clone_into","clone_into","cmp","cmp","default","default","denomination","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","encode_hex","encode_hex_upper","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_str","init","init","init","into","into","into","into_cbor_value","into_cbor_value","into_vec","is_native","new","partial_cmp","partial_cmp","to_owned","to_owned","to_string","to_string","to_string","try_default","try_default","try_from","try_from","try_from","try_from","try_from_cbor_value","try_from_cbor_value","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","write_base32","length"],"q":[[0,"oasis_contract_sdk_types"],[161,"oasis_contract_sdk_types::ExecutionResult"],[164,"oasis_contract_sdk_types::address"],[220,"oasis_contract_sdk_types::crypto"],[240,"oasis_contract_sdk_types::env"],[325,"oasis_contract_sdk_types::env::AccountsQuery"],[327,"oasis_contract_sdk_types::env::AccountsResponse"],[328,"oasis_contract_sdk_types::env::QueryResponse"],[334,"oasis_contract_sdk_types::event"],[356,"oasis_contract_sdk_types::message"],[445,"oasis_contract_sdk_types::message::CallResult"],[447,"oasis_contract_sdk_types::message::Message"],[453,"oasis_contract_sdk_types::message::Reply"],[456,"oasis_contract_sdk_types::modules"],[457,"oasis_contract_sdk_types::modules::contracts"],[479,"oasis_contract_sdk_types::storage"],[499,"oasis_contract_sdk_types::testing"],[500,"oasis_contract_sdk_types::testing::addresses"],[504,"oasis_contract_sdk_types::testing::addresses::alice"],[505,"oasis_contract_sdk_types::testing::addresses::bob"],[506,"oasis_contract_sdk_types::testing::addresses::charlie"],[507,"oasis_contract_sdk_types::testing::addresses::dave"],[508,"oasis_contract_sdk_types::token"],[600,"oasis_contract_sdk_types::token::Error"],[601,"core::fmt"],[602,"core::fmt"],[603,"oasis_cbor_value::values"],[604,"oasis_cbor"],[605,"core::result"],[606,"core::any"],[607,"failure"],[608,"bech32"],[609,"alloc::vec"],[610,"core::cmp"],[611,"core::iter::traits::collect"],[612,"oasis_runtime_sdk::types::address"],[613,"core::option"],[614,"alloc::string"],[615,"bech32"],[616,"oasis_runtime_sdk::types::token"],[617,"oasis_runtime_sdk::types::token"]],"d":["Format used for encoding the call (and output) information.","Unique stored code identifier.","Encrypted call data using X25519 for key exchange and …","Execution context.","Result of a successful contract execution.","Contract execution result.","","Unique deployed code instance identifier.","","Plain text call data.","A minimal representation of an Oasis Runtime SDK address.","Convert identifier to u64.","Convert identifier to u64.","","","","","","","","","","","","","Transaction’s call format.","Caller address.","","","","","","","","","","","Cryptography-related types.","Raw data returned from the contract.","","","","","","Tokens deposited by the caller.","","","","","","","","","","","","","","","","","","","Environment query-related types.","","","","","","","","","","Events.","Events emitted from the contract.","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Return the next identifier in sequence.","Return the next identifier in sequence.","","","","","","","Contract instance address.","Contract instance identifier.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Messages that can be emitted by contracts.","Messages emitted from the contract.","A collection of types for easier calling into existing SDK …","Read-only flag.","Storage-related types.","Testing helpers.","","","","","","Convert identifier to storage key representation.","Convert identifier to storage key representation.","Token types.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An account address.","Error.","","Size of an address in bytes.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Tries to create a new address from Bech32-encoded string.","Tries to create a new address from raw bytes.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Converts an address to Bech32 representation.","","","","","","","","","","","","","","","","","Signature kind.","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","Accounts queries.","Accounts queries.","Accounts API queries.","Accounts API responses.","Query an account’s balance.","An account’s balance of the given denomination.","Information about the current runtime block.","Information about the current runtime block.","Indication of a failing request.","A query request.","A query response.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An event emitted from the contract.","","","","","Unique code representing the event for the given module.","Arbitrary data associated with the event.","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Optional module name.","","","","","","","","Calls an arbitrary runtime method handler in a child …","Reply from a call message.","Call result.","","Messages can be emitted by contracts and are processed …","","Specifies when the caller (smart contract) wants to be …","","","","Replies to delivered messages.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Check whether the call result indicates a successful …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Instantiate call result.","","","","","","","","","","Returns the argument unchanged.","Assigned instance identifier.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","Kind of the store to use.","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Prefix that should be used for the underlying store.","","","","","","","","","","","","","","","","Token amount of given denomination in base units.","Name/type of the token.","","Maximum length of a denomination.","Denomination in native token.","","Token amount in base units.","","","","","","","","","","","","","","","","","","","Denomination of the token amount.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Raw representation of a denomination.","Whether the denomination represents the native token.","Creates a new token amount of the given denomination.","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,4,0,0,0,5,0,5,4,0,1,3,1,3,4,8,5,6,1,3,4,8,5,6,8,8,1,3,4,5,6,1,3,4,5,6,0,6,1,3,4,8,6,8,1,3,4,8,5,6,1,3,4,8,5,6,1,3,4,8,5,6,0,1,3,4,1,1,3,3,4,4,0,6,1,3,4,8,5,6,1,1,3,3,4,4,8,5,6,1,3,1,3,4,8,5,6,8,8,1,3,4,8,5,6,1,3,4,8,5,6,0,6,0,8,0,0,1,3,4,5,6,1,3,0,1,3,4,8,6,1,3,4,8,5,6,1,3,4,8,5,6,1,3,4,8,5,6,1,3,4,8,5,6,1,3,4,8,5,6,54,54,54,0,0,28,21,28,21,21,28,21,28,21,21,21,21,21,21,28,21,28,21,28,21,21,21,21,21,21,28,28,21,28,21,21,21,21,28,21,28,21,21,21,21,21,28,21,28,21,21,21,28,21,28,21,28,21,21,34,34,0,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,36,37,0,0,38,39,36,37,37,0,0,36,37,38,39,36,37,38,39,36,37,38,39,36,37,38,39,36,37,38,39,36,37,38,39,36,37,38,39,36,37,38,39,36,36,37,37,38,39,36,37,38,39,36,37,38,39,36,37,38,39,36,37,38,39,36,37,38,39,36,37,38,39,36,37,38,39,36,37,38,39,36,37,38,39,55,55,56,57,58,57,57,58,58,0,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,42,41,43,0,44,0,42,0,44,42,42,0,41,42,43,44,41,42,43,44,41,42,43,44,41,42,43,44,41,42,43,44,41,42,43,44,41,42,43,44,42,42,42,41,42,43,44,41,42,43,44,44,41,42,43,44,41,42,43,44,41,42,43,44,44,41,42,43,44,41,42,43,44,41,42,43,44,41,42,43,44,41,42,43,44,41,42,43,44,59,59,60,60,60,60,60,60,61,61,61,0,0,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,47,47,0,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,0,0,0,0,0,0,0,0,0,0,0,0,50,50,51,48,51,50,50,50,51,48,50,51,48,50,50,48,50,48,50,48,50,48,48,50,51,48,50,51,48,50,51,48,50,50,50,48,50,50,48,48,50,50,51,51,48,48,50,50,51,48,48,48,50,50,51,48,50,51,48,50,48,50,50,48,50,48,50,48,50,51,48,50,48,50,50,51,48,50,48,50,51,48,50,51,48,50,51,48,50,62],"f":"```````````{bd}{fd}{ce{}{}}00000000000``{bb}{ff}{hh}{jj}{ll}{{ce}n{}{}}0000``{{}b}{{}f}{{}h}{{}A`}{{}l}`{Abc{}}00000000000{Abn}00000`{{bb}Ad}{{ff}Ad}{{hh}Ad}{{ce}Ad{}{}}00000``{{bAf}Ah}{{fAf}Ah}{{hAf}Ah}{{A`Af}Ah}{{jAf}Ah}{{lAf}Ah}{db}{cc{}}{df}1{Ajh}2222{bb}{ff}{{}Ab}00000``{ce{}{}}00000{bAl}{fAl}{hAl}{A`Al}{jAl}{lAl}``````66666{b{{B`{An}}}}{f{{B`{An}}}}`{{}{{Bd{bBb}}}}{{}{{Bd{fBb}}}}{{}{{Bd{hBb}}}}{{}{{Bd{A`Bb}}}}{{}{{Bd{lBb}}}}{c{{Bd{e}}}{}{}}00000{Al{{Bd{bBb}}}}{Al{{Bd{fBb}}}}{Al{{Bd{hBb}}}}{Al{{Bd{A`Bb}}}}{Al{{Bd{jBb}}}}{Al{{Bd{lBb}}}}666666{cBf{}}00000{ce{}{}}00000```````{cBh{}}{Bj{{Bl{An}}}}{cAb{}}3333{c{{Bd{{C`{Bn}}}}}{}}{BjBj}{{ce}n{}{}}{{BjBj}Cb}{{}Bj}{Abc{}}000{Abn}0{ce{}{{Cf{Cd}}}}0{{BjBj}Ad}{{ce}Ad{}{}}0{{ChAf}Ah}0{{BjAf}Ah}{cc{}}{CjBj}1{Cl{{Bd{BjCh}}}}{{{Bl{An}}}{{Bd{BjCh}}}}{{}Ab}0{ce{}{}}0{BjAl}{{BjBj}{{Cn{Cb}}}}{BjD`}3{cD`{}}{{}{{Bd{BjBb}}}}{c{{Bd{e}}}{}{}}{{{Bl{An}}}{{Bd{Bjc}}}{}}1{Al{{Bd{BjBb}}}}22{cBf{}}099{{ce}{{Bd{n}}}{}Db}````::{DdDd}{{ce}n{}{}}{Abc{}}0{Abn}{cc{}}{{}Ab}{ce{}{}}0{Df{{Bd{Ddc}}}{}}<<91```````````11111111{DhDh}{DjDj}{DlDl}{DnDn}::::999999998888{{DhAf}Ah}{{DjAf}Ah}{{DlAf}Ah}{{DnAf}Ah}{DlDh}<<{DnDj}==<<<<;;;;{DhAl}{DjAl}{DlAl}{DnAl}????{c{{Bd{e}}}{}{}}000{Al{{Bd{DhBb}}}}{Al{{Bd{DjBb}}}}{Al{{Bd{DlBb}}}}{Al{{Bd{DnBb}}}}4444{cBf{}}000{ce{}{}}000``````````00{E`E`}{{ce}n{}{}}``{Abc{}}0{Abn}{{E`Af}Ah}{cc{}}{{}Ab}7{E`Al}`8>{Al{{Bd{E`Bb}}}}?:9````````````99999999{EbEb}{EdEd}{EfEf}{EhEh};;;;::::::::9999{{EdEd}Ad}{{ce}Ad{}{}}0{{EbAf}Ah}{{EdAf}Ah}{{EfAf}Ah}{{EhAf}Ah}===={EjEh}===={ce{}{}}000{EbAl}{EdAl}{EfAl}{EhAl}{EhAd}5555{c{{Bd{e}}}{}{}}000{Al{{Bd{EbBb}}}}{Al{{Bd{EdBb}}}}{Al{{Bd{EfBb}}}}{Al{{Bd{EhBb}}}}4444{cBf{}}000;;;;`````````````;;{ElEl}{{ce}n{}{}}{{}El}{Abc{}}0{Abn}{{ElAf}Ah}{cc{}}`{{}Ab}{ce{}{}}{ElAl}1{{}{{Bd{ElBb}}}}{c{{Bd{e}}}{}{}}{Al{{Bd{ElBb}}}}1=4```44{EnEn}<::9765{En{{Bl{An}}}}63{Df{{Bd{Enc}}}{}}4{cBf{}}8`````{{}Bj}000``````{F`Fb}{cBh{}}{Fd{{Bl{An}}}}{cAb{}}======{c{{Bd{{C`{Bn}}}}}{}}{FdFd}{F`F`}{{ce}n{}{}}0{{FdFd}Cb}{{F`F`}Cb}{{}Fd}{{}F`}{F`Fd}{Abc{}}00000{Abn}00{ce{}{{Cf{Cd}}}}0{{FdFd}Ad}{{F`F`}Ad}{{ce}Ad{}{}}000{{FdAf}Ah}0{{FfAf}Ah}0{{F`Af}Ah}0{FhFd}{cc{}}00{FjF`}0{Cl{{Bd{Fdc}}}{}}{{}Ab}00{ce{}{}}00{FdAl}{F`Al}{Fd{{C`{An}}}}{FdAd}{{FbFd}F`}{{FdFd}{{Cn{Cb}}}}{{F`F`}{{Cn{Cb}}}}77{cD`{}}00{{}{{Bd{FdBb}}}}{{}{{Bd{F`Bb}}}}{c{{Bd{e}}}{}{}}{{{Bl{An}}}{{Bd{Fdc}}}{}}11{Al{{Bd{FdBb}}}}{Al{{Bd{F`Bb}}}}333{cBf{}}00???{{ce}{{Bd{n}}}{}Db}`","c":[],"p":[[5,"CodeId",0],[1,"u64"],[5,"InstanceId",0],[6,"CallFormat",0],[6,"ExecutionResult",0],[5,"ExecutionOk",0],[1,"unit"],[5,"ExecutionContext",0],[1,"usize"],[1,"bool"],[5,"Formatter",601],[8,"Result",601],[6,"CallFormat",602],[6,"Value",603],[1,"u8"],[1,"array"],[6,"DecodeError",604],[6,"Result",605],[5,"TypeId",606],[10,"Fail",607],[5,"Address",164],[1,"slice"],[5,"u5",608],[5,"Vec",609],[6,"Ordering",610],[1,"char"],[10,"FromIterator",611],[6,"Error",164],[5,"Address",612],[1,"str"],[6,"Option",613],[5,"String",614],[10,"WriteBase32",608],[6,"SignatureKind",220],[1,"u32"],[6,"QueryRequest",240],[6,"QueryResponse",240],[6,"AccountsQuery",240],[6,"AccountsResponse",240],[5,"Event",334],[6,"Message",356],[6,"NotifyReply",356],[6,"Reply",356],[6,"CallResult",356],[6,"CallResult",615],[5,"InstantiateResult",457],[6,"StoreKind",479],[5,"BaseUnits",508],[1,"u128"],[5,"Denomination",508],[6,"Error",508],[5,"Denomination",616],[5,"BaseUnits",616],[15,"Failed",161],[15,"Balance",325],[15,"Balance",327],[15,"Error",328],[15,"BlockInfo",328],[15,"Failed",445],[15,"Call",447],[15,"Call",453],[15,"NameTooLong",600]],"b":[[191,"impl-Debug-for-Error"],[192,"impl-Display-for-Error"],[551,"impl-Display-for-Denomination"],[552,"impl-Debug-for-Denomination"],[553,"impl-Display-for-Error"],[554,"impl-Debug-for-Error"],[555,"impl-Display-for-BaseUnits"],[556,"impl-Debug-for-BaseUnits"],[561,"impl-From%3CBaseUnits%3E-for-BaseUnits"],[562,"impl-From%3C%26BaseUnits%3E-for-BaseUnits"]]}],\
["oasis_core_runtime",{"doc":"Oasis Core runtime SDK.","t":"FFEEEENNNNCEQCCCNNNNNCNNCNNCCCQCNNNNOQCQQCCOQECCNNNNNNCQNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCCCCCCCCCCCCCCFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCFSSKSNNHMHNNNNHNNNNNNNNNNNNSFSNNNNNNNNNNNNNNNNNNNNFFFFFFKNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNOMNOOHHONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNSSFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKKNMMNMMNMMMHHSFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFPSFFPGFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCOONNNNNNNNNNNNNNNNNNNNOONNCOOCONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHFSIFOONNNNONNNNNNNNNNONNNNNNNNNNNNONNNNNNOONNNNNNNNNNNNHNNPPPPPFFGPPPPPPPFFPFPPFFFFPPFFPPPGPFFPPPPPOOONOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNHHHHHSFFNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNOONOOONNNNNNNNNNNNNNSFNNNNNNNNNNNNNNONNNNNNNNONFFNNNNOONNNNNNNNNNNNONNONNNNNNOONNONNNNNNONNFGSFSSPCCNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNCONNNNNNNNNCOCCCCCOCNNNCNNNNNNNNNNNNNNCNNNFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNSIFNNNNNNNNONNNNNNONNNNNNNNNNPFFFPPFFFGPNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNONNNNNNNNNNNNNNNNNNNNNOONOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOONNNNNNNFFFFGPFFFFNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNSPFFFFPFFFPPPPPPPSSSFFFFFTTTTTTTTFFGFGGFGGFFFGPPFFFPPPPFFFOONOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOONOOOOOOOOOOOOONNOOOONOOOOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOPPFPPFSPFPSPGFGFPPPPGFGFPPPPPPGFKPPPKPPPKFPPPGPFFPGPPPPPPPNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNOOOOONNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOMNNNOONOOOMNONNNMOOONOOOONNONOOOOOMNNNNNNNNNNNNNNNNNNMNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNONNNNNNNNNNNNNNNNNNPFGFPPPGPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNOOONNNNNNNNNNNNNNNNNONNNNNFPFFFFFFFPFFFGFFPPPPPPPFFPPPFFGFIFPGFFFFFOOOOOOOOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOONNOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOFGPNCNNNNNNNNNNNNNNNNNNNNNNNNNCNNNCCNCNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFNNNNONNNNNNNNNNNNNNNNOONNNNNOONNOOOONNNNNNNNNNNNNFNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNSFSNNHNNHNNNHNNNNNCOHNNNNNOCNSFONNNNNNNNNONNNOONNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFIIFSIFFOOONNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNOONNNNNNNNNNNNOOOOOONNNNNNNNNNNNNNNNNNNNNNNNPPGPPPPFPPKNNNNNONNNNNNNNNNNNMNNNNNOONNNNNMMONMMNNNNNNNNNNMMMHNNFKFFNNNNNNONNNNNNNNNNNNNOMNNNNNNNONOONNNNNNNONNNNNNECCCCCCPPPPPFGPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNONNNNONNONOONNNONFGPPPFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKFIIFFKKNNNNNNNNNNNNNNNNMNNNNNNNNMMNNMNNNNNNOONNNNNNNNNNNNNNNNNFGFFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNONNNNNNNOOOOOOPGPFPPFPGPGPGFPFPFPPONNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNHHPGKPNNNNNNNNNNMNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNHPPPPPPPFGPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPFPPPPPPFGFINNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNKEMMCPIKPKPPPKIPFGKGFFFGPFINNNNNNNNNNNNNNNNNNNMMNNNNNNNNNNNNNNNMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNMMMNNNNNMMNNONNNNNNNNMMNNNNNNNNNNNNNNNNMMMMNNNNNONCNNONNNMNMMMNNNNMMNNNNMOMMCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNKMMFFFFFFFFFKFGFPNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOHNNOOOOONMNNNOMNNNOMNNNONNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNECCCCCCFNNOOONNNONONNONOOONNNNKFFFONNNNNNMNNNNNNNNNNNMNNNNNONNNNNNOONONNNONNNNNNONNNNNNFIFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNONNNNNNNNNNNNNNNOFINNNNNNNNNNNNONNNNONONSFNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNGFFFPPFPGPGFFPPPPPFPFPPPPPPPPPPPPPPPGPPPFGPPPPPPPPPPPPPPPPPPPPPPFPFPPPPPPPPPPPPPPPGFGPPPNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOONOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO","n":["BUILD_INFO","BuildInfo","Protocol","RpcDemux","RpcDispatcher","TxnDispatcher","borrow","borrow","borrow_mut","borrow_mut","cache","cbor","classify_noderef","common","config","consensus","deref","deref","deref","deref_mut","deref_mut","dispatcher","drop","drop","enclave_rpc","from","from","future","host","identity","impl_bytes","init","init","init","into","into","is_secure","key_format","macros","noderef_as","noderef_as_mut","policy","protocol","protocol_version","runtime_context","start_runtime","storage","transaction","try_from","try_from","try_into","try_into","type_id","type_id","types","version_from_cargo","vzip","vzip","Cache","CacheSet","borrow","borrow","borrow_mut","borrow_mut","check","clone","clone_into","commit","deref","deref","deref_mut","deref_mut","drop","drop","execute","from","from","init","init","into","into","new","query","to_owned","tree","tree_mut","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","bytes","crypto","key_format","logger","namespace","process","quantity","sgx","time","version","versioned","hash","mrae","signature","x25519","Hash","as_ref","base32_len","borrow","borrow_mut","check_base32","clone","clone_into","cmp","decode_atom","default","deref","deref_mut","digest_bytes","digest_bytes_list","drop","empty_hash","encode_atom","encode_hex","encode_hex_upper","eq","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","from_str","hash","init","into","into_cbor_value","is_empty","len","partial_cmp","size","to_owned","to_string","truncated","try_default","try_from","try_from_cbor_value","try_into","type_id","vzip","write_base32","zeroize","deoxysii","nonce","DeoxysII","KEY_SIZE","NONCE_SIZE","Opener","TAG_SIZE","borrow","borrow_mut","box_open","box_open","box_seal","deref","deref_mut","drop","from","generate_key_pair","init","into","new","open","open_into","seal","seal_into","try_from","try_into","type_id","vzip","zeroize","NONCE_SIZE","Nonce","TAG_SIZE","borrow","borrow_mut","clone","clone_into","deref","deref","deref_mut","drop","fmt","from","generate","increment","init","into","new","to_owned","try_from","try_into","type_id","vzip","MultiSigned","PrivateKey","PublicKey","Signature","SignatureBundle","Signed","Signer","as_ref","as_ref","base32_len","base32_len","blob","blob","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_base32","check_base32","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","encode_hex","encode_hex","encode_hex_upper","encode_hex_upper","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_str","from_str","from_test_seed","generate","hash","hash","hash","hash","hash","init","init","init","init","init","init","into","into","into","into","into","into","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","len","len","partial_cmp","partial_cmp","public","public","public_key","public_key","sign","sign","signature","signature","signature_context_with_chain_separation","signature_context_with_runtime_separation","signatures","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_default","try_default","try_default","try_default","try_default","try_from","try_from","try_from","try_from","try_from","try_from","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","verify","verify","verify","verify_raw","vzip","vzip","vzip","vzip","vzip","vzip","write_base32","write_base32","zeroize","zeroize","PRIVATE_KEY_LENGTH","PUBLIC_KEY_LENGTH","PrivateKey","PublicKey","as_ref","as_ref","base32_len","base32_len","borrow","borrow","borrow_mut","borrow_mut","check_base32","check_base32","clone","clone","clone_into","clone_into","default","default","deref","deref","deref_mut","deref_mut","drop","drop","encode_hex","encode_hex","encode_hex_upper","encode_hex_upper","eq","equivalent","equivalent","fmt","from","from","from","from","from","from","from","from_test_seed","generate","hash","init","init","into","into","into_cbor_value","into_cbor_value","public_key","to_owned","to_owned","try_default","try_default","try_from","try_from","try_from_cbor_value","try_from_cbor_value","try_into","try_into","type_id","type_id","vzip","vzip","write_base32","write_base32","zeroize","KeyFormat","KeyFormatAtom","decode","decode_atom","decode_atoms","encode","encode_atom","encode_atoms","encode_partial","prefix","size","size","get_logger","init_logger","NAMESPACE_SIZE","Namespace","as_ref","base32_len","borrow","borrow_mut","check_base32","clone","clone_into","cmp","default","deref","deref_mut","drop","encode_hex","encode_hex_upper","eq","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","from_str","hash","init","into","into_cbor_value","len","partial_cmp","to_owned","to_string","try_default","try_from","try_from_cbor_value","try_into","type_id","vzip","write_base32","zeroize","abort","Quantity","add","add","add","add_assign","add_assign","add_assign","borrow","borrow_mut","checked_div","checked_sub","clone","clone_into","cmp","default","deref","deref_mut","drop","eq","equivalent","equivalent","fmt","fmt","from","from","from","from","from","from","hash","init","into","into_cbor_value","is_empty","is_zero","mul","mul","mul","mul_assign","mul_assign","mul_assign","partial_cmp","to_owned","to_string","try_default","try_from","try_from_cbor_value","try_into","type_id","vzip","zero","EnclaveIdentity","Ias","MAX_QUOTE_AGE","MrEnclave","MrSigner","Pcs","Quote","QuotePolicy","VerifiedQuote","as_ref","as_ref","base32_len","base32_len","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_base32","check_base32","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","current","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","egetkey","encode_hex","encode_hex","encode_hex_upper","encode_hex_upper","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fortanix_test","from","from","from","from","from","from","from","from","from","from","from","from","from_str","from_str","hash","hash","hash","ias","ias","identity","init","init","init","init","init","init","into","into","into","into","into","into","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","is_fresh","len","len","mr_enclave","mr_signer","partial_cmp","partial_cmp","pcs","pcs","report_data","seal","timestamp","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_default","try_default","try_default","try_default","try_from","try_from","try_from","try_from","try_from","try_from","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","verify","vzip","vzip","vzip","vzip","vzip","vzip","write_base32","write_base32","zeroize","zeroize","egetkey","AVR","QUOTE_CONTEXT_LEN","QuoteContext","QuotePolicy","allowed_quote_statuses","body","borrow","borrow","borrow_mut","borrow_mut","certificate_chain","clone","clone","clone_into","clone_into","default","default","deref","deref","deref_mut","deref_mut","disabled","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","gid_blacklist","init","init","into","into","into_cbor_value","into_cbor_value","min_tcb_evaluation_data_number","signature","to_owned","to_owned","try_default","try_default","try_from","try_from","try_from_cbor_value","try_from_cbor_value","try_into","try_into","type_id","type_id","verify","vzip","vzip","BlacklistedFMSPC","ConfigurationAndSWHardeningNeeded","ConfigurationNeeded","DebugEnclave","Disabled","EnclaveTCBLevel","EnclaveTCBVersions","Error","Invalid","MalformedPCK","MalformedQEReport","MalformedReport","OutOfDate","OutOfDateConfigurationNeeded","ProductionEnclave","QEIdentity","QuoteBundle","QuoteParseError","QuotePolicy","Revoked","SWHardeningNeeded","SignedQEIdentity","SignedTCBInfo","TCBBundle","TCBComponent","TCBEvaluationDataNumberInvalid","TCBExpired","TCBInfo","TCBLevel","TCBMismatch","TCBOutOfDate","TCBParseError","TCBStatus","TCBVerificationFailed","TCBVersions","TDXModule","UnexpectedCertificateChain","UnsupportedAttestationKeyType","UnsupportedQEVendor","UpToDate","VerificationFailed","advisory_ids","advisory_ids","advisory_ids","as_fail","attributes","attributes","attributes_mask","attributes_mask","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","category","certificates","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","date","date","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","disabled","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","enclave_identity","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmspc","fmspc_blacklist","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","id","id","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","is_expired","issue_date","issue_date","isv_prod_id","isv_svn","min_tcb_evaluation_data_number","miscselect","miscselect_mask","mr_signer","mr_signer","next_update","next_update","pceid","pcesvn","qe_identity","quote","sgx_components","signature","signature","status","status","svn","tcb","tcb","tcb","tcb_comp_type","tcb_evaluation_data_number","tcb_evaluation_data_number","tcb_info","tcb_info","tcb_levels","tcb_levels","tcb_type","tcb_validity_period","tdx_components","tdx_module","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_default","try_default","try_default","try_default","try_default","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","verify","version","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","new_deoxysii","seal","unseal","insecure_posix_system_time","insecure_posix_time","PROTOCOL_VERSION","ProtocolVersions","Version","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","consensus_protocol","default","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","hash","hash","init","init","into","into","into_cbor_value","into_cbor_value","is_compatible_with","major","minor","new","patch","runtime_committee_protocol","runtime_host_protocol","to_owned","to_owned","try_default","try_default","try_from","try_from","try_from_cbor_value","try_from_cbor_value","try_into","try_into","type_id","type_id","vzip","vzip","VERSION_KEY","Versioned","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","equivalent","equivalent","fmt","from","hash","init","inner","into","into_cbor_value","new","to_owned","try_from","try_from_cbor_value","try_into","type_id","version","vzip","Config","Storage","borrow","borrow","borrow_mut","borrow_mut","cache_node_capacity","cache_value_capacity","clone","clone","clone_into","clone_into","default","default","deref","deref","deref_mut","deref_mut","drop","drop","features","fmt","fmt","freshness_proofs","from","from","init","init","into","into","persist_check_tx_state","storage","to_owned","to_owned","trust_root","try_from","try_from","try_into","try_into","type_id","type_id","version","vzip","vzip","BlockMetadata","Event","HEIGHT_LATEST","LightBlock","METHOD_META","MODULE_NAME","Staking","address","beacon","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","events_root","fmt","fmt","fmt","from","from","from","governance","height","init","init","init","into","into","into","into_cbor_value","into_cbor_value","into_cbor_value","keymanager","meta","registry","roothash","scheduler","staking","state","state_root","tendermint","to_owned","to_owned","to_owned","transaction","try_default","try_default","try_from","try_from","try_from","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_into","try_into","try_into","type_id","type_id","type_id","verifier","vzip","vzip","vzip","Address","COMMON_POOL_ADDRESS","FEE_ACC_ADDRESS","GOVERNANCE_DEPOSITS_ADDRESS","as_ref","base32_len","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_base32","clone","clone_into","cmp","decode_atom","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","encode_atom","encode_hex","encode_hex_upper","eq","equivalent","equivalent","fmt","fmt","from","from","from","from","from","from","from_bech32","from_pk","from_runtime_id","hash","init","init","init","init","into","into","into","into","into_cbor_value","new","partial_cmp","size","to_bech32","to_owned","try_default","try_from","try_from","try_from","try_from","try_from_cbor_value","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","write_base32","EPOCH_INVALID","EpochTime","EpochTimeState","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","epoch","eq","equivalent","equivalent","fmt","from","hash","height","init","into","into_cbor_value","to_owned","try_default","try_from","try_from_cbor_value","try_into","type_id","vzip","Abstain","CancelUpgradeProposal","ChangeParametersProposal","ConsensusParameterChanges","Invalid","No","ProposalContent","ProposalVote","UpgradeProposal","Vote","Yes","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cancel_upgrade","change_parameters","changes","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","enable_change_parameters_proposal","epoch","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","gas_costs","handler","hash","hash","hash","hash","hash","id","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","min_proposal_deposit","module","partial_cmp","proposal_id","stake_threshold","target","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_default","try_default","try_default","try_default","try_default","try_default","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upgrade","upgrade_cancel_min_epoch_diff","upgrade_min_epoch_diff","v","vote","voting_period","vzip","vzip","vzip","vzip","vzip","vzip","vzip","EnclavePolicySGX","EncryptedEphemeralSecret","EncryptedMasterSecret","EncryptedSecret","Error","InvalidSignature","PolicySGX","SignedEncryptedEphemeralSecret","SignedEncryptedMasterSecret","SignedPolicySGX","as_fail","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","checksum","ciphertexts","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","enclaves","epoch","epoch","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","generation","id","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","master_secret_rotation_interval","max_ephemeral_secret_age","may_query","may_replicate","new","new","policy","pub_key","runtime_id","runtime_id","secret","secret","secret","secret","serial","signature","signature","signatures","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","verify","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ATTESTATION_SIGNATURE_CONTEXT","AnyNode","Capabilities","CapabilityTEE","ConsensusAddress","ConsensusInfo","EntityWhitelist","EntityWhitelistConfig","EntityWhitelistRuntimeAdmissionPolicy","ExecutorParameters","GovernanceConsensus","GovernanceEntity","GovernanceInvalid","GovernanceRuntime","KindCompute","KindInvalid","KindKeyManager","LATEST_RUNTIME_DESCRIPTOR_VERSION","METHOD_PROVE_FRESHNESS","MODULE_NAME","MaxNodesConstraint","MinPoolSizeConstraint","Node","NodeRuntime","P2PInfo","ROLES_RESERVED","ROLE_COMPUTE_WORKER","ROLE_EMPTY","ROLE_KEY_MANAGER","ROLE_OBSERVER","ROLE_RESERVED_3","ROLE_STORAGE_RPC","ROLE_VALIDATOR","RolesMask","Runtime","RuntimeAdmissionPolicy","RuntimeGenesis","RuntimeGovernanceModel","RuntimeKind","RuntimeStakingParameters","SGXAttestation","SGXConstraints","SchedulingConstraints","StorageParameters","TCPAddress","TEEHardware","TEEHardwareIntelSGX","TEEHardwareInvalid","TLSAddress","TLSInfo","TxnSchedulerParameters","V0","V0","V1","V1","VRFInfo","ValidatorSetConstraint","VersionInfo","_deprecated_addresses","_deprecated_next_pub_key","active_deployment","address","address","addresses","addresses","admission_policy","allowed_stragglers","attestation","batch_flush_timeout","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bundle_checksum","capabilities","checkpoint_chunk_size","checkpoint_interval","checkpoint_num_kept","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","consensus","constraints","contains_enclave","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deployment_for_version","deployments","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","entities","entity_id","entity_id","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","executor","expiration","extra_info","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","genesis","get_runtime","governance_model","group_backup_size","group_size","hardware","has_tee","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","id","id","id","id","id","id","id","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","ip","key_manager","kind","limit","limit","matches","max_batch_size","max_batch_size_bytes","max_in_messages","max_liveness_fails","max_messages","max_missed_proposals_percent","max_nodes","max_nodes","min_in_message_fee","min_live_rounds_eval","min_live_rounds_percent","min_pool_size","p2p","partial_cmp","policy","port","propose_batch_timeout","pub_key","pub_key","quote","rak","rek","reward_bad_results","reward_equivocation","roles","round","round_timeout","runtimes","slashing","software_version","staking","state_root","storage","tee","tee","tee_hardware","thresholds","tls","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_decode_attestation","try_decode_tee","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","txn_scheduler","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","v","v","valid_from","validator_set","version","version","vrf","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","zone","height","quote","signature","allowed_quote_statuses","enclaves","enclaves","max_attestation_age","policy","AddEscrow","AlreadyCommitted","AnnotatedBlock","BadExecutorCommitment","BadProposerCommitment","Block","COMPUTE_RESULTS_HEADER_SIGNATURE_CONTEXT","CastVote","ComputeResultsHeader","DiscrepancyDetected","EXECUTOR_COMMITMENT_SIGNATURE_CONTEXT","EpochTransition","Error","ExecutorCommitment","ExecutorCommitmentFailure","ExecutorCommitmentHeader","FailureNone","FailureStateUnavailable","FailureUnknown","Governance","GovernanceMessage","Header","HeaderType","IncomingMessage","InsufficientVotes","Invalid","InvalidCommitteeKind","InvalidMessages","InvalidRound","InvalidRuntime","Message","MessageEvent","MessageValidator","NoCommittee","NoProposerCommitment","NoRuntime","NodeLookup","Normal","NotBasedOnCorrectBlock","NotInCommittee","OpenCommitment","Pool","RakSigInvalid","ReclaimEscrow","Registry","RegistryMessage","RoundFailed","RoundResults","RoundRoots","Staking","StakingMessage","State","StillWaiting","SubmitProposal","Suspended","Transfer","UpdateRuntime","Withdraw","add_executor_commitment","as_fail","bad_compute_entities","block","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","caller","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code","consensus_height","data","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encoded_hash","encoded_hash","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","failure","fee","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","good_compute_entities","hash","hash","hash","hash","hash","hash","hash","hash","hash","header","header","header","header_type","id","in_messages_hash","in_messages_hash","in_msgs_count","in_msgs_hash","in_msgs_hash","index","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","io_root","io_root","io_root","is_indicating_failure","is_indicating_failure","is_parent_of","is_success","messages","messages","messages_hash","messages_hash","messages_hash","module","mostly_equal","mostly_equal","namespace","new","new_empty_block","new_genesis_block","node","node_id","previous_hash","previous_hash","process_commitments","rak_signature","result","round","round","sign","sign","signature","source","state_root","state_root","state_root","tag","timestamp","to_dd_result","to_dd_result","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_vote","to_vote","tokens","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validate","validate_basic","validate_basic","validate_basic","validate_basic","validate_basic","verify","verify_rak","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","BackupWorker","Committee","CommitteeKind","CommitteeNode","ComputeExecutor","Invalid","Invalid","Role","Worker","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","from","hash","hash","init","init","init","init","into","into","into","into","into_cbor_value","into_cbor_value","kind","members","partial_cmp","partial_cmp","public_key","role","runtime_id","to_owned","to_owned","transaction_scheduler","try_from","try_from","try_from","try_from","try_from_cbor_value","try_from_cbor_value","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","valid_for","vzip","vzip","vzip","vzip","workers","Account","Add","AddEscrowResult","AllowanceChangeEvent","BurnEvent","CommissionRateBoundStep","CommissionRateStep","CommissionSchedule","DebondingDelegation","DebondingStart","Delegation","Escrow","EscrowAccount","EscrowEvent","Event","GeneralAccount","KindEntity","KindNodeCompute","KindNodeKeyManager","KindNodeValidator","KindRuntimeCompute","KindRuntimeKeyManager","Reclaim","ReclaimEscrow","ReclaimEscrowResult","RuntimeEquivocation","RuntimeIncorrectResults","RuntimeLiveness","SharePool","Slash","SlashReason","StakeAccumulator","StakeClaim","StakeThreshold","Take","ThresholdKind","Transfer","TransferEvent","TransferResult","Withdraw","WithdrawResult","account","account","active","allowance","allowance","allowance_change","allowances","amount","amount","amount","amount","amount","amount","amount","amount","amount","amount_change","amount_change","balance","balance","beneficiary","beneficiary","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","burn","claims","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","commission_schedule","constant","debond_end_time","debond_end_time","debonding","debonding_shares","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","escrow","escrow","escrow","escrow","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","freeze_interval","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","general","global","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","height","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","negative","new_shares","nonce","owner","owner","owner","owner","owner","partial_cmp","partial_cmp","rate","rate_max","rate_min","rates","remaining_shares","shares","shares","shares","stake_accumulator","start","start","to","to","to","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","total_shares","transfer","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tx_hash","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","active_shares","amount","amount","amount","amount","debond_end_time","debonding_amount","debonding_shares","escrow","escrow","escrow","new_shares","owner","owner","owner","owner","shares","ConsensusState","StateError","Unavailable","as_fail","beacon","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from","from_protocol","get","get","height","init","init","into","into","iter","iter","keymanager","new","prefetch_prefixes","prefetch_prefixes","registry","roothash","source","staking","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ImmutableState","MutableState","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","epoch","epoch_state","from","from","future_epoch","future_epoch_state","init","init","into","into","new","set_epoch_state","set_future_epoch_state","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ImmutableState","Status","borrow","borrow","borrow_mut","borrow_mut","checksum","clone","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","ephemeral_secret","eq","equivalent","equivalent","fmt","from","from","generation","id","init","init","into","into","into_cbor_value","is_initialized","is_secure","master_secret","new","nodes","policy","rotation_epoch","rsk","status","statuses","to_owned","try_default","try_from","try_from","try_from_cbor_value","try_into","try_into","type_id","type_id","vzip","vzip","ImmutableState","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","new","node","nodes","runtime","try_from","try_into","type_id","vzip","ImmutableState","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","last_round_results","new","past_round_roots","round_roots","state_root","try_from","try_into","type_id","vzip","ImmutableState","account","addresses","borrow","borrow_mut","common_pool","debonding_delegation","debonding_delegations","delegation","delegations","deref","deref_mut","drop","from","governance_deposits","init","into","last_block_fees","new","total_supply","try_from","try_into","type_id","vzip","BACKEND_NAME","LightBlockMeta","TENDERMINT_CONTEXT","borrow","borrow_mut","chain_id","clone","clone_into","decode_light_block","deref","deref_mut","drop","encode_light_block","fmt","from","get_state_root","init","into","merkle","signed_header","state_root_from_header","to_owned","try_from","try_from","try_into","type_id","validators","verifier","vzip","MAX_AUNTS","Proof","aunts","borrow","borrow_mut","compute_root_hash","default","deref","deref_mut","drop","fmt","from","index","init","into","into_cbor_value","leaf_hash","total","try_default","try_from","try_from_cbor_value","try_into","type_id","verify","vzip","NopVerifier","Verifier","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","events_at","from","from","handle","init","init","into","into","latest_height","latest_state","new","new","start","start","state_at","sync","try_from","try_from","try_into","try_into","type_id","type_id","unverified_state","verify","verify_for_query","vzip","vzip","Fee","Gas","MethodName","Proof","SIGNATURE_CONTEXT","SignedTransaction","SignedTransactionWithProof","Transaction","amount","blob","body","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","fee","fmt","fmt","fmt","fmt","from","from","from","from","gas","height","init","init","init","init","into","into","into","into","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","method","nonce","proof","raw_proof","signature","signed_tx","try_default","try_default","try_default","try_from","try_from","try_from","try_from","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","verify","vzip","vzip","vzip","vzip","Builder","ChainContextTransitionFailed","Error","FreshnessVerificationFailed","Internal","StateRoot","TransactionVerificationFailed","TrustRoot","TrustedStateLoadingFailed","VerificationFailed","Verifier","as_fail","borrow","borrow","borrow_mut","borrow_mut","chain_context","clone","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","equivalent","events_at","fmt","fmt","fmt","from","from","hash","height","init","init","into","into","into_cbor_value","latest_height","latest_state","runtime_id","source","state_at","sync","to_owned","to_string","try_default","try_from","try_from","try_from_cbor_value","try_into","try_into","type_id","type_id","unverified_state","verify","verify_for_query","verify_state_freshness","vzip","vzip","Dispatcher","Initializer","PostInitState","PreInitState","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","consensus_verifier","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","from","from","from","identity","init","init","init","init","into","into","into","new","protocol","queue_request","rpc_demux","rpc_dispatcher","start","try_from","try_from","try_from","try_into","try_into","try_into","txn_dispatcher","type_id","type_id","type_id","vzip","vzip","vzip","Context","client","context","demux","dispatcher","session","types","CallFailed","DecodeError","Dropped","ExpectedCloseMessage","ExpectedResponseMessage","RpcClient","RpcClientError","Transport","Unknown","UnsupportedRpcKind","as_fail","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from","from","init","init","insecure_call","into","into","new_runtime","secure_call","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","update_enclaves","update_nodes","update_quote_policy","update_runtime_id","vzip","vzip","Context","borrow","borrow_mut","consensus_verifier","deref","deref_mut","drop","from","identity","init","into","is_secure","new","runtime","session_info","try_from","try_into","type_id","untrusted_local_storage","vzip","Demux","Error","MalformedPayload","MalformedRequestMethod","MaxConcurrentSessions","MultiplexedSession","Other","as_fail","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","close","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","from","from","from","from","from","info","init","init","init","into","into","into","new","process_data","process_frame","reset","source","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","write_message","ContextInitializer","Dispatcher","KeyManagerQuotePolicyHandler","KeyManagerStatusHandler","Method","MethodDescriptor","MethodHandler","MethodHandlerDispatch","add_method","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","dispatch","dispatch","drop","drop","drop","fmt","from","from","from","get_descriptor","handle","handle_km_quote_policy_update","handle_km_status_update","init","init","init","init","into","into","into","kind","name","new","set_context_initializer","set_keymanager_quote_policy_update_handler","set_keymanager_status_update_handler","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Builder","RAKBinding","Session","SessionInfo","V0","V1","binding","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_initiator","build_responder","clone","clone","clone_into","clone_into","close","consensus_verifier","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","fmt","from","from","from","from","get_node","get_quote_policy","get_remote_enclaves","get_remote_runtime_id","init","init","init","init","into","into","into","into","into_cbor_value","is_closed","is_connected","is_connected_to","local_identity","process_data","quote_policy","rak_binding","rak_pub","remote_enclaves","remote_runtime_id","session_info","set_remote_node","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from_cbor_value","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","verified_quote","verify","verify_quote","vzip","vzip","vzip","vzip","write_message","avr","binding","binding","quote","rak_pub","rak_pub","BadPeer","Body","Close","Error","Error","Failure","Frame","InsecureQuery","Kind","LocalQuery","Message","NoiseSession","PeerFeedback","Request","Request","Response","Response","SessionID","Success","Success","args","as_ref","base32_len","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_base32","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode_hex","encode_hex_upper","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_str","hash","hash","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","len","message","method","partial_cmp","payload","random","session","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_default","try_default","try_default","try_default","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","untrusted_plaintext","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write_base32","zeroize","block_on","new_tokio_runtime","BadResponse","Error","Host","Other","as_fail","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","from","identity","init","into","source","to_string","try_from","try_into","type_id","vzip","Identity","borrow","borrow_mut","box_open","default","deref","deref_mut","drop","from","init","into","new","public","public_rak","public_rek","quote","quote_policy","rak_matches","sign","try_from","try_into","type_id","verify_binding","vzip","start_runtime","BadTEEConstraints","HardwareMismatch","MissingRuntimeDescriptor","NoDeployment","NoKeyManager","PolicyMismatch","PolicyNotPublished","PolicyVerifier","PolicyVerifierError","StatusMismatch","StatusNotPublished","as_fail","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","init","init","into","into","key_manager","key_manager_policy","key_manager_status","new","quote_policy","to_string","try_from","try_from","try_into","try_into","type_id","type_id","verify_key_manager_policy","verify_key_manager_status","verify_quote_policy","vzip","vzip","AlreadyInitialized","AttestationRequired","ChannelClosed","HostInfo","HostInfoNotConfigured","IncompatibleConsensusBackend","InvalidResponse","InvalidRuntimeId","MessageTooLarge","MethodNotSupported","Protocol","ProtocolError","ProtocolUntrustedLocalStorage","Stream","as_fail","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_host","call_host_async","clone","clone_into","consensus_backend","consensus_chain_context","consensus_protocol_version","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","ensure_initialized","fmt","fmt","fmt","from","from","from","from","get","get_config","get_host_info","get_identity","get_runtime_id","identity","init","init","init","init","insert","into","into","into","into","local_config","new","runtime_id","send_response","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","KeyValue","MKVS","get","insert","mkvs","Delete","Depth","FallibleMKVS","IO","ImmutableMKVS","Insert","Internal","Invalid","Iterator","Key","Leaf","LogEntry","LogEntryKind","MKVS","NodeBox","OverlayTree","Prefix","Root","RootType","State","Tree","WriteLog","as_ref","base32_len","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","cache_contains_key","cache_contains_key","cache_contains_key","cache_contains_key","cache_contains_key","check_base32","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","commit","commit","commit","commit","commit","commit","commit_both","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","encode_hex","encode_hex_upper","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","error","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","get","get","get","get","get","get","get","get","get_key","get_value","hash","hash","hash","init","init","init","init","init","init","init","init","insert","insert","insert","insert","insert","insert","into","into","into","into","into","into","into","into","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","is_valid","iter","iter","iter","iter","iter","iter","iter","iter","key","kind","marshal","marshal_binary","marshal_binary","namespace","new","new","new","next","partial_cmp","prefetch_prefixes","prefetch_prefixes","prefetch_prefixes","prefetch_prefixes","prefetch_prefixes","prefetch_prefixes","prefetch_prefixes","remove","remove","remove","remove","remove","remove","rewind","root_type","seek","set_prefetch","sync","to_owned","to_owned","to_owned","to_owned","to_owned","try_default","try_default","try_default","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unmarshal_binary","unmarshal_binary","value","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write_base32","Marshal","marshal_binary","unmarshal_binary","GetPrefixesRequest","GetRequest","HostReadSyncer","IterateRequest","NoopReadSyncer","Proof","ProofResponse","ProofVerifier","RawProofEntry","ReadSync","StatsCollector","SyncerError","TreeID","Unsupported","arbitrary","arbitrary_take_rest","as_any","as_any","as_any","as_any","as_fail","as_ref","base32_len","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_base32","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode_hex","encode_hex_upper","entries","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","include_siblings","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","key","key","limit","merge_verified_subtree","new","new","position","prefetch","prefixes","proof","root","size_hint","sync_get","sync_get","sync_get","sync_get","sync_get_count","sync_get_prefixes","sync_get_prefixes","sync_get_prefixes","sync_get_prefixes","sync_get_prefixes_count","sync_iterate","sync_iterate","sync_iterate","sync_iterate","sync_iterate_count","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","tree","tree","tree","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","untrusted_root","verify_proof","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write_base32","Context","context","dispatcher","rwset","tags","tree","types","Context","borrow","borrow_mut","check_only","consensus_block","consensus_state","deref","deref_mut","drop","epoch","from","header","init","into","max_messages","new","protocol","round_results","runtime_state","try_from","try_into","type_id","vzip","Dispatcher","ExecuteBatchResult","ExecuteTxResult","NoopDispatcher","block_tags","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check_batch","check_batch","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","execute_batch","execute_batch","finalize","from","from","from","in_msgs_count","init","init","init","into","into","into","messages","output","query","results","schedule_and_execute_batch","schedule_and_execute_batch","set_abort_batch_flag","tags","try_from","try_from","try_from","try_into","try_into","try_into","tx_reject_hashes","type_id","type_id","type_id","vzip","vzip","vzip","CoarsenedKey","CoarsenedSet","ReadWriteSet","as_ref","base32_len","borrow","borrow","borrow_mut","borrow_mut","check_base32","clone","clone","clone_into","clone_into","default","default","deref","deref","deref_mut","deref_mut","drop","drop","encode_hex","encode_hex_upper","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","granularity","init","init","into","into","into_cbor_value","into_cbor_value","read_set","to_owned","to_owned","try_default","try_default","try_from","try_from","try_from_cbor_value","try_from_cbor_value","try_into","try_into","type_id","type_id","vzip","vzip","write_base32","write_set","Tag","Tags","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","fmt","from","init","into","key","new","to_owned","try_from","try_into","tx_hash","type_id","value","vzip","TAG_BLOCK_TX_HASH","Tree","add_block_tags","add_input","add_output","borrow","borrow_mut","commit","deref","deref_mut","drop","from","init","into","new","try_from","try_into","type_id","vzip","TxnBatch","borrow","borrow_mut","clone","clone_into","default","deref","deref","deref_mut","deref_mut","drop","eq","equivalent","equivalent","fmt","from","from","from","init","into","into_cbor_value","new","to_owned","try_default","try_from","try_from_cbor_value","try_into","type_id","vzip","Body","CheckTxMetadata","CheckTxResult","ComputedBatch","Consensus","Empty","Error","Error","EventKind","Execute","ExecutionMode","FeatureScheduleControl","Features","Governance","HostFetchBlockMetadataTxRequest","HostFetchBlockMetadataTxResponse","HostFetchConsensusBlockRequest","HostFetchConsensusBlockResponse","HostFetchConsensusEventsRequest","HostFetchConsensusEventsRequest","HostFetchConsensusEventsResponse","HostFetchConsensusEventsResponse","HostFetchGenesisHeightRequest","HostFetchGenesisHeightResponse","HostFetchTxBatchRequest","HostFetchTxBatchResponse","HostIdentityRequest","HostIdentityResponse","HostLocalStorageGetRequest","HostLocalStorageGetResponse","HostLocalStorageSetRequest","HostLocalStorageSetResponse","HostProveFreshnessRequest","HostProveFreshnessResponse","HostRPCCallRequest","HostRPCCallResponse","HostStorageEndpoint","HostStorageSyncRequest","HostStorageSyncResponse","Invalid","Message","MessageType","ProofResponse","Registry","Request","Response","RootHash","Runtime","RuntimeAbortRequest","RuntimeAbortResponse","RuntimeCapabilityTEERakAvrRequest","RuntimeCapabilityTEERakAvrResponse","RuntimeCapabilityTEERakInitRequest","RuntimeCapabilityTEERakInitResponse","RuntimeCapabilityTEERakQuoteRequest","RuntimeCapabilityTEERakQuoteResponse","RuntimeCapabilityTEERakReportRequest","RuntimeCapabilityTEERakReportResponse","RuntimeCheckTxBatchRequest","RuntimeCheckTxBatchResponse","RuntimeConsensusSyncRequest","RuntimeConsensusSyncResponse","RuntimeExecuteTxBatchRequest","RuntimeExecuteTxBatchResponse","RuntimeInfoRequest","RuntimeInfoRequest","RuntimeInfoResponse","RuntimeInfoResponse","RuntimeKeyManagerQuotePolicyUpdateRequest","RuntimeKeyManagerQuotePolicyUpdateResponse","RuntimeKeyManagerStatusUpdateRequest","RuntimeKeyManagerStatusUpdateResponse","RuntimeLocalRPCCallRequest","RuntimeLocalRPCCallResponse","RuntimePingRequest","RuntimeQueryRequest","RuntimeQueryResponse","RuntimeRPCCallRequest","RuntimeRPCCallResponse","RuntimeShutdownRequest","Schedule","Staking","StorageSyncRequest","StorageSyncRequestWithEndpoint","StorageSyncResponse","SyncGet","SyncGetPrefixes","SyncIterate","as_fail","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code","consensus_backend","consensus_chain_context","consensus_protocol_version","default","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","endpoint","eq","eq","equivalent","equivalent","equivalent","equivalent","error","events","features","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","hash","header","height","id","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","initial_batch_size","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","io_write_log","key_manager_master_secret_rotation","key_manager_quote_policy_updates","key_manager_status_updates","kind","local_config","message","message_type","messages","meta","module","new","priority","protocol_version","rak_sig","request","runtime_id","runtime_version","same_block_consensus_validation","schedule_control","sender","sender_seq","sender_state_seq","state_write_log","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","args","avr","batch","batch","blob","block","block","block","consensus_block","consensus_block","consensus_block","data","endpoint","epoch","epoch","epoch","header","height","height","height","height","height","in_msgs","inputs","inputs","io_root","key","key","kind","kind","limit","max_messages","max_messages","max_messages","method","mode","node","node_id","nodes","nonce","offset","peer_feedback","policy","proof","proof","quote","rak_pub","rek_pub","report","request","request","request","response","response","response","results","round_results","signature","signed_tx","signed_tx","status","target_info","tx_hashes","tx_input_root","tx_input_write_log","tx_reject_hashes","value","value"],"q":[[0,"oasis_core_runtime"],[58,"oasis_core_runtime::cache"],[94,"oasis_core_runtime::common"],[105,"oasis_core_runtime::common::crypto"],[109,"oasis_core_runtime::common::crypto::hash"],[159,"oasis_core_runtime::common::crypto::mrae"],[161,"oasis_core_runtime::common::crypto::mrae::deoxysii"],[188,"oasis_core_runtime::common::crypto::mrae::nonce"],[211,"oasis_core_runtime::common::crypto::signature"],[405,"oasis_core_runtime::common::crypto::x25519"],[473,"oasis_core_runtime::common::key_format"],[485,"oasis_core_runtime::common::logger"],[487,"oasis_core_runtime::common::namespace"],[530,"oasis_core_runtime::common::process"],[531,"oasis_core_runtime::common::quantity"],[582,"oasis_core_runtime::common::sgx"],[773,"oasis_core_runtime::common::sgx::egetkey"],[774,"oasis_core_runtime::common::sgx::ias"],[832,"oasis_core_runtime::common::sgx::pcs"],[1227,"oasis_core_runtime::common::sgx::seal"],[1230,"oasis_core_runtime::common::time"],[1232,"oasis_core_runtime::common::version"],[1292,"oasis_core_runtime::common::versioned"],[1319,"oasis_core_runtime::config"],[1363,"oasis_core_runtime::consensus"],[1447,"oasis_core_runtime::consensus::address"],[1533,"oasis_core_runtime::consensus::beacon"],[1562,"oasis_core_runtime::consensus::governance"],[1759,"oasis_core_runtime::consensus::keymanager"],[1995,"oasis_core_runtime::consensus::registry"],[2878,"oasis_core_runtime::consensus::registry::SGXAttestation"],[2881,"oasis_core_runtime::consensus::registry::SGXConstraints"],[2886,"oasis_core_runtime::consensus::roothash"],[3414,"oasis_core_runtime::consensus::scheduler"],[3505,"oasis_core_runtime::consensus::staking"],[4259,"oasis_core_runtime::consensus::staking::EscrowEvent"],[4276,"oasis_core_runtime::consensus::state"],[4323,"oasis_core_runtime::consensus::state::beacon"],[4356,"oasis_core_runtime::consensus::state::keymanager"],[4407,"oasis_core_runtime::consensus::state::registry"],[4424,"oasis_core_runtime::consensus::state::roothash"],[4442,"oasis_core_runtime::consensus::state::staking"],[4466,"oasis_core_runtime::consensus::tendermint"],[4495,"oasis_core_runtime::consensus::tendermint::merkle"],[4520,"oasis_core_runtime::consensus::tendermint::verifier"],[4559,"oasis_core_runtime::consensus::transaction"],[4646,"oasis_core_runtime::consensus::verifier"],[4710,"oasis_core_runtime::dispatcher"],[4761,"oasis_core_runtime::enclave_rpc"],[4768,"oasis_core_runtime::enclave_rpc::client"],[4816,"oasis_core_runtime::enclave_rpc::context"],[4836,"oasis_core_runtime::enclave_rpc::demux"],[4893,"oasis_core_runtime::enclave_rpc::dispatcher"],[4956,"oasis_core_runtime::enclave_rpc::session"],[5045,"oasis_core_runtime::enclave_rpc::session::RAKBinding"],[5051,"oasis_core_runtime::enclave_rpc::types"],[5277,"oasis_core_runtime::future"],[5279,"oasis_core_runtime::host"],[5302,"oasis_core_runtime::identity"],[5326,"oasis_core_runtime::init"],[5327,"oasis_core_runtime::policy"],[5374,"oasis_core_runtime::protocol"],[5461,"oasis_core_runtime::storage"],[5466,"oasis_core_runtime::storage::mkvs"],[5725,"oasis_core_runtime::storage::mkvs::marshal"],[5728,"oasis_core_runtime::storage::mkvs::sync"],[6004,"oasis_core_runtime::transaction"],[6011,"oasis_core_runtime::transaction::context"],[6034,"oasis_core_runtime::transaction::dispatcher"],[6091,"oasis_core_runtime::transaction::rwset"],[6150,"oasis_core_runtime::transaction::tags"],[6173,"oasis_core_runtime::transaction::tree"],[6192,"oasis_core_runtime::transaction::types"],[6221,"oasis_core_runtime::types"],[6713,"oasis_core_runtime::types::Body"],[6781,"core::result"],[6782,"core::any"],[6783,"std::sync::mutex"],[6784,"alloc::sync"],[6785,"core::cell"],[6786,"alloc::rc"],[6787,"bech32"],[6788,"alloc::vec"],[6789,"core::cmp"],[6790,"core::iter::traits::collect"],[6791,"core::fmt"],[6792,"core::fmt"],[6793,"core::hash"],[6794,"oasis_cbor_value::values"],[6795,"core::option"],[6796,"alloc::string"],[6797,"oasis_cbor"],[6798,"bech32"],[6799,"x25519_dalek::x25519"],[6800,"deoxysii"],[6801,"core::convert"],[6802,"core::convert"],[6803,"log"],[6804,"sgx_isa"],[6805,"failure"],[6806,"serde::de"],[6807,"chrono::offset::utc"],[6808,"chrono::datetime"],[6809,"std::time"],[6810,"core::clone"],[6811,"core::cmp"],[6812,"oasis_cbor::decode"],[6813,"core::error"],[6814,"core::any"],[6815,"alloc::collections::btree::map"],[6816,"tendermint::chain::id"],[6817,"tendermint::block::signed_header"],[6818,"tendermint_proto::tendermint::v0_37::types"],[6819,"tendermint::merkle"],[6820,"core::future::future"],[6821,"core::pin"],[6822,"tokio::runtime::handle"],[6823,"oasis_cbor::encode"],[6824,"std::collections::hash::set"],[6825,"tokio::sync::mutex"],[6826,"std::io"],[6827,"core::marker"],[6828,"core::fmt"],[6829,"arbitrary::error"],[6830,"core::sync::atomic"],[6831,"alloc::collections::vec_deque"],[6832,"tokio::runtime::task::error"]],"d":["","Runtime build information.","","","","","","","","","In-memory cache of trees.","","","Common types.","Runtime configuration.","Consensus service interfaces.","","","","","","Runtime call dispatcher.","","","Secure inter-enclave RPC.","Returns the argument unchanged.","Returns the argument unchanged.","Helper functions to use with the asynchronous Tokio …","Host interface.","Runtime attestation key handling.","Define a byte array-like type.","Runtime initialization.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","True iff the build can provide integrity and …","Define a KeyFormat from KeyFormatAtom and a prefix.","","","","Consensus SGX and quote policy handling.","Runtime side of the worker-host protocol.","Supported runtime protocol version.","Extract custom runtime context from a dispatcher context.","","Runtime storage interfaces and implementations.","Runtime transaction processing.","","","","","","","Types used by the worker-host protocol.","","","","Cached storage tree with an associated root.","A set of storage tree caches, one for each storage …","","","","","Cache used for checking transactions.","","","Commits a specific version and root as being stored by the …","","","","","","","Cache used for executing transactions.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new empty cache set.","Cache used for queries.","","Reference to the cached tree.","Mutable reference to the cached tree.","","","","","","","","","Byte array type helpers.","Cryptographic primitives.","","Logging subsystem for runtimes.","Chain namespace.","Process-related helpers.","An arbitrary precision unsigned integer.","SGX-specific functionality.","Runtime time source.","Protocol and runtime versioning.","","Hash type.","MRAE primitives.","Signature types.","CBOR serializable X25519 types.","A 32-byte SHA-512/256 hash.","","","","","","","","","","","","","Compute a digest of the passed slice of bytes.","Compute a digest of the passed slices of bytes.","","Hash of an empty string.","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","Returns true if the hash is of an empty string.","Size of this object in bytes.","","","","","Hash truncated to the given number of bytes.","","","","","","","","","Deoxys-II-256-128 MRAE primitives implementation.","Nonce utility used to ensure nonces are safely incremented.","Deoxys-II-256-128 state.","Size of the Deoxys-II-256-128 key in bytes.","Size of the nonce in bytes.","An abstract Deoxys-II-256-128 box opener.","Size of the authentication tag in bytes.","","","Unboxes (“opens”) the provided additional data and …","Unboxes (“opens”) the provided additional data and …","Boxes (“seals”) the provided additional data and …","","","","Returns the argument unchanged.","Generates a public/private key pair suitable for use with …","","Calls <code>U::from(self)</code>.","Creates a new instance using the provided <code>key</code>.","Decrypts and authenticates ciphertext, authenticates the …","Like <code>DeoxysII::open</code> but writes the plaintext into <code>plaintext</code>…","Encrypts and authenticates plaintext, authenticates the …","Like <code>DeoxysII::seal</code> but seals into <code>ciphertext_with_tag</code>, …","","","","","","Size of the nonce in bytes. Size of the nonce in bytes.","120 bit nonce with a 88 bit tag and 32 bit counter. If the …","Size of tag portion of the nonce in bytes. These bytes …","","","","","","","","","","Returns the argument unchanged.","Generate a random nonce.","Adds one to the nonce, affecting only the last 32 counting …","","Calls <code>U::from(self)</code>.","Create a new nonce.","","","","","","Blob signed by multiple public keys.","An Ed25519 private key.","An Ed25519 public key.","An Ed25519 signature.","A signature bundled with a public key.","Blob signed with one public key.","A abstract signer.","","","","","Signed blob.","Signed blob.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Construct a private key from bytes returned by <code>to_bytes</code>.","","","Generate a new private key from a test key seed.","Generates a new private key pair.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Size of this object in bytes.","Size of this object in bytes.","","","Returns the public key corresponding to the signer.","","Returns the public key.","Public key that produced the signature.","Generates a signature over the context and message.","","Signature over the blob.","Actual signature.","Extends signature context with additional domain …","Extends signature context with additional domain …","Signatures over the blob.","Convert this private key into bytes.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Verify signature.","Returns true iff the signature is valid.","Verify returns true iff the signature is valid over the …","Verify signature without applying domain separation.","","","","","","","","","","","The length of an X25519 private key, in bytes.","The length of an X25519 public key, in bytes.","A CBOR serializable Diffie-Hellman X25519 private key.","A CBOR serializable Diffie-Hellman X25519 public key.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Load private key from a byte array.","Returns the argument unchanged.","","Load public key from a byte array.","Returns the argument unchanged.","Given an X25519 private key, compute its corresponding …","Generate a new private key from a test key seed.","Generate a new private key.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Compute corresponding public key.","","","","","","","","","","","","","","","","","","A key formatting helper trait to be used together with …","Part of the KeyFormat to be used with key-value backends …","Decode the given key format from data.","","Decode the given key format from data (without prefix).","Encode the given key format.","","Encode the given key format into a set of atoms.","Encode the first few atoms in the key format.","The prefix that identifies the key format.","The minimum size of the encoded key.","","Get the logger.","Initialize the global slog_stdlog adapter to allow logging …","Size of the namespace in bytes.","Chain namespace.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","Size of this object in bytes.","","","","","","","","","","","","Aborts the process via <code>std::process::abort</code>, but also …","An arbitrary precision unsigned integer.","","","","","","","","","Divides two numbers, checking for underflow, overflow and …","Subtracts two numbers, checking for underflow. If …","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Enclave identity.","","Maximum age of a quote from the viewpoint of the enclave.","Enclave hash (MRENCLAVE).","Enclave signer hash (MRSIGNER).","","An unverified SGX remote attestation quote, depending on …","Quote validity policy.","A remote attestation quote that has undergone verification.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","SGX per-CPU package sealing key accessor.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Intel Attestation Service (IAS) attestation verification …","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Whether the quote should be considered fresh.","Size of this object in bytes.","Size of this object in bytes.","","","","","Intel Provisioning Certification Services (PCS) quote …","","","Wrappers for sealing secrets to the enclave in cold …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Verify the remote attestation quote.","","","","","","","","","","","egetkey returns a 256 bit key suitable for sealing secrets …","Attestation verification report.","","The purpose of <code>QuoteContext</code> is to prevent quotes from …","Quote validity policy.","Allowed quote statuses.","","","","","","","","","","","","","","","","","Whether IAS quotes are disabled and will always be …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","List of blocked platform EPID group IDs.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","The minimum TCB evaluation data number that should be …","","","","","","","","","","","","","","Verify attestation report.","","","","","","","","An enclave TCB level.","Enclave TCB versions.","Possible errors returned by this module.","","","","","","","","QE identity body.","An attestation quote together with the TCB bundle required …","","Quote validity policy.","","","A signed QE identity structure.","A signed TCB info structure.","The TCB bundle contains all the required components to …","A TCB component.","","","TCB info body.","A platform TCB level.","","","","TCB status.","","TCB versions.","A representation of the properties of Intel’s TDX SEAM …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether PCS quotes are disabled and will always be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A list of hexadecimal encoded FMSPCs specifying which …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Whether the quote with timestamp <code>ts</code> is expired.","","","","","Minimum TCB evaluation data number that is considered to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Validity (in days) of the TCB collateral.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Verify the quote bundle.","","","","","","","","","","","","","","","","","","Creates a new Deoxys-II instance initialized with an SGX …","Seal a secret to the enclave.","Unseal a previously sealed secret to the enclave.","","Returns the number of seconds since the UNIX epoch.  The …","","Protocol versions.","A protocol or runtime version.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Checks if two versions are compatible.","","","Creates a new version with given major, minor, and patch …","","","","","","","","","","","","","","","","","","Version key used in serialized form.","A generic versioned serializable data structure.","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","Create a new versioned structure.","","","","","","","","Global runtime configuration.","Storage-related configuration.","","","","","The maximum number of tree nodes held by the cache before …","The total size, in bytes, of values held by the cache …","","","","","","","","","","","","","Advertised runtime features.","","","Whether TEE freshness is verified with freshness proofs.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Whether storage state should be persisted between …","Storage configuration.","","","Optional trust root for consensus layer integrity …","","","","","","","Semantic runtime version.","","","BlockMetadata contains additional metadata related to the …","An event emitted by the consensus layer.","The height that represents the most recent block height.","Light consensus block.","","A unique module name for the consensus module.","","Consensus account address structures.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Governance structures.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Registry structures.","Consensus roothash structures.","Scheduler structures.","Consensus staking structures.","Consensus state wrappers.","State root after executing all logic in the block.","Tendermint consensus layer backend.","","","","","","","","","","","","","","","","","","","Trait for consensus layer verification.","","","","A staking account address.","Common pool reserved address.","Per-block fee accumulator reserved address.","Governance deposits reserved address.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Tries to create a new address from Bech32-encoded string.","Creates a new address from a public key.","Creates a new runtime address.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Creates a new address from a context, version and data.","","","Converts an address to Bech32 representation.","","","","","","","","","","","","","","","","","","","","","An invalid epoch time.","The number of intervals (epochs) since a fixed instant in …","The epoch state.","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","Abstained.","Cancel proposal content.","Change parameters proposal content.","","Invalid vote that should never be explicitly set.","No vote.","Consensus layer governance proposal content.","Vote for a proposal.","Upgrade proposal content.","A governance vote.","Yes Vote.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Unique identifier of a proposal.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Proposal vote.","","","","","","","","","Per enclave key manager access control policy.","Encrypted ephemeral secret.","Encrypted master secret.","A secret encrypted with Deoxys-II MRAE algorithm.","Errors emitted by the key manager module.","","Key manager access control policy.","Signed encrypted ephemeral secret (RAK).","Signed encrypted master secret (RAK).","Signed key manager access control policy.","","","","","","","","","","","","","","","","","","","","Checksum for validating decrypted secret.","A map of REK encrypted secrets.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Epoch time in which the secret was created.","Epoch time to which the ephemeral secret belongs.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Generation of the secret.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Public key to derive the symmetric key for decryption.","Runtime ID of the key manager.","Runtime ID of the key manager.","Encrypted secret.","Encrypted secret.","Encrypted master secret.","Encrypted ephemeral secret.","","Signature of the encrypted master secret.","Signature of the encrypted ephemeral secret.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Verify the signatures.","","","","","","","","","","Attestation signature context.","Allow any node to register.","Represents a node’s capabilities.","Represents the node’s TEE capability.","Represents a consensus address that includes an ID and a …","Node’s consensus member information.","Allow only the whitelisted entities’ nodes to register.","Entity whitelist configuration.","Policy that allows only whitelisted entities’ nodes to …","Parameters for the executor committee.","Consensus governance model.","Entity governance model.","Invalid model that should never be explicitly set.","Runtime governance model.","Generic compute runtime.","Invalid runtime that should never be explicitly set.","Key manager runtime.","The latest entity descriptor version that should be used …","The method name for freshness proofs.","A unique module name for the registry module.","A constraint which specifies that only the given number of …","A constraint which specifies the minimum required …","Node registry descriptor.","Represents the runtimes supported by a given Oasis node.","Node’s P2P information.","","Compute worker role.","Empty roles mask.","Key manager role.","Observer role.","Public consensus RPC services worker role.","Public storage RPC services worker role.","Validator role.","TEE hardware implementation.","Runtime.","Specification of which nodes are allowed to register for a …","Runtime genesis information that is used to initialize …","Runtime governance model.","Runtime kind.","Stake-related parameters for a runtime.","Intel SGX remote attestation.","Intel SGX TEE constraints.","The node scheduling constraints.","Storage parameters.","Represents the address of a TCP endpoint.","TEE hardware implementation.","Intel SGX TEE implementation.","Non-TEE implementation.","Represents an Oasis committee address that includes a TLS …","Node’s TLS information.","Parameters for the runtime transaction scheduler.","Old V0 format that only supported IAS policies.","Old V0 format that only supported IAS quotes.","New V1 format that supports both IAS and PCS policies.","New V1 format that supports both IAS and PCS policies.","Contains information for this node’s participation in …","A constraint which specifies that the entity must have a …","Per-runtime version information.","","","The currently active deployment for the specified epoch if …","Address at which the node can be reached.","Address at which the node can be reached.","List of addresses at which the node can be reached.","List of addresses at which the node can be reached.","Which nodes are allowed to register for this runtime.","Number of allowed stragglers.","Attestation.","How long to wait for a scheduled batch in nanoseconds …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The SHA256 hash of the runtime bundle (optional).","Node’s capabilities for a given runtime.","Chunk size parameter for checkpoint creation.","Expected runtime state checkpoint interval (in rounds).","Expected minimum number of checkpoints to keep.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Information for connecting to this node as a consensus …","Node scheduling constraints.","Checks whether the given enclave identity is whitelisted.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Deployment corresponding to the specified version if it …","Runtime deployment information.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Entity whitelist configuration for each whitelisted entity.","Public key identifying the Entity controlling the node.","Public key identifying the Entity controlling the runtime.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parameters of the executor committee.","Epoch in which the node’s commitment expires.","Extra per node + per runtime opaque data associated with …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Runtime genesis information.","Searches for an existing supported runtime descriptor in …","Runtime governance model.","Size of the discrepancy resolution group.","Size of the committee.","Hardware type.","Checks whether the node has the provided TEE identity …","","","","","","","","","","","","","","","","","","","","","","","","","","Hashes the required data that needs to be signed by RAK …","","","","Unique identifier of the node on the P2P transport.","Public key identifying the node.","Unique identifier of the node as a consensus member.","Unique identifier of the node used to generate VRF proofs.","Public key identifying the runtime.","Public key identifying the node.","Globally unique long term identifier of the runtime.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Key manager runtime ID for this runtime.","Type of runtime.","","","Checks whether the TEE capability matches the given TEE …","Maximum size of a scheduled batch.","Maximum size of a scheduled batch in bytes.","Maximum size of the incoming message queue.","Maximum number of liveness failures that are tolerated …","Maximum number of messages that can be emitted by the …","Maximum percentage of proposed rounds in an epoch that can …","","Maximum number of nodes that an entity can register under …","Specifies the minimum fee that the incoming message must …","Minimum number of live rounds in an epoch for the liveness …","Minimum percentage of rounds in an epoch that a node must …","","Information for connecting to this node via P2P.","","SGX quote policy.","","How long to wait before accepting proposal from the next …","Public key used for establishing TLS connections.","Public key used for establishing TLS connections.","SGX attestation quote.","Runtime attestation key.","Runtime encryption key.","The percentage of the reward obtained when slashing for …","The percentage of the reward obtained when slashing for …","Bitmask representing the node roles.","Runtime round in the genesis.","Round timeout in consensus blocks.","Node’s runtimes.","Per-runtime misbehavior slashing parameters.","Node’s oasis-node software version.","Runtime’s staking-related parameters.","State root that should be used at genesis time. If the …","Parameters of the storage committee.","Is the capability of a node executing batches in a TEE.","Enclave version information, in an enclave provided …","Runtime’s TEE hardware requirements.","Minimum stake thresholds for a runtime. These per-runtime …","Information for connecting to this node via TLS.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tries to decode the TEE-specific attestation.","Tries to decode the TEE-specific version information.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Transaction scheduling parameters of the executor …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Structure version.","Structure version.","The epoch at which this version is valid.","","Version of the runtime.","Version of the runtime.","Information for this node’s participation in VRF based …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The runtime’s view of the consensus layer height at the …","An Intel SGX quote.","The signature of the attestation by the enclave (RAK).","A set of allowed quote statuses.","The allowed MRENCLAVE/MRSIGNER pairs.","The allowed MRENCLAVE/MRSIGNER pairs.","The maximum attestation age (in blocks).","The quote policy.","","","Runtime block annotated with consensus information.","","","Runtime block.","The signature context used to sign compute results headers …","","The header of a computed batch output by a runtime. This …","","The signature context used to sign executor worker …","","Errors emitted by the roothash module.","A commitment to results of processing a proposed runtime …","The executor commitment failure reason.","The header of an executor commitment.","Indicates that no failure has occurred.","Indicates that batch processing failed due to the state …","Indicates a generic failure.","","","Block header.","Header type.","An incoming message emitted by the consensus layer to be …","","","","","","","A message that can be emitted by the runtime to be …","Result of a message being processed by the consensus layer.","A trait that validates messages for validity. It can be …","","","","A trait for looking up registry node descriptors.","","","","Verified roothash commitment.","A pool of commitments that can be used to perform …","","","","","","Information about how a particular round was executed by …","Per-round state and I/O roots that are stored in consensus …","","","","","","","","","","Verifies and adds a new executor commitment to the pool.","","Public keys of compute nodes’ controlling entities that …","Runtime block.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Address of the caller authenticated by the consensus layer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consensus height at which this runtime block was produced.","Arbitrary runtime-dependent data.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a hash of an encoded header.","Returns a hash of an encoded header.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The executor commitment failure reason.","Fee sent into the runtime as part of the message being …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Public keys of compute nodes’ controlling entities that …","","","","","","","","","","Header.","The compute results header.","","Header type.","Unique identifier of the message.","Returns a hash of provided incoming runtime messages.","Returns a hash of provided runtime messages.","The number of processed incoming messages.","Hash of processed incoming messages.","The hash of processed incoming messages.","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","I/O merkle root.","The I/O merkle root.","","Returns true if this commitment indicates a failure.","","Returns true iff the header is the parent of a child …","Returns true if the event indicates that the message was …","","Results of executing emitted runtime messages.","Returns a hash of provided runtime messages.","Messages hash.","Hash of messages sent from this batch.","","Returns true if the commitment is mostly equal to another …","","Chain namespace.","Creates a new pool.","Creates a new empty block with a specific type.","Creates a new empty genesis block given a runtime id and …","","","Previous block hash.","Hash of the previous block header this batch was computed …","Performs a single round of commitment checks. If there are …","","","Round number.","Round number.","Signs the executor commitment header.","Signs the executor commitment header and sets the …","","","State merkle root.","The root hash of the state after computing this batch.","","An optional tag provided by the caller which is ignored …","Timestamp (POSIX time).","Returns a commitment-specific result after discrepancy …","","","","","","","","","","","","","","","","","","","Returns a hash that represents a vote for this commitment …","","Tokens sent into the runtime as part of the message being …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Performs basic validation of the runtime message.","Performs basic validation of the staking message.","Performs basic validation of the registry message.","Performs basic validation of the governance message.","Verifies that the header signature is valid.","Verifies the RAK signature.","Protocol version number.","","","","","","","","","","","","","","","","","","","Indicates the node is a backup worker.","A per-runtime (instance) committee.","The functionality a committee exists to provide.","A node participating in a committee.","A compute executor committee.","An invalid role (should never appear on the wire).","An invalid committee (should never appear on the wire).","The role a given node plays in a committee.","Indicates the node is a worker.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","The functionality a committee exists to provide.","The committee members.","","","The node’s public key.","The node’s role in a committee.","The runtime ID that this committee is for.","","","Returns the transaction scheduler of the provided …","","","","","","","","","","","","","","","The epoch for which the committee is valid.","","","","","Returns committee nodes with Worker role.","Entry in the staking ledger.","Event emitted when stake is transferred into an escrow …","Add escrow result.","Event emitted when allowance is changed for a beneficiary.","Event emitted when stake is destroyed via a call to Burn.","Commission rate bound and its starting time.","Commission rate and its starting time.","Defines a list of commission rates and commission rate …","Debonding delegation descriptor.","Event emitted when the debonding process has started and …","Delegation descriptor.","A stake escrow.","Escrow account.","Escrow-related events.","A staking-related event.","General purpose account.","Entity staking threshold.","Compute node staking threshold.","Keymanager node staking threshold.","Validator node staking threshold.","Compute runtime staking threshold.","Keymanager runtime staking threshold.","Event emitted when stake is reclaimed from an escrow …","A reclaim escrow.","Reclaim escrow result.","Slashing due to signing two different executor commits or …","Slashing due to submission of incorrect results in runtime …","Slashing due to not doing the required work.","Combined balance of serval entries, the relative sizes of …","Per-reason slashing configuration.","Reason for slashing an entity.","Per escrow account stake accumulator.","Unique stake claim identifier.","Stake threshold used in the stake accumulator.","Event emitted when stake is taken from an escrow account …","Kind of staking threshold.","A stake transfer.","Event emitted when stake is transferred, either by a call …","Transfer result.","A withdrawal from an account.","Withdraw resulteturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</coderovides consensus state tree from the host.","","","","Beacon state in the consensus layer.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Creates consensus state using host protocol.","","","Consensus layer height that this data is for.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Key manager state in the consensus layer.","Creates a consensus state wrapping the provided tree.","","","Registry state in the consensus layer.","Roothash state in the consensus layer.","","Staking state in the consensus layer.","","","","","","","","","","Consensus beacon state wrapper.","Mutable consensus beacon state wrapper.","","","","","","","","","","","Returns the current epoch number.","Returns the current epoch state.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the future epoch number.","Returns the future epoch state.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Constructs a new ImmutableMKVS.","Set current epoch state.","Set future epoch state.","","","","","","","","","Consensus key manager state wrapper.","Current key manager status.","","","","","Key manager master secret verification checksum.","","","","","","","","","","Looks up a specific key manager ephemeral secret by its …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Generation of the latest master secret.","Runtime ID of the key manager.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","True iff the key manager is done initializing.","True iff the key manager is secure.","Looks up a specific key manager master secret by its …","Constructs a new ImmutableMKVS.","List of currently active key manager node IDs.","Key manager policy.","Epoch of the last master secret rotation.","Runtime signing key of the key manager.","Looks up a specific key manager status by its namespace …","Returns the list of all key manager statuses.","","","","","","","","","","","","Consensus registry state wrapper.","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Constructs a new ImmutableMKVS.","Looks up a specific node by its identifier.","Returns the list of all registered nodes.","Looks up a specific runtime by its identifier.","","","","","Consensus roothash state wrapper.","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Returns the last round results for a specific runtime.","Constructs a new ImmutableMKVS.","","","Returns the state root for a specific runtime.","","","","","Consensus staking state wrapper.","Returns the staking account for the given account address.","Returns the non-empty addresses from the staking ledger.","","","Returns the balance of the global common pool.","Returns the debonding delegation.","Returns all debonding delegations.","Returns the delegation.","Returns all active delegations.","","","","Returns the argument unchanged.","Returns the governance deposits balance.","","Calls <code>U::from(self)</code>.","Returns the last block fees balance.","Constructs a new ImmutableMKVS.","Returns the total supply.","","","","","Tendermint consensus backend name. Keep synced with …","Tendermint light consensus block metadata.","The domain separation context used by Oasis Core for …","","","Convert an Oasis Core chain context into a Tendermint …","","","Decode the light block metadata as a Tendermint light …","","","","Encode the light block metadata to a Tendermint light …","","Returns the argument unchanged.","State root specified by this light block.","","Calls <code>U::from(self)</code>.","Merkle proofs used in Tendermint networks","","Extract state root from the given signed block header.","","","","","","","Tendermint consensus layer verification logic.","","Maximum number of aunts that can be included in a Proof. …","Proof represents a Merkle proof.","","","","Compute the root hash given a leaf hash. Does not verify …","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","Verify that the Proof proves the root hash. Check …","","A verifier which performs no verification.","Tendermint consensus layer verifier.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Return a handle to interact with the verifier.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Create a new non-verifying verifier.","Create a new Tendermint consensus layer verifier.","Start the non-verifying verifier.","Start the verifier in a separate thread.","","","","","","","","","","","","","","Consensus transaction fee the sender wishes to pay for …","Consensus gas representation.","Method name.","Proof of transaction inclusion in a block.","","Signed consensus transaction.","Signed consensus transaction with a proof of its inclusion …","Unsigned consensus transaction.","Fee amount to be paid.","Signed blob.","Method call body.","","","","","","","","","","","","","","","","","","","","","","","","Optional fee that the sender commits to pay to execute …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Maximum gas that a transaction can use.","Block height at which the transaction was published.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Method that should be called.","Nonce to prevent replay.","Proof of transaction inclusion in a block.","Actual raw proof.","Signature over the blob.","Signed transaction.","","","","","","","","","","","","","","","","","","","","Returns true iff the signature is valid.","","","","","","","","","","","","Consensus layer trust root.","","","Verifier is the consensus layer state verifier trait.","","","","","","Known consensus chain context.","","","","","","","","","","","","","Return the consensus layer events at the given height.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Known hex-encoded trusted consensus layer header hash.","Known trusted height.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Return the latest known consensus layer height.","Return the latest verified consensus layer state.","Known runtime identifier.","","Return the verified consensus layer state for a given …","Synchronize the verifier state up to including the passed …","","","","","","","","","","","Return the consensus layer state accessor for the given …","Verify that the given runtime header is valid at the given …","Verify that the given runtime header is valid at the given …","Verify consensus layer state freshness based on our …","","","Runtime call dispatcher.","Interface for dispatcher initializers.","State returned by the initializer.","State available before initialization.","","","","","","","Consensus verifier instance.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Runtime Attestation Key instance.","Initializes the dispatcher(s).","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new runtime call dispatcher.","Protocol instance.","Queue a new request to be dispatched.","RPC demultiplexer instance.","RPC dispatcher instance.","Start the dispatcher.","","","","","","","Optional transaction dispatcher that should be used.","","","","","","","","Enclave RPC client.","RPC call context.","Session demultiplexer.","RPC dispatcher.","Secure channel session.","RPC protocol types.","","","","","","RPC client.","RPC client error.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Call a remote method over an insecure channel where …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Construct an unconnected RPC client with runtime-internal …","Call a remote method using an encrypted and authenticated …","","","","","","","","","Update allowed remote enclave identities.","Update allowed nodes.","Update key manager’s quote policy.","Update remote runtime id.","","","RPC call context.","","","Consensus verifier.","","","","Returns the argument unchanged.","The current runtime identity if any.","","Calls <code>U::from(self)</code>.","Whether the RPC call is using a secure channel.","Construct new transaction context.","Runtime-specific context.","Information about the session the RPC call was delivered …","","","","Untrusted local storage.","","Session demultiplexer.","Demultiplexer error.","","","","A multiplexed session.","","","","","","","","","Closes the given session.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Session information.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create new session demultiplexer.","Process incoming session data.","Process a frame, returning the locked session guard and …","Resets all open sessions.","","","","","","","","","","","","","","","Write message to session and generate a response.","Custom context initializer.","RPC call dispatcher.","Key manager quote policy update handler callback.","Key manager status update handler callback.","RPC method dispatcher implementation.","Descriptor of a RPC API method.","Handler for a RPC method.","Dispatcher for a RPC method.","Register a new method in the dispatcher.","","","","","","","","","","","","","","","","Dispatch request.","Dispatch request.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get method descriptor.","Invoke the method implementation and return a response.","Handle key manager quote policy update.","Handle key manager status update.","Called to initialize the context.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Specifies which kind of RPC is allowed to call the method.","Method name.","Create a new enclave method descriptor.","Configure context initializer.","Update key manager quote policy update handler.","Update key manager status update handler.","","","","","","","","","","","","","","Session builder.","Binding of the session’s static public key to a remote …","An encrypted and authenticated RPC session.","Information about a session.","Old V0 format that only supported IAS quotes.","New V1 format that supports both IAS and PCS quotes.","Signature from RAK, binding the session’s static public …","","","","","","","","","Build initiator session.","Build responder session.","","","","","Mark the session as closed.","Enable remote node identity verification.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Return remote node identifier.","Return quote policy if configured in the builder.","Return remote enclave identities if configured in the …","Return remote runtime ID if configured in the builder.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Whether the session is in closed state.","Whether the session handshake has completed and the session","Whether the session is connected to one of the given nodes.","Enable RAK binding.","Process incoming data.","Configure quote policy used for remote quote verification.","","Public part of the RAK.","Enable remote enclave identity verification.","Set remote runtime ID for node identity verification.","Session information.","Set the remote node identifier.","","","","","","","","","","","","","","","","","Verify the RAK binding.","Verify the quote that is part of the RAK binding.","","","","","Write message to session.","","","","","","","","","","","","","Frame.","An insecure RPC call where messages are sent in plain text.","RPC call kind.","A local RPC call.","Protocol message.","A secure RPC call using an encrypted and authenticated …","Feedback on the peer that handled the last EnclaveRPC call.","","","","","Session identifier for multiplexing multiple sessions over …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Size of this object in bytes.","","","","","Generate a random session identifier.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Runs a future to completion on the current Tokio handle’…","Create a new asynchronous Tokio runtime.","","Errors.","Interface to the (untrusted) host node.","","","","","","","","","","Returns the argument unchanged.","","Returns the identity of the host node.","","Calls <code>U::from(self)</code>.","","","","","","","Runtime identity.","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Create an uninitialized runtime identity.","","Public part of RAK.","Public part of REK.","Quote for RAK.","Runtime quote policy.","Checks whether the RAK matches another specified (RAK_pub, …","","","","","Verify a provided RAK binding.","","Starts the runtime.","","","","","","","","Consensus policy verifier.","Policy verifier error.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Fetch runtime’s key manager.","Fetch key manager’s policy from the latest verified …","Fetch key manager’s status from the latest verified …","Create a new consensus policy verifier.","Fetch runtime’s quote policy from the latest verified …","","","","","","","","Verify that key manager’s policy has been published in …","Verify that key manager’s status has been published in …","Verify that runtime’s quote policy has been published in …","","","","","","Information about the host environment.","","","","","","","Runtime part of the runtime host protocol.","","Untrusted key/value store which stores arbitrary binary …","","","","","","","","","","","Make a new request to the runtime host and wait for the …","Make a new request to the runtime host and wait for the …","","","Name of the consensus backend that is in use for the …","Consensus layer chain domain separation context.","Consensus protocol version that is in use for the …","","","","","","","","","","","","","Ensure that the runtime is ready to process requests and …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","The supplied runtime configuration.","The host environment information for this instance.","The runtime identity.","The runtime identifier for this instance.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Node-local runtime configuration.","","Assigned runtime identifier of the loaded runtime.","Send an async response to a previous request back to the …","","","","","","","","","","","","","","","","","","","Trivial Key/Value storage.","","Fetch the value for a specific key.","Store a specific key/value into storage.","Merklized key-value store.","","","Merklized key-value store where methods return errors …","Storage root for transaction IO.","Immutable merkalized key value store.","","","Invalid or uninitialized storage root type.","An MKVS iterator.","","","An entry in the write log, describing a single update.","The type of entry in the log.","Merklized key-value store.","A box type that can contain either internal or leaf nodes.","A key-value tree overlay that holds all updates in memory …","A key prefix.","Storage root.","Storage root type.","Storage root for runtime state.","A patricia tree-based MKVS implementation.","The write log.","","","","","","","","","","","","","","","","","","","Return an builder struct to chain configuration calls on.","Check if the local MKVS cache contains the given key.","Check if the local MKVS cache contains the given key.","","Check if the key exists in the local cache.","","","","","","","","","","","","","","Commit all database changes to the underlying store.","Commit all database changes to the underlying store.","Commit any modifications to the underlying tree.","","","Commit tree updates to the underlying database and return …","Commit any modifications to the underlying tree and then …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the error that occurred during iteration if any.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Fetch entry with given key.","Fetch entry with given key.","Fetch entry with given key.","Get an existing key.","","Get an existing key.","","","The key under the iterator.","The value under the iterator.","","","Merkle root hash.","","","","","","","","","Update entry with given key.","Update entry with given key.","","Insert a key/value pair into the tree.","Insert a key/value pair into the tree.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Return whether the iterator is valid.","Returns an iterator over the tree.","Returns an iterator over the tree.","Returns an iterator over the tree.","","Return an iterator over the tree.","Return an iterator over the tree.","","","The key that was inserted or deleted.","","","","","Namespace under which the root is stored.","Create a new overlay tree.","Construct a new tree instance using the given read syncer …","","Advance the iterator to the next key.","","Populate the in-memory tree with nodes for keys starting …","Populate the in-memory tree with nodes for keys starting …","Populate the in-memory tree with nodes for keys starting …","","","","Populate the in-memory tree with nodes for keys starting …","Remove entry with given key, returning the value at the …","Remove entry with given key, returning the value at the …","Remove entry with given key, returning the value at the …","","","Remove entry with given key, returning the value at the …","Moves the iterator to the first key in the tree.","The storage type that this root has data for.","Moves the iterator either at the given key or at the next …","Sets the number of next elements to prefetch.","The read-only tree sync interface.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The inserted value (empty if the key was deleted).","Monotonically increasing version number in which the root …","","","","","","","","","","The <code>Marshal</code> trait is used for marshaling and unmarshaling …","Marshal the object into a binary form and return it as a …","Unmarshal from the given byte slice reference and modify …","Request for the SyncGetPrefixes operation.","Request for the SyncGet operation.","A proxy read syncer which forwards calls to the runtime …","Request for the SyncIterate operation.","A no-op read syncer which doesn’t support any of the …","A Merkle proof for a subtree.","Response for requests that produce proofs.","A proof verifier enables verifying proofs returned by the …","A raw proof entry.","ReadSync is the interface for synchronizing the in-memory …","A proxy read syncer which keeps track of call statistics.","","Identifies a specific tree and a position within that tree.","","","","Return <code>self</code> as an <code>Any</code> object, useful for downcasting.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Proof entries in pre-order traversal.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Merges a previously verified subtree with an existing tree.","Construct a new host proxy instance.","Construct a new instance, proxying to the given backing …","The caller’s position in the tree structure to allow …","","","","The Merkle tree root.","","Fetch a single key and returns the corresponding proof.","","","","Count of <code>sync_get</code> calls made to the underlying read syncer.","Fetch all keys under the given prefixes and returns the …","","","","Count of <code>sync_get_prefixes</code> calls made to the underlying …","Seek to a given key and then fetch the specified number of …","","","","Count of <code>sync_iterate</code> calls made to the underlying read …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The root hash this proof is for. This should only be used …","Verify a proof and generate an in-memory subtree …","","","","","","","","","","","","","","","Runtime call context.","Runtime transaction batch dispatcher.","Read/write set.","Transaction tags.","Transaction I/O tree.","Transaction protocol types.","Transaction context.","","","Flag indicating whether to only perform transaction check …","Consensus light block.","Consensus state tree.","","","","Epoch corresponding to the currently processed block.","Returns the argument unchanged.","The block header accompanying this transaction.","","Calls <code>U::from(self)</code>.","The maximum number of messages that can be emitted in this …","Construct new transaction context.","Low-level access to the underlying Runtime Host Protocol.","Results of processing the previous successful round.","Runtime state.","","","","","Runtime transaction dispatcher trait.","Result of processing a batch of ExecuteTx.","Result of processing an ExecuteTx.","No-op dispatcher.","Block emitted tags (not emitted by a specific transaction).","","","","","","","Check the transactions in the given batch for validity.","","","","","","","","","","","","Execute the transactions in the given batch.","","Invoke the finalizer (if any).","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Number of processed incoming messages.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Emitted runtime messages.","Transaction output.","Process a query.","Per-transaction execution results.","Schedule and execute transactions in the given batch.","","Configure abort batch flag.","Emitted tags.","","","","","","","Hashes of transactions to reject.","","","","","","","A coarsened key prefix that represents any key that starts …","A set of coarsened keys.","A read/write set.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Size of the key prefixes (in bytes) used for coarsening …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","The read set.","","","","","","","","","","","","","","","","The write set.","Tag is a key/value pair of arbitrary byte blobs with …","A set of tags.","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","The tag key.","Create a new tag.","","","","The hash of the transaction that emitted the tag.","","The tag value.","","Hash used for block emitted tags not tied to a specific …","A Merkle tree containing transaction artifacts.","Add block tags.","Add an input transaction artifact.","Add an output transaction artifact.","","","Commit updates to the underlying Merkle tree and return …","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Create a new transaction artifacts tree.","","","","","Batch of transaction inputs/outputs.","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Runtime host protocol message body.","CheckTx transaction metadata.","Result of a CheckTx operation.","Computed batch.","","","A serializable error.","","Consensus event kind.","Execution mode where the batch of transactions is executed …","Batch execution mode.","A feature specifying that the runtime supports controlling …","Set of supported runtime features.","","","","","","Request to host to fetch the consensus events for the …","","Response from host fetching the consensus events for the …","","","","","","","","","","","","","","","","Host storage endpoint.","","","Invalid message (should never be seen on the wire).","Runtime protocol message.","","","","Request.","Response.","","","","","","","","","","","","","","","","","","","Runtime information request.","","Runtime information response.","","","","","","","","","","","","","","Execution mode where the runtime is in control of …","","Storage sync request.","","Storage sync response.","","","","","Message body.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Describes the features supported by the runtime.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Compute results header.","","Unique request identifier.","","","","","","","","","","","","","","","","","","","","Size of the initial batch of transactions.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Log that generates the I/O tree.","A feature specifying that the runtime supports rotating …","A feature specifying that the runtime supports updating …","A feature specifying that the runtime supports updating …","","","","Message type.","Messages emitted by the runtime.","","","Create a new error.","","The runtime protocol version supported by the runtime.","If this runtime uses a TEE, then this is the signature of …","","","The version of the runtime.","A feature specifying that the runtime supports same-block …","Schedule control feature.","","","","Log of changes to the state treei":[0,0,0,0,0,0,3,2,3,2,0,0,0,0,0,0,3,2,2,3,2,0,3,2,0,3,2,0,0,0,0,0,3,2,3,2,3,0,0,0,0,0,0,3,0,0,0,0,3,2,3,2,3,2,0,0,3,2,0,0,9,7,9,7,7,7,7,9,9,7,9,7,9,7,7,9,7,9,7,9,7,7,7,7,9,9,9,7,9,7,9,7,9,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,0,0,0,0,0,0,42,42,0,40,0,42,42,42,42,0,42,42,42,42,42,42,42,42,42,42,42,42,0,0,0,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,0,0,0,0,0,0,0,48,49,48,49,50,51,53,48,49,50,51,52,53,48,49,50,51,52,48,49,48,49,50,51,52,48,49,50,51,52,48,49,48,49,50,51,52,53,48,49,50,51,52,53,48,49,50,51,52,53,48,49,50,51,52,48,49,48,49,48,49,50,51,52,48,48,49,49,50,50,51,51,52,52,48,48,48,49,49,49,50,51,52,53,48,48,48,48,49,49,49,49,50,51,52,53,48,49,53,53,48,49,50,51,52,53,48,49,50,51,52,53,48,49,50,51,52,48,49,50,51,52,48,49,48,49,54,53,53,52,54,53,50,52,0,0,51,53,48,49,50,51,52,48,49,48,49,50,51,52,53,48,49,50,51,52,48,49,50,51,52,53,48,49,50,51,52,53,48,49,50,51,52,49,50,52,49,53,48,49,50,51,52,48,49,48,49,0,0,0,0,56,57,56,57,56,57,56,57,56,57,56,57,56,57,56,57,56,57,56,57,56,57,56,57,56,57,57,57,57,57,56,56,56,57,57,57,57,56,56,57,56,57,56,57,56,57,56,56,57,56,57,56,57,56,57,56,57,56,57,56,57,56,57,56,0,0,58,59,58,58,59,58,58,58,58,59,0,0,0,0,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,0,0,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,0,70,0,0,0,70,0,0,0,67,68,67,68,67,68,69,70,71,72,67,68,69,70,71,72,67,68,67,68,69,70,71,72,67,68,69,70,71,72,67,68,69,67,68,69,71,72,67,68,69,70,71,72,67,68,69,70,71,72,67,68,69,70,71,72,0,67,68,67,68,67,68,69,70,71,67,67,68,68,69,69,70,70,71,71,67,67,67,68,68,68,69,70,71,72,69,67,67,67,67,68,68,68,68,69,70,71,72,67,68,67,68,69,0,71,72,67,68,69,70,71,72,67,68,69,70,71,72,67,68,69,70,71,70,67,68,69,69,67,68,0,71,72,0,72,67,68,69,70,71,72,67,68,67,68,69,71,67,68,69,70,71,72,67,68,69,70,71,67,68,69,70,71,72,67,68,69,70,71,72,70,67,68,69,70,71,72,67,68,67,68,0,0,0,0,0,75,76,75,76,75,76,76,75,76,75,76,75,76,75,76,75,76,75,75,76,75,76,75,75,76,76,75,76,75,76,75,75,76,75,76,75,76,75,76,75,76,75,76,75,76,75,76,75,76,75,76,0,75,76,93,87,87,93,93,0,0,0,87,93,93,93,87,87,93,0,0,93,0,87,87,0,0,0,0,93,93,0,0,93,93,93,0,93,0,0,93,93,93,87,93,84,89,90,93,83,89,83,89,93,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,78,79,80,81,82,83,84,85,86,87,88,89,90,91,86,80,78,79,80,81,82,83,84,85,86,87,88,89,90,91,78,79,80,81,82,83,84,85,86,87,88,89,90,91,84,90,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,78,79,80,81,82,83,84,85,86,87,88,89,90,91,81,82,83,84,85,86,87,88,89,90,91,78,93,78,79,80,81,82,83,84,85,86,87,88,89,90,91,88,78,79,80,81,87,88,78,78,79,79,80,80,81,81,87,87,88,88,82,78,93,93,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,78,79,80,81,82,83,84,85,86,87,88,89,90,91,82,89,93,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,78,79,80,81,82,83,84,85,86,87,88,89,90,91,78,79,80,81,88,78,82,89,89,91,78,89,89,83,89,82,89,82,85,80,79,85,81,88,84,90,86,79,84,90,86,82,89,80,81,82,89,82,78,85,82,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,78,79,80,81,88,93,78,79,80,81,82,83,84,85,86,87,88,89,90,91,78,79,80,81,88,93,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,78,79,80,81,82,83,84,85,86,87,88,89,90,91,79,82,89,93,78,79,80,81,82,83,84,85,86,87,88,89,90,91,0,0,0,0,0,0,0,0,97,98,97,98,97,98,97,98,98,97,98,97,98,97,98,97,98,97,98,97,97,98,98,97,98,97,97,98,97,98,97,98,97,98,97,98,97,97,97,97,97,98,98,97,98,97,98,97,98,97,98,97,98,97,98,97,98,0,0,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,0,0,106,107,106,107,107,107,106,107,106,107,106,107,106,107,106,107,106,107,106,106,107,106,106,107,106,107,106,107,106,106,106,107,106,106,107,106,107,106,107,106,106,107,0,0,0,0,0,0,109,0,0,108,109,110,108,109,110,108,109,110,108,109,110,108,110,108,109,110,108,109,110,108,109,110,110,110,110,110,108,109,110,108,109,110,0,108,108,109,110,108,109,110,108,109,110,0,108,0,0,0,0,0,110,0,108,109,110,0,108,110,108,109,110,108,109,110,108,109,110,108,109,110,0,108,109,110,0,0,0,0,111,111,112,113,114,111,112,113,114,111,111,111,111,111,111,111,112,112,113,113,114,114,111,112,113,114,111,112,113,114,111,111,111,111,111,111,111,111,111,112,113,114,111,111,111,111,111,111,111,112,113,114,111,112,113,114,111,111,111,111,111,111,111,111,112,113,114,111,111,112,113,114,111,112,113,114,111,112,113,114,111,111,0,0,0,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,116,0,0,0,116,116,0,0,0,0,116,116,117,118,119,120,121,122,116,117,118,119,120,121,122,121,121,120,116,117,118,119,120,121,122,116,117,118,119,120,121,122,116,116,117,118,119,120,121,122,116,117,118,119,120,121,122,116,117,118,119,120,121,122,116,117,118,119,120,121,122,122,118,116,117,118,119,120,121,122,116,116,117,117,118,118,119,119,120,120,121,121,122,122,116,117,118,119,120,121,122,116,117,118,119,120,121,122,122,118,116,117,118,119,122,117,116,117,118,119,120,121,122,116,117,118,119,120,121,122,116,117,118,119,120,121,122,122,120,116,119,122,118,116,117,118,119,120,121,122,117,118,119,120,121,122,116,117,118,119,120,121,122,116,117,118,119,120,121,122,116,117,118,119,120,121,122,116,117,118,119,120,121,122,121,122,122,118,117,122,116,117,118,119,120,121,122,0,0,0,0,0,131,0,0,0,0,131,131,123,124,125,126,127,128,129,130,131,123,124,125,126,127,128,129,130,126,126,123,124,125,126,127,128,129,130,123,124,125,126,127,128,129,130,123,124,125,126,127,128,129,130,131,123,124,125,126,127,128,129,130,131,123,124,125,126,127,128,129,130,131,123,124,125,126,127,128,129,130,123,127,128,123,124,125,126,127,128,129,130,123,123,124,124,125,125,126,126,127,127,128,128,129,129,130,130,131,131,123,124,125,126,127,128,129,130,131,123,124,125,126,127,128,129,130,127,123,131,123,124,125,126,127,128,129,130,131,123,124,125,126,127,128,129,130,123,124,125,126,127,128,129,130,123,123,124,124,129,130,125,126,127,128,127,128,129,130,123,129,130,125,123,124,125,126,127,128,129,130,131,123,124,125,126,127,128,129,130,131,123,124,125,126,127,128,129,130,123,124,125,126,127,128,129,130,131,123,124,125,126,127,128,129,130,131,123,124,125,126,127,128,129,130,125,131,123,124,125,126,127,128,129,130,0,158,0,0,0,0,158,0,0,0,159,159,159,159,147,147,147,0,0,0,0,0,0,0,0,145,145,145,145,145,145,145,145,0,0,0,0,0,0,0,0,0,0,0,0,0,162,162,0,0,0,160,161,160,161,0,0,0,137,137,132,136,139,138,140,132,148,142,149,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,134,160,161,162,132,163,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,134,160,161,162,132,163,134,144,150,150,150,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,134,160,161,162,132,163,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,134,160,161,162,132,163,145,146,132,160,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,134,162,132,163,132,132,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,134,160,161,162,132,163,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,134,160,161,162,132,163,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,134,160,161,162,132,163,156,146,132,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,134,162,132,163,135,135,136,136,137,137,138,138,139,139,140,140,141,141,142,142,143,143,144,144,145,145,146,146,147,147,148,148,149,149,150,150,151,151,152,152,153,153,154,154,155,155,156,156,157,157,158,158,159,159,134,134,162,162,132,132,163,163,132,146,144,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,134,160,161,162,132,163,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,134,160,161,162,132,163,132,146,132,148,148,142,146,135,136,137,138,139,140,141,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,134,161,162,132,163,138,139,140,141,144,146,132,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,134,160,161,162,132,163,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,134,160,161,162,132,163,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,134,160,161,162,132,163,135,132,132,153,154,142,149,149,149,148,148,148,151,157,155,148,148,151,146,145,160,135,149,136,137,161,142,142,155,155,146,163,148,146,155,146,132,163,132,143,134,132,155,146,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,134,160,161,162,132,163,142,134,135,136,137,138,139,140,141,142,143,144,145,146,148,149,150,151,152,153,154,155,156,157,134,132,163,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,134,160,161,162,132,163,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,134,160,161,162,132,163,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,134,160,161,162,132,163,132,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,134,160,161,162,132,163,146,132,134,151,144,134,146,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,134,160,161,162,132,163,135,356,356,356,357,357,358,358,358,176,184,0,184,184,0,0,178,0,184,0,170,0,0,0,0,173,173,173,175,0,0,0,0,184,170,184,184,184,184,0,0,0,184,184,184,0,170,184,184,0,0,184,176,175,0,170,0,0,175,0,184,184,178,170,176,177,176,165,184,182,180,165,166,170,171,172,173,174,167,175,176,177,178,179,184,180,181,182,183,165,166,170,171,172,173,174,167,175,176,177,178,179,184,180,181,182,183,179,166,170,171,172,173,174,167,175,176,177,178,179,180,181,182,183,166,170,171,172,173,174,167,175,176,177,178,179,180,181,182,183,181,180,179,166,170,171,172,173,174,167,179,180,181,182,183,165,166,170,171,172,173,174,167,175,176,177,178,179,184,180,181,182,183,165,166,170,171,172,173,174,167,175,176,177,178,179,184,180,181,182,183,165,166,170,171,172,173,174,167,175,176,177,178,179,184,180,181,182,183,171,172,166,170,171,172,173,174,167,175,176,177,178,179,180,181,182,183,166,166,170,170,171,171,172,172,173,173,174,174,167,167,175,175,176,176,177,177,178,178,179,179,180,180,181,181,182,182,183,183,174,179,166,170,171,172,173,174,167,175,176,177,178,179,184,184,180,181,182,183,165,166,170,171,172,173,174,167,175,176,177,178,179,184,184,180,181,182,183,182,166,170,171,172,176,177,179,180,183,166,174,167,171,179,175,179,172,171,172,181,165,166,170,171,172,173,174,167,175,176,177,178,179,184,180,181,182,183,165,166,170,171,172,173,174,167,175,176,177,178,179,184,180,181,182,183,166,170,171,172,173,174,167,175,176,177,178,179,180,181,182,183,171,172,183,186,167,172,181,167,182,175,171,172,181,186,167,171,165,166,166,168,167,171,172,165,174,181,171,172,174,167,167,184,171,172,183,179,171,186,167,166,170,171,172,173,174,167,175,176,177,178,179,180,181,182,183,184,186,167,179,166,171,172,174,167,179,180,181,182,183,165,166,170,171,172,173,174,167,175,176,177,178,179,184,180,181,182,183,166,170,171,172,173,174,167,175,176,177,178,179,180,181,182,183,165,166,170,171,172,173,174,167,175,176,177,178,179,184,180,181,182,183,165,166,170,171,172,173,174,167,175,176,177,178,179,184,180,181,182,183,169,167,175,176,177,178,167,174,171,165,166,170,171,172,173,174,167,175,176,177,178,179,184,180,181,182,183,190,0,0,0,191,190,191,0,190,192,187,190,191,192,187,190,191,190,191,190,191,190,191,190,191,192,187,190,191,192,187,190,191,192,187,190,191,190,191,190,190,191,191,190,191,192,187,190,191,190,191,192,187,190,191,192,187,190,191,190,191,187,187,190,191,192,192,187,190,191,187,192,187,190,191,190,191,192,187,190,191,192,187,190,191,187,192,187,190,191,187,0,218,0,0,0,0,0,0,0,218,0,0,0,0,0,0,197,197,197,197,197,197,218,0,0,209,209,209,0,0,0,0,0,0,218,0,0,0,0,0,0,195,196,200,214,219,215,199,193,194,195,210,211,212,213,216,217,214,219,199,201,214,219,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,202,215,205,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,197,209,200,206,208,213,200,213,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,210,211,212,213,214,215,216,217,219,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,193,193,194,194,195,195,196,196,197,197,198,198,199,199,200,200,201,201,202,202,203,203,204,204,205,205,206,206,207,207,208,208,209,209,210,210,211,211,212,212,213,213,214,214,215,215,216,216,217,217,218,218,219,219,198,212,213,215,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,210,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,194,211,216,198,206,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,215,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,219,212,199,212,213,214,217,219,197,209,203,204,204,202,213,196,207,208,200,203,204,193,211,216,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,201,215,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,210,211,212,213,214,215,216,217,219,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,215,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,359,360,361,359,362,359,361,359,360,359,362,360,360,361,359,362,362,0,0,185,185,0,221,185,221,185,221,185,221,185,221,185,185,185,221,185,185,221,221,221,221,221,185,221,185,221,221,0,221,221,221,0,0,185,0,185,221,185,221,185,221,185,221,185,0,0,225,363,225,363,225,363,225,363,225,363,225,225,225,363,225,225,225,363,225,363,225,363,363,225,363,225,363,225,363,225,363,0,0,229,228,229,228,228,228,228,228,229,228,229,228,229,228,229,228,228,228,228,229,228,228,228,229,228,229,228,228,228,228,229,229,228,228,228,228,229,229,228,228,229,228,228,229,228,229,228,229,228,0,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,0,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,0,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,0,0,0,235,235,0,235,235,0,235,235,235,0,235,235,235,235,235,0,235,0,235,235,235,235,235,235,0,235,0,0,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,0,0,240,244,240,244,240,244,240,244,240,244,240,240,244,244,240,244,240,244,240,240,240,244,240,244,240,240,240,244,240,244,240,244,240,240,240,240,244,0,0,0,0,0,0,0,0,248,252,251,251,248,249,250,251,248,249,250,248,249,250,251,248,249,250,251,248,249,250,251,248,249,250,251,251,248,249,250,251,248,249,250,248,249,251,248,249,250,251,248,249,250,251,248,249,250,251,251,250,249,252,250,248,249,250,251,248,249,250,251,248,249,250,251,248,249,250,251,248,249,250,252,251,248,249,250,253,253,0,253,253,253,253,0,253,253,0,253,253,247,253,247,247,247,247,247,253,247,253,247,253,247,247,247,247,245,253,253,247,253,247,247,247,253,247,253,247,247,245,245,247,253,245,245,247,253,247,253,247,247,253,247,253,247,245,245,245,0,253,247,0,0,0,0,256,257,254,256,257,254,256,254,256,257,254,256,257,254,256,257,254,256,257,254,256,255,256,257,254,256,257,254,257,256,257,256,256,257,256,257,254,256,257,254,254,256,257,254,256,257,254,0,0,0,0,0,0,0,259,259,259,259,259,0,0,259,259,259,259,260,259,260,259,260,259,260,259,260,259,259,259,260,259,259,259,260,259,260,260,259,260,260,259,259,260,259,260,259,260,259,260,260,260,260,260,259,0,267,267,267,267,267,267,267,267,267,267,267,267,267,267,267,267,267,267,267,0,0,271,271,271,0,271,271,268,269,271,268,269,271,268,268,269,271,268,269,271,268,269,271,271,271,268,269,271,271,271,269,268,269,271,268,269,271,268,269,268,268,271,271,268,269,271,268,269,271,268,269,271,268,269,271,269,0,0,0,0,0,0,0,0,274,275,276,274,275,276,274,276,276,274,275,276,274,275,276,274,277,274,275,276,274,276,275,276,274,277,281,274,274,282,275,276,274,275,276,274,276,276,275,274,274,274,276,275,276,274,275,276,274,275,276,274,275,276,274,0,0,0,0,286,286,286,265,287,286,263,265,287,286,263,263,263,286,263,286,263,287,263,263,265,287,286,263,265,287,286,263,265,287,286,263,286,265,287,286,263,287,263,263,263,265,287,286,263,265,287,286,263,286,287,287,287,263,287,263,265,286,263,263,287,287,286,263,265,287,286,263,286,265,287,286,263,265,287,286,263,265,286,286,265,287,286,263,287,364,364,365,365,364,365,292,0,273,0,291,292,0,280,0,280,0,280,0,0,273,0,273,0,291,292,278,288,288,279,288,280,289,278,290,291,279,273,292,288,280,289,278,290,291,279,273,292,288,288,280,289,278,290,291,279,273,292,288,280,289,278,290,291,279,273,292,288,288,280,289,290,288,280,289,278,290,291,279,273,292,288,280,289,278,290,291,279,273,292,288,280,289,278,290,291,279,273,292,288,288,288,280,292,288,288,280,280,292,292,288,288,288,280,289,278,290,291,279,273,292,288,288,288,288,280,289,278,290,291,279,273,292,288,288,280,288,280,289,278,290,291,279,273,292,288,280,289,278,290,291,279,273,292,288,280,289,278,290,291,279,273,292,288,290,278,288,289,288,289,288,280,289,278,290,291,279,273,292,288,288,280,289,290,288,280,289,278,290,291,279,273,292,288,280,289,278,290,291,279,273,292,288,280,289,278,290,291,279,273,292,288,280,289,278,290,291,279,273,292,289,288,280,289,278,290,291,279,273,292,288,288,0,0,294,0,0,294,294,294,294,294,294,294,294,294,294,294,296,294,294,294,294,294,294,294,294,0,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,0,297,297,297,297,297,297,297,0,0,297,297,297,298,297,298,297,298,297,298,297,298,297,297,297,298,297,298,297,298,297,298,298,298,298,298,297,298,297,298,297,298,297,298,298,298,298,297,300,300,300,0,300,300,300,300,300,300,0,0,0,0,300,13,301,300,299,13,301,300,299,13,13,299,299,299,299,299,13,301,300,299,13,301,300,299,13,301,300,299,13,300,300,299,13,301,300,299,301,13,13,13,13,13,13,301,300,299,301,13,301,300,299,299,301,299,13,299,300,13,301,300,299,13,301,300,299,13,301,300,299,13,301,300,299,0,0,266,266,0,305,0,0,304,0,305,308,304,0,0,308,0,0,0,0,0,0,0,0,304,0,0,224,224,303,17,304,8,308,305,306,224,303,17,304,8,308,305,306,224,17,302,227,303,17,17,224,304,8,305,306,224,304,8,305,306,224,224,302,227,303,303,17,17,303,304,8,308,306,224,303,17,304,8,308,305,306,224,224,303,17,304,8,308,305,306,224,224,303,17,304,8,308,305,306,224,224,224,304,8,308,305,306,224,304,304,8,8,308,308,305,305,306,306,224,224,222,17,304,8,308,305,306,224,303,17,304,8,308,305,306,224,224,302,227,226,303,303,17,17,17,222,222,304,306,8,303,17,304,8,308,305,306,224,302,227,303,303,17,17,303,17,304,8,308,305,306,224,304,8,306,224,222,302,227,226,303,303,17,17,17,306,306,0,310,308,8,303,17,306,222,224,302,227,226,303,17,17,17,302,227,303,303,17,17,222,8,222,222,0,304,8,305,306,224,8,306,224,303,17,304,8,308,305,306,224,304,8,306,224,303,17,304,8,308,305,306,224,303,17,304,8,308,305,306,224,310,308,306,8,303,17,304,8,308,305,306,224,224,0,312,312,0,0,0,0,0,0,0,0,0,0,0,0,0,325,314,314,311,316,317,318,325,314,314,316,317,327,318,325,314,319,320,321,322,323,324,316,317,327,318,325,314,319,320,321,322,323,324,314,314,319,320,321,322,323,324,314,319,320,321,322,323,324,314,319,320,321,322,323,324,316,317,327,318,325,314,314,319,320,321,322,323,324,316,317,327,318,325,314,314,319,320,321,322,323,324,316,317,327,318,325,314,319,320,321,322,323,324,314,314,319,314,319,320,314,314,319,319,320,320,325,325,314,319,320,321,322,323,324,316,317,327,318,325,314,314,319,320,321,322,323,324,321,316,317,327,318,325,314,319,320,321,322,323,324,316,317,327,318,325,314,319,320,321,322,323,324,314,319,320,321,322,323,324,321,323,322,0,316,318,320,323,322,324,320,314,311,316,317,318,318,311,316,317,318,318,311,316,317,318,318,314,319,320,321,322,323,324,325,321,322,323,314,319,320,321,322,323,324,316,317,327,318,325,314,319,320,321,322,323,324,314,319,320,321,322,323,324,316,317,327,318,325,314,319,320,321,322,323,324,316,317,327,318,325,314,319,320,321,322,323,324,319,327,316,317,327,318,325,314,319,320,321,322,323,324,314,0,0,0,0,0,0,0,0,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,0,0,0,0,333,366,333,332,366,333,332,329,332,332,366,333,332,366,333,332,366,333,332,329,332,329,366,333,332,333,366,333,332,366,333,332,333,366,329,333,329,332,329,366,366,333,332,366,333,332,333,366,333,332,366,333,332,0,0,0,335,335,335,336,335,336,335,335,336,335,336,335,336,335,336,335,336,335,336,335,335,335,336,335,335,336,336,335,336,335,335,336,336,335,336,335,336,335,336,336,335,336,335,336,335,336,335,336,335,336,335,336,335,336,335,336,0,0,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,0,0,338,338,338,338,338,338,338,338,338,338,338,338,338,338,338,338,338,0,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,0,0,0,0,326,258,0,258,0,346,0,0,0,241,258,258,258,258,0,258,0,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,0,258,258,350,0,0,354,241,350,350,241,326,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,0,258,0,258,258,258,258,258,258,258,258,258,258,258,258,258,346,241,0,0,0,352,352,352,295,351,341,352,353,354,326,258,295,342,343,344,345,346,331,347,241,348,349,350,351,341,352,353,354,326,258,295,342,343,344,345,346,331,347,241,348,349,350,351,341,326,295,342,343,344,345,346,331,347,241,348,349,350,341,326,295,342,343,344,345,346,331,347,241,348,349,350,295,342,342,342,341,258,295,342,343,344,345,346,331,347,349,350,351,341,352,353,354,326,258,295,342,343,344,345,346,331,347,241,348,349,350,351,341,352,353,354,326,258,295,342,343,344,345,346,331,347,241,348,349,350,351,341,352,353,354,326,258,295,342,343,344,345,346,331,347,241,348,349,350,351,353,326,346,326,326,346,346,331,349,345,341,352,353,354,326,258,295,295,342,343,344,345,346,331,347,241,348,349,350,351,341,352,353,354,326,258,295,295,295,295,295,295,295,342,343,344,345,346,331,347,241,348,349,350,351,326,341,348,351,341,352,353,354,326,258,295,342,343,344,345,346,331,347,241,348,349,350,351,344,341,352,353,354,326,258,295,342,343,344,345,346,331,347,241,348,349,350,351,341,352,353,354,326,258,295,342,343,344,345,346,331,347,241,348,349,350,351,341,343,343,343,348,342,295,351,341,331,295,295,347,345,341,353,342,345,343,343,347,347,347,341,341,326,295,342,343,344,345,346,331,347,241,348,349,350,295,341,295,342,343,344,345,346,331,347,349,351,341,352,353,354,326,258,295,342,343,344,345,346,331,347,241,348,349,350,351,341,352,353,354,326,258,295,342,343,344,345,346,331,347,241,348,349,350,351,341,352,353,354,326,258,295,342,343,344,345,346,331,347,241,348,349,350,351,341,352,353,354,326,258,295,342,343,344,345,346,331,347,241,348,349,350,351,341,352,353,354,326,258,295,342,343,344,345,346,331,347,241,348,349,350,351,367,368,369,370,371,372,373,374,372,373,367,375,376,372,373,367,367,377,378,379,380,381,373,372,373,373,382,383,384,376,385,372,373,367,367,373,386,387,376,388,385,376,389,390,391,392,388,388,388,384,393,376,394,395,386,396,373,377,390,391,397,398,369,369,369,369,399,383],"f":"``````{ce{}{}}000``````{bc{}}{df}111`{bh}0`{cc{}}0`````{{}b}055````````````{c{{j{e}}}{}{}}000{cl{}}0``77``7777{{nA`}{{Ad{Ab}}}}{nn}{{ce}h{}{}}{{AbAfAh}h}::::8837766;;{{{Al{Aj}}}n}{{nA`}{{B`{{An{Ab}}}}}}={AbBb}0888877>>````````````````{Ah{{Bf{Bd}}}}{cb{}}{ce{}{}}0{c{{j{{Bj{Bh}}}}}{}}{AhAh}9{{AhAh}Bl}{{{Bf{Bd}}}Ah}{{}Ah}{bc{}}02{{{Bf{{Bf{Bd}}}}}Ah}{bh}3{Ah{{Bj{Bd}}}}{ce{}{{C`{Bn}}}}0{{AhAh}Cb}{{ce}Cb{}{}}0{{AhCd}Cf}00{ChAh}{{{Bj{Bd}}}Ah}{cc{}}<{Ch{{j{AhCj}}}}{{Ahc}hCl}{{}b}{ce{}{}}{AhCn}{AhCb}3{{AhAh}{{D`{Bl}}}}43{cDb{}}{{Ahb}{{Bf{Bd}}}}{{}{{j{AhDd}}}}{c{{j{e}}}{}{}}{Cn{{j{AhDd}}}}1{cl{}}9{{ce}{{j{h}}}{}Df}{Ahh}```````;;{{{Dh{Bd}}{Bj{Bd}}{Bj{Bd}}DjDl}{{Dn{{Bj{Bd}}}}}}{{E`{Dh{Bd}}{Bj{Bd}}{Bj{Bd}}Dj}{{Dn{{Bj{Bd}}}}}}1{bc{}}0{bh}{cc{}}{{}{{Eb{DjDl}}}}{{}b}{ce{}{}}{{{Dh{Bd}}}Ed}{{Ed{Dh{Bd}}ce}{{j{{Bj{Bd}}Ef}}}{{Eh{{Bf{Bd}}}}}{{Ej{{Bf{Bd}}}}}}{{Ed{Dh{Bd}}{Bf{Bd}}{Bf{Bd}}{Bf{Bd}}}{{j{bEf}}}}{{Ed{Dh{Bd}}ce}{{Bj{Bd}}}{{Ej{{Bf{Bd}}}}}{{Ej{{Bf{Bd}}}}}}{{Ed{Dh{Bd}}{Bf{Bd}}{Bf{Bd}}{Bf{Bd}}}{{j{bEl}}}}{c{{j{e}}}{}{}}0{cl{}}7{Edh}```88{EnEn}{{ce}h{}{}}?{Enc{}}{bc{}}{bh}{{EnCd}Cf}{cc{}}{{}En}{En{{Dn{h}}}}{{}b}{ce{}{}}{{{Dh{Bd}}}En}1>>=1```````{F`{{Bf{Bd}}}}{Fb{{Bf{Bd}}}}{cb{}}0``444444444444{c{{j{{Bj{Bh}}}}}{}}0{F`F`}{FbFb}{FdFd}{FfFf}{FhFh}{{ce}h{}{}}0000{{F`F`}Bl}{{FbFb}Bl}{{}F`}{{}Fb}{{}Fd}{{}Ff}{{}Fh}{bc{}}00000000000{bh}00000{ce{}{{C`{Bn}}}}000{{F`F`}Cb}{{FbFb}Cb}{{FdFd}Cb}{{FfFf}Cb}{{FhFh}Cb}{{ce}Cb{}{}}000000000{{F`Cd}Cf}00{{FbCd}Cf}00{{FdCd}Cf}{{FfCd}Cf}{{FhCd}Cf}{cc{}}{{{Bj{Bd}}}F`}1{ChF`}{{{Bf{Bd}}}F`}3{{{Bj{Bd}}}Fb}{{{Bf{Bd}}}Fb}{ChFb}666{{{Bj{Bd}}}Fj}{Ch{{Dn{F`Cj}}}}{Ch{{Dn{FbCj}}}}{DbFj}{{}Fj}{{F`c}hCl}{{Fbc}hCl}{{Fdc}hCl}{{Ffc}hCl}{{Fhc}hCl}{{}b}00000{ce{}{}}00000{F`Cn}{FbCn}{FdCn}{FfCn}{FhCn}66{{F`F`}{{D`{Bl}}}}{{FbFb}{{D`{Bl}}}}{FlF`}{FjF`}0`{{Fl{Bf{Bd}}{Bf{Bd}}}{{Dn{Fb}}}}{{Fj{Bf{Bd}}{Bf{Bd}}}{{Dn{Fb}}}}``{{{Bj{Bd}}Db}{{Bj{Bd}}}}{{{Bj{Bd}}Fn}{{Bj{Bd}}}}`{Fj{{Bj{Bd}}}}>>>>>{cDb{}}0{{}{{Dn{F`Dd}}}}{{}{{Dn{FbDd}}}}{{}{{j{FdDd}}}}{{}{{j{FfDd}}}}{{}{{j{FhDd}}}}{c{{j{e}}}{}{}}00000{Cn{{Dn{F`Dd}}}}{Cn{{Dn{FbDd}}}}{Cn{{j{FdDd}}}}{Cn{{j{FfDd}}}}{Cn{{j{FhDd}}}}555555{cl{}}00000{{FbF`{Bf{Bd}}{Bf{Bd}}}{{Dn{h}}}}{{FdDb}Cb}{{Fh{Bf{Bd}}{Bf{Bd}}}Cb}{{FbF`{Bf{Bd}}}{{Dn{h}}}}{ce{}{}}00000{{ce}{{j{h}}}{}Df}0{F`h}{Fbh}````{G`{{Bf{Bd}}}}{Gb{{Bf{Bd}}}}{cb{}}06666{c{{j{{Bj{Bh}}}}}{}}0{G`G`}{GbGb}{{ce}h{}{}}0{{}G`}{{}Gb}{bc{}}000{bh}0{ce{}{{C`{Bn}}}}000{{GbGb}Cb}{{ce}Cb{}{}}0{{GbCd}Cf}{DlG`}{{{Dh{Bd}}}G`}{cc{}}{DjGb}{{{Dh{Bd}}}Gb}2{G`Gb}{DbG`}>{{Gbc}hCl}{{}b}0{ce{}{}}0{G`Cn}{GbCn}622{{}{{Dn{G`Dd}}}}{{}{{Dn{GbDd}}}}{c{{j{e}}}{}{}}0{Cn{{Dn{G`Dd}}}}{Cn{{Dn{GbDd}}}}22{cl{}}088{{ce}{{j{h}}}{}Df}0{G`h}``{{{Bf{Bd}}}{{D`{Gd}}}}{{{Bf{Bd}}}Gf}{{{Bf{Bd}}}Gd}{Gd{{Bj{Bd}}}}{Gf{{Bj{Bd}}}}{{Gd{Bj{{Bj{Bd}}}}}h}{{Gdb}{{Bj{Bd}}}}{{}Bd}{{}b}0{ChGh}{Gjh}``{Fn{{Bf{Bd}}}}{cb{}}{ce{}{}}0{c{{j{{Bj{Bh}}}}}{}}{FnFn}{{ce}h{}{}}{{FnFn}Bl}{{}Fn}{bc{}}0{bh}{ce{}{{C`{Bn}}}}0{{FnFn}Cb}{{ce}Cb{}{}}0{{FnCd}Cf}00{{{Bf{Bd}}}Fn}{cc{}}{{{Bj{Bd}}}Fn}{ChFn}{Ch{{j{FnCj}}}}{{Fnc}hCl}{{}b}{ce{}{}}{FnCn}2{{FnFn}{{D`{Bl}}}}2{cDb{}}{{}{{j{FnDd}}}}{c{{j{e}}}{}{}}{Cn{{j{FnDd}}}}1{cl{}}7{{ce}{{j{h}}}{}Df}{Fnh}{{}Gl}`{{GnGn}Gn}0{{GnAf}Gn}{{GnGn}h}0{{GnAf}h}>>{{GnGn}{{D`{Gn}}}}0{GnGn}{{ce}h{}{}}{{GnGn}Bl}{{}Gn}{bc{}}0{bh}{{GnGn}Cb}{{ce}Cb{}{}}0{{GnCd}Cf}0{H`Gn}{HbGn}{cc{}}{BdGn}{HdGn}{AfGn}{{Gnc}hCl}{{}b}{ce{}{}}{GnCn}{GnCb}0{{GnAf}Gn}{{GnGn}Gn}0{{GnGn}h}{{GnAf}h}1{{GnGn}{{D`{Bl}}}}7{cDb{}}{{}{{j{GnDd}}}}{c{{j{e}}}{}{}}{Cn{{j{GnDd}}}}1{cl{}}<{{}Gn}`````````{Hf{{Bf{Bd}}}}{Hh{{Bf{Bd}}}}{cb{}}0{ce{}{}}00000000000{c{{j{{Bj{Bh}}}}}{}}0{HfHf}{HhHh}{HjHj}{HlHl}{HnHn}{I`I`}{{ce}h{}{}}00000{{HfHf}Bl}{{HhHh}Bl}{{}{{D`{Hj}}}}{{}Hf}{{}Hh}{{}Hj}{{}Hn}{{}I`}{bc{}}00000000000{bh}00000`{ce{}{{C`{Bn}}}}000{{HfHf}Cb}{{HhHh}Cb}{{HjHj}Cb}{{HlHl}Cb}{{HnHn}Cb}{{ce}Cb{}{}}000000000{{HfCd}Cf}00{{HhCd}Cf}00{{HjCd}Cf}{{HlCd}Cf}{{HnCd}Cf}{{I`Cd}Cf}{HfHj}{{{Bf{Bd}}}Hf}{cc{}}{ChHf}{{{Bj{Bd}}}Hf}{{{Bf{Bd}}}Hh}{ChHh}4{{{Bj{Bd}}}Hh}5555{Ch{{Dn{HfCj}}}}{Ch{{Dn{HhCj}}}}{{Hfc}hCl}{{Hhc}hCl}{{Hjc}hCl}```{{}b}00000{ce{}{}}00000{HfCn}{HhCn}{HjCn}{HlCn}{HnCn}{{HlIbIbHn}Cb}77``{{HfHf}{{D`{Bl}}}}{{HhHh}{{D`{Bl}}}}`````888888{cDb{}}0{{}{{Dn{HfDd}}}}{{}{{Dn{HhDd}}}}{{}{{j{HjDd}}}}{{}{{j{HnDd}}}}{c{{j{e}}}{}{}}00000{Cn{{Dn{HfDd}}}}{Cn{{Dn{HhDd}}}}{Cn{{j{HjDd}}}}{Cn{{j{HlDd}}}}{Cn{{j{HnDd}}}}555555{cl{}}00000{{HlHn}{{Dn{I`}}}}{ce{}{}}00000{{ce}{{j{h}}}{}Df}0{Hfh}{Hhh}{{Id{Bf{Bd}}}{{Dh{Bd}}}}``````4444`{IfIf}{IhIh}{{ce}h{}{}}0{{}If}{{}Ih}{bc{}}000`{bh}0{{IfIf}Cb}{{IhIh}Cb}{{ce}Cb{}{}}000{{IfCd}Cf}{{IhCd}Cf}{cc{}}0`{{}b}0{ce{}{}}0{IfCn}{IhCn}``22{{}{{j{IfDd}}}}{{}{{j{IhDd}}}}{c{{j{e}}}{}{}}0{Cn{{j{IfDd}}}}{Cn{{j{IhDd}}}}22{cl{}}0{{IhIf}{{Dn{I`}}}}99````````````````````````````````````````````{cIj{}}````::::::::::::::::::::::::::::::``{IlIl}{InIn}{J`J`}{JbJb}{JdJd}{JfJf}{JhJh}{JjJj}{JlJl}{JnJn}{K`K`}{KbKb}{KdKd}{KfKf}{{ce}h{}{}}0000000000000``{{}Il}{{}In}{{}J`}{{}Jb}{{}Jd}{{}Jf}{{}Jh}{{}Jj}{{}Jl}{{}Jn}{{}K`}{{}Kb}{{}Kd}{{}Kf}{bc{}}00000000000000000000000000000{c{{j{Jb}}}Kh}{c{{j{Jd}}}Kh}{c{{j{Jf}}}Kh}{c{{j{Jh}}}Kh}{c{{j{Jj}}}Kh}{c{{j{Jl}}}Kh}{c{{j{Jn}}}Kh}{c{{j{K`}}}Kh}{c{{j{Kb}}}Kh}{c{{j{Kd}}}Kh}{c{{j{Kf}}}Kh}`{bh}00000000000000`{{IlIl}Cb}{{InIn}Cb}{{J`J`}Cb}{{JbJb}Cb}{{JnJn}Cb}{{K`K`}Cb}{{ce}Cb{}{}}00000000000``{{KjCd}Cf}0{{IlCd}Cf}{{InCd}Cf}{{J`Cd}Cf}{{JbCd}Cf}{{JdCd}Cf}{{JfCd}Cf}{{JhCd}Cf}{{JjCd}Cf}{{JlCd}Cf}{{JnCd}Cf}{{K`Cd}Cf}{{KbCd}Cf}{{KdCd}Cf}{{KfCd}Cf}{cc{}}00000000000000``{{}b}00000000000000{ce{}{}}00000000000000{IlCn}{InCn}{J`Cn}{JbCn}{K`Cn}{{IlIbIb}Cb}```````````````````````````````````66666666666666{cDb{}}{{}{{j{IlDd}}}}{{}{{j{InDd}}}}{{}{{j{J`Dd}}}}{{}{{j{JbDd}}}}{{}{{j{K`Dd}}}}{c{{j{e}}}{}{}}00000000000000{Cn{{j{IlDd}}}}{Cn{{j{InDd}}}}{Cn{{j{J`Dd}}}}{Cn{{j{JbDd}}}}{Cn{{j{K`Dd}}}}555555555555555{cl{}}00000000000000{{InIl{Kn{Kl}}}{{j{I`Kj}}}}``{ce{}{}}00000000000000{{Id{Bf{Bd}}}Ed}{{Id{Bf{Bd}}{Bf{Bd}}}{{Bj{Bd}}}}{{Id{Bf{Bd}}{Bf{Bd}}}{{D`{{Bj{Bd}}}}}}{{}L`}{{}Ib}```5555{LbLb}{LdLd}{{ce}h{}{}}0`{{}Lb}{{}Ld}{bc{}}000{bh}0{{LbLb}Cb}{{LdLd}Cb}{{ce}Cb{}{}}000{{LbCd}Cf}{{LdCd}Cf}{AfLb}{cc{}}0{{Lbc}hCl}{{Ldc}hCl}{{}b}0{ce{}{}}0{LbCn}{LdCn}<``{{H`H`H`}Lb}```33{{}{{j{LbDd}}}}{{}{{j{LdDd}}}}{c{{j{e}}}{}{}}0{Cn{{j{LbDd}}}}{Cn{{j{LdDd}}}}22{cl{}}099``99{{{Lf{c}}}{{Lf{c}}}Lh}{{ce}h{}{}}{bc{}}0{bh}{{{Lf{c}}{Lf{c}}}CbLj}{{ce}Cb{}{}}0{{{Lf{c}}Cd}CfLl}{cc{}}{{{Lf{c}}e}hLnCl}{{}b}`{ce{}{}}{{{Lf{c}}}CnM`}{{H`c}{{Lf{c}}}{}}2{c{{j{e}}}{}{}}{Cn{{j{{Lf{c}}Dd}}}Mb}1?`4``4444``{MdMd}{MfMf}??{{}Md}{{}Mf}{bc{}}000{bh}0`{{MdCd}Cf}{{MfCd}Cf}`??==<<``<<`9999{cl{}}0`==`````````======{MhMh}{MjMj}{MlMl}{{ce}h{}{}}00{{}Mh}{{}Ml}::::::999{{MlMl}Cb}{{ce}Cb{}{}}0`{{MhCd}Cf}{{MjCd}Cf}{{MlCd}Cf}{cc{}}00``{{}b}00{ce{}{}}00{MhCn}{MjCn}{MlCn}`````````333`{{}{{j{MhDd}}}}{{}{{j{MlDd}}}}{c{{j{e}}}{}{}}00{Cn{{j{MhDd}}}}{Cn{{j{MjDd}}}}{Cn{{j{MlDd}}}}333{cl{}}00`:::````{Mn{{Bf{Bd}}}}{cb{}}<<<<<<<<{c{{j{{Bj{Bh}}}}}{}}{MnMn}{{ce}h{}{}}{{MnMn}Bl}{{{Bf{Bd}}}Mn}{{}Mn}{N`Mn}{bc{}}0{NbMn}1{NdMn}22222{bh}000{Mn{{Bj{Bd}}}}{ce{}{{C`{Bn}}}}0{{MnMn}Cb}{{ce}Cb{}{}}0{{MnCd}Cf}0{cc{}}00{{{Dh{Bd}}}Mn}1{ChMn}{Ch{{Dn{Mn}}}}{F`Mn}{FnMn}{{Mnc}hCl}{{}b}000{ce{}{}}000{MnCn}{{{Bf{Bd}}Bd{Bf{Bd}}}Mn}{{MnMn}{{D`{Bl}}}}4{MnDb}4{{}{{Dn{MnDd}}}}{c{{j{e}}}{}{}}000{Cn{{Dn{MnDd}}}}1111{cl{}}0008888{{ce}{{j{h}}}{}Df}```99{NfNf}{{ce}h{}{}}{{}Nf}{bc{}}0{bh}`{{NfNf}Cb}{{ce}Cb{}{}}0{{NfCd}Cf}{cc{}}{{Nfc}hCl}`{{}b}{ce{}{}}{NfCn}1{{}{{j{NfDd}}}}{c{{j{e}}}{}{}}{Cn{{j{NfDd}}}}1{cl{}}5```````````55555555555555```{NhNh}{NjNj}{NlNl}{NnNn}{O`O`}{ObOb}{OdOd}{{ce}h{}{}}000000{{NhNh}Bl}{{}Nh}{{}Nj}{{}Nl}{{}Nn}{{}O`}{{}Ob}{{}Od}{bc{}}0000000000000{bh}000000``{{NhNh}Cb}{{NjNj}Cb}{{NlNl}Cb}{{NnNn}Cb}{{O`O`}Cb}{{ObOb}Cb}{{OdOd}Cb}{{ce}Cb{}{}}0000000000000{{NhCd}Cf}{{NjCd}Cf}{{NlCd}Cf}{{NnCd}Cf}{{O`Cd}Cf}{{ObCd}Cf}{{OdCd}Cf}{cc{}}000000``{{Nhc}hCl}{{Njc}hCl}{{Nlc}hCl}{{Nnc}hCl}{{Odc}hCl}`{{}b}000000{ce{}{}}000000{NhCn}{NjCn}{NlCn}{NnCn}{O`Cn}{ObCn}{OdCn}``{{NhNh}{{D`{Bl}}}}```8888888{{}{{j{NjDd}}}}{{}{{j{NlDd}}}}{{}{{j{NnDd}}}}{{}{{j{O`Dd}}}}{{}{{j{ObDd}}}}{{}{{j{OdDd}}}}{c{{j{e}}}{}{}}000000{Cn{{j{NhDd}}}}{Cn{{j{NjDd}}}}{Cn{{j{NlDd}}}}{Cn{{j{NnDd}}}}{Cn{{j{O`Dd}}}}{Cn{{j{ObDd}}}}{Cn{{j{OdDd}}}}7777777{cl{}}000000``````{ce{}{}}000000``````````{cIj{}}111111111111111111``{OfOf}{OhOh}{OjOj}{OlOl}{OnOn}{A`A`}{AbAb}{AdAd}{{ce}h{}{}}0000000{{}Of}{{}Oh}{{}Oj}{{}Ol}{{}On}{{}A`}{{}Ab}{{}Ad}{bc{}}00000000000000000{bh}00000000```{{OfOf}Cb}{{OhOh}Cb}{{OjOj}Cb}{{OlOl}Cb}{{OnOn}Cb}{{A`A`}Cb}{{AbAb}Cb}{{AdAd}Cb}{{ce}Cb{}{}}000000000000000{{AfCd}Cf}0{{OfCd}Cf}{{OhCd}Cf}{{OjCd}Cf}{{OlCd}Cf}{{OnCd}Cf}{{A`Cd}Cf}{{AbCd}Cf}{{AdCd}Cf}{cc{}}00000000``{{}b}00000000{ce{}{}}00000000{OfCn}{OhCn}{OjCn}{OlCn}{OnCn}{A`Cn}{AbCn}{AdCn}````{{On{Al{Fl}}}{{Dn{Ab}}}}{{A`{Al{Fl}}}{{Dn{Ad}}}}````````````::::::::{cDb{}}{{}{{j{OfDd}}}}{{}{{j{OhDd}}}}{{}{{j{OjDd}}}}{{}{{j{OlDd}}}}{{}{{j{OnDd}}}}{{}{{j{A`Dd}}}}{{}{{j{AbDd}}}}{{}{{j{AdDd}}}}{c{{j{e}}}{}{}}00000000{Cn{{j{OfDd}}}}{Cn{{j{OhDd}}}}{Cn{{j{OjDd}}}}{Cn{{j{OlDd}}}}{Cn{{j{OnDd}}}}{Cn{{j{A`Dd}}}}{Cn{{j{AbDd}}}}{Cn{{j{AdDd}}}}888888888{cl{}}00000000{Oj{{Dn{OfAf}}}}{ce{}{}}00000000````````````````````````````````````````````````````````````{{AhAj}{{D`{Al}}}}````````11111111111111111111111111111111111111111111111111111111111111`````{AnAn}{AA`AA`}{AAbAAb}{AAdAAd}{AAfAAf}{AAhAAh}{AAjAAj}{AAlAAl}{AAnAAn}{AB`AB`}{ABbABb}{ABdABd}{ABfABf}{ABhABh}{ABjABj}{ABlABl}{ABnABn}{AC`AC`}{ACbACb}{ACdACd}{ACfACf}{AChACh}{ACjACj}{AClACl}{ACnACn}{AlAl}{AD`AD`}{ADbADb}{ADdADd}{AhAh}{ADfADf}{{ce}h{}{}}000000000000000000000000000000{{ABbABb}Bl}``{{AD`Hj}Cb}{{}An}{{}AA`}{{}AAb}{{}AAd}{{}AAf}{{}AAh}{{}AAj}{{}AAl}{{}AAn}{{}AB`}{{}ABb}{{}ABd}{{}ABf}{{}ABh}{{}ABj}{{}ABl}{{}ABn}{{}AC`}{{}ACb}{{}ACd}{{}ACf}{{}ACh}{{}ACj}{{}ACl}{{}ACn}{{}Al}{{}ADd}{{}Ah}{{}ADf}{{AhLb}{{D`{Al}}}}`{bc{}}0000000000000000000000000000000000000000000000000000000000000{bh}000000000000000000000000000000```{{AnAn}Cb}{{AA`AA`}Cb}{{AAbAAb}Cb}{{AAdAAd}Cb}{{AAfAAf}Cb}{{AAhAAh}Cb}{{AAjAAj}Cb}{{AAlAAl}Cb}{{AAnAAn}Cb}{{AB`AB`}Cb}{{ABbABb}Cb}{{ABdABd}Cb}{{ABfABf}Cb}{{ABhABh}Cb}{{ABjABj}Cb}{{ABlABl}Cb}{{ABnABn}Cb}{{AC`AC`}Cb}{{ACbACb}Cb}{{ACdACd}Cb}{{ACfACf}Cb}{{AChACh}Cb}{{ACjACj}Cb}{{AClACl}Cb}{{ACnACn}Cb}{{AlAl}Cb}{{ADdADd}Cb}{{AhAh}Cb}{{ADfADf}Cb}{{ce}Cb{}{}}000000000000000000000000000000000000000000000000000000000```{{AnCd}Cf}{{AA`Cd}Cf}{{AAbCd}Cf}{{AAdCd}Cf}{{AAfCd}Cf}{{AAhCd}Cf}{{AAjCd}Cf}{{AAlCd}Cf}{{AAnCd}Cf}{{AB`Cd}Cf}{{ABbCd}Cf}{{ABdCd}Cf}{{ABfCd}Cf}{{ABhCd}Cf}{{ABjCd}Cf}{{ABlCd}Cf}{{ABnCd}Cf}{{AC`Cd}Cf}{{ACbCd}Cf}{{ACdCd}Cf}{{ACfCd}Cf}{{AChCd}Cf}{{ACjCd}Cf}{{AClCd}Cf}{{ACnCd}Cf}{{AlCd}Cf}{{AD`Cd}Cf}{{ADbCd}Cf}{{ADdCd}Cf}{{AhCd}Cf}{{ADfCd}Cf}{cc{}}000000000000000000000000000000`{{ABdFnLb}{{D`{AB`}}}}````{{ABdADhFnLb}Cb}{{Anc}hCl}{{AA`c}hCl}{{AAbc}hCl}{{AAdc}hCl}{{AAfc}hCl}{{AAhc}hCl}{{AAjc}hCl}{{AAlc}hCl}{{AAnc}hCl}{{AB`c}hCl}{{ABbc}hCl}{{ABfc}hCl}{{ABhc}hCl}{{ABjc}hCl}{{ABlc}hCl}{{ABnc}hCl}{{AC`c}hCl}{{ACbc}hCl}{{ACdc}hCl}{{ACfc}hCl}{{AChc}hCl}{{ACjc}hCl}{{AClc}hCl}{{ACnc}hCl}{{Alc}hCl}{{{Bf{Bd}}F`AfGb}{{Dh{Bd}}}}{{ADdc}hCl}{{Ahc}hCl}{{ADfc}hCl}```````{{}b}000000000000000000000000000000{ce{}{}}000000000000000000000000000000{AnCn}{AA`Cn}{AAbCn}{AAdCn}{AAfCn}{AAhCn}{AAjCn}{AAlCn}{AAnCn}{AB`Cn}{ABbCn}{ABdCn}{ABfCn}{ABhCn}{ABjCn}{ABlCn}{ABnCn}{AC`Cn}{ACbCn}{ACdCn}{ACfCn}{AChCn}{ACjCn}{AClCn}{ACnCn}{AlCn}{AD`Cn}{ADbCn}{ADdCn}{AhCn}{ADfCn}`````{{AAlADh}Cb}`````````````{{ABbABb}{{D`{Bl}}}}{AD`Hn}````{ADbHl}``````````````````{ce{}{}}000000000000000000000000000000{AAl{{j{cDd}}}Mb}{Al{{j{cDd}}}Mb}{{}{{j{AnDd}}}}{{}{{j{AA`Dd}}}}{{}{{j{AAbDd}}}}{{}{{j{AAdDd}}}}{{}{{j{AAfDd}}}}{{}{{j{AAhDd}}}}{{}{{j{AAjDd}}}}{{}{{j{AAlDd}}}}{{}{{j{AAnDd}}}}{{}{{j{AB`Dd}}}}{{}{{j{ABbDd}}}}{{}{{j{ABdDd}}}}{{}{{j{ABhDd}}}}{{}{{j{ABjDd}}}}{{}{{j{ABlDd}}}}{{}{{j{ABnDd}}}}{{}{{j{AC`Dd}}}}{{}{{j{ACbDd}}}}{{}{{j{ACdDd}}}}{{}{{j{ACfDd}}}}{{}{{j{AChDd}}}}{{}{{j{ACjDd}}}}{{}{{j{AlDd}}}}{{}{{j{AhDd}}}}{{}{{j{ADfDd}}}}{c{{j{e}}}{}{}}000000000000000000000000000000{Cn{{j{AnDd}}}}{Cn{{j{AA`Dd}}}}{Cn{{j{AAbDd}}}}{Cn{{j{AAdDd}}}}{Cn{{j{AAfDd}}}}{Cn{{j{AAhDd}}}}{Cn{{j{AAjDd}}}}{Cn{{j{AAlDd}}}}{Cn{{j{AAnDd}}}}{Cn{{j{AB`Dd}}}}{Cn{{j{ABbDd}}}}{Cn{{j{ABdDd}}}}{Cn{{j{ABfDd}}}}{Cn{{j{ABhDd}}}}{Cn{{j{ABjDd}}}}{Cn{{j{ABlDd}}}}{Cn{{j{ABnDd}}}}{Cn{{j{AC`Dd}}}}{Cn{{j{ACbDd}}}}{Cn{{j{ACdDd}}}}{Cn{{j{ACfDd}}}}{Cn{{j{AChDd}}}}{Cn{{j{ACjDd}}}}{Cn{{j{AClDd}}}}{Cn{{j{ACnDd}}}}{Cn{{j{AlDd}}}}{Cn{{j{AD`Dd}}}}{Cn{{j{ADbDd}}}}{Cn{{j{ADdDd}}}}{Cn{{j{AhDd}}}}{Cn{{j{ADfDd}}}}{c{{j{e}}}{}{}}000000000000000000000000000000`{cl{}}000000000000000000000000000000```````{ce{}{}}000000000000000000000000000000```````````````````````````````````````````````````````````````````{{ADjADlcADneDb}{{Dn{h}}}AE`AEb}{cIj{}}``222222222222222222222222222222222222`{ADlADl}{AEdAEd}{AEfAEf}{AEhAEh}{AEjAEj}{AElAEl}{ADnADn}{AEnAEn}{AF`AF`}{AFbAFb}{AFdAFd}{AFfAFf}{AFhAFh}{AFjAFj}{AFlAFl}{AFnAFn}{{ce}h{}{}}000000000000000```{{}ADl}{{}AEd}{{}AEf}{{}AEh}{{}AEj}{{}AEl}{{}ADn}{{}AFf}{{}AFh}{{}AFj}{{}AFl}{{}AFn}{bc{}}00000000000000000000000000000000000{bh}00000000000000000{AEfAh}{AEhAh}{{ADlADl}Cb}{{AEdAEd}Cb}{{AEfAEf}Cb}{{AEhAEh}Cb}{{AEjAEj}Cb}{{AElAEl}Cb}{{ADnADn}Cb}{{AEnAEn}Cb}{{AF`AF`}Cb}{{AFbAFb}Cb}{{AFdAFd}Cb}{{AFfAFf}Cb}{{AFhAFh}Cb}{{AFjAFj}Cb}{{AFlAFl}Cb}{{AFnAFn}Cb}{{ce}Cb{}{}}0000000000000000000000000000000``{{ADlCd}Cf}{{AEdCd}Cf}{{AEfCd}Cf}{{AEhCd}Cf}{{AEjCd}Cf}{{AElCd}Cf}{{ADnCd}Cf}{{AEnCd}Cf}{{AF`Cd}Cf}{{AFbCd}Cf}{{AFdCd}Cf}{{AFfCd}Cf}{{AG`Cd}Cf}0{{AFhCd}Cf}{{AFjCd}Cf}{{AFlCd}Cf}{{AFnCd}Cf}{cc{}}000000000000{AGbAG`}11111`{{ADlc}hCl}{{AEdc}hCl}{{AEfc}hCl}{{AEhc}hCl}{{AF`c}hCl}{{AFbc}hCl}{{AFfc}hCl}{{AFhc}hCl}{{AFnc}hCl}`````{{{Bf{AFf}}}Ah}0````{{}b}00000000000000000{ce{}{}}00000000000000000{ADlCn}{AEdCn}{AEfCn}{AEhCn}{AEjCn}{AElCn}{ADnCn}{AEnCn}{AF`Cn}{AFbCn}{AFdCn}{AFfCn}{AFhCn}{AFjCn}{AFlCn}{AFnCn}```{AGdCb}{ADnCb}{{AEhAEf}Cb}{AFjCb}``{{{Bf{AEn}}}Ah}```{{AGdAGd}Cb}{{ADnADn}Cb}`{{AhAGfAf}ADj}{{ADlAfAEd}ADl}{{FnAf}ADl}{{AE`F`}{{Dn{ABdAG`}}}}```{{ADjCb}{{Dn{AGd}}}}````{{AElcFnDb}{{Dn{Fb}}}Fl}{{ADncFnDb}{{Dn{h}}}Fl}`{AG`{{D`{AGh}}}}`````{AGdAGj}{ADnAGj}{ce{}{}}000000000000000{cDb{}}{AGdAh}{ADnAh}`{{}{{j{ADlDd}}}}{{}{{j{AEfDd}}}}{{}{{j{AEhDd}}}}{{}{{j{AElDd}}}}{{}{{j{ADnDd}}}}{{}{{j{AFfDd}}}}{{}{{j{AFhDd}}}}{{}{{j{AFjDd}}}}{{}{{j{AFlDd}}}}{{}{{j{AFnDd}}}}{c{{j{e}}}{}{}}00000000000000000{Cn{{j{ADlDd}}}}{Cn{{j{AEdDd}}}}{Cn{{j{AEfDd}}}}{Cn{{j{AEhDd}}}}{Cn{{j{AEjDd}}}}{Cn{{j{AElDd}}}}{Cn{{j{ADnDd}}}}{Cn{{j{AEnDd}}}}{Cn{{j{AF`Dd}}}}{Cn{{j{AFbDd}}}}{Cn{{j{AFdDd}}}}{Cn{{j{AFfDd}}}}{Cn{{j{AFhDd}}}}{Cn{{j{AFjDd}}}}{Cn{{j{AFlDd}}}}{Cn{{j{AFnDd}}}}{c{{j{e}}}{}{}}00000000000000000{cl{}}00000000000000000{{AEb{Bf{AEn}}}{{Dn{h}}}}{ADn{{Dn{h}}}}{AEn{{Dn{h}}}}{AF`{{Dn{h}}}}{AFb{{Dn{h}}}}{AFd{{Dn{h}}}}{{ADnFnDb}{{Dn{h}}}}{{AElF`}{{Dn{h}}}}`{ce{}{}}00000000000000000`````````00000000{AGlAGl}{AGnAGn}{{ce}h{}{}}0{{AGlAGl}Bl}{{AGnAGn}Bl}{{}AGl}{{}AGn}{bc{}}0000000{bh}000{{AGlAGl}Cb}{{AGnAGn}Cb}{{ce}Cb{}{}}000{{AGlCd}Cf}{{AGnCd}Cf}{cc{}}000{{AGlc}hCl}{{AGnc}hCl}{{}b}000{ce{}{}}000{AGlCn}{AGnCn}``{{AGlAGl}{{D`{Bl}}}}{{AGnAGn}{{D`{Bl}}}}```44{{AGfAf}{{Dn{AH`}}}}{c{{j{e}}}{}{}}000{Cn{{j{AGlDd}}}}{Cn{{j{AGnDd}}}}2222{cl{}}000`9999{AGf{{Bj{AH`}}}}```````````````````````````````````````````````````````````````::::::::::::::::::::::::::::::::::::::::::::::::::::::```{AHbAHb}{AHdAHd}{AHfAHf}{AHhAHh}{AHjAHj}{AHlAHl}{AHnAHn}{AI`AI`}{AIbAIb}{AIdAId}{AIfAIf}{AIhAIh}{AIjAIj}{AIlAIl}{AInAIn}{AJ`AJ`}{AJbAJb}{AJdAJd}{AJfAJf}{AJhAJh}{AJjAJj}{AJlAJl}{AJnAJn}{AK`AK`}{AKbAKb}{AKdAKd}{AKfAKf}{{ce}h{}{}}00000000000000000000000000{{AHjAHj}Bl}{{AJbAJb}Bl}``````{{}AHb}{{}AHd}{{}AHf}{{}AHh}{{}AHl}{{}AHn}{{}AI`}{{}AIb}{{}AId}{{}AIf}{{}AIh}{{}AIj}{{}AIl}{{}AIn}{{}AJ`}{{}AJd}{{}AJf}{{}AJh}{{}AJj}{{}AJl}{{}AJn}{{}AK`}{{}AKb}{{}AKf}{bc{}}00000000000000000000000000000000000000000000000000000{bh}00000000000000000000000000{{AHbAHb}Cb}{{AHdAHd}Cb}{{AHfAHf}Cb}{{AHhAHh}Cb}{{AHjAHj}Cb}{{AHlAHl}Cb}{{AHnAHn}Cb}{{AI`AI`}Cb}{{AIbAIb}Cb}{{AIdAId}Cb}{{AIfAIf}Cb}{{AIhAIh}Cb}{{AIjAIj}Cb}{{AIlAIl}Cb}{{AInAIn}Cb}{{AJ`AJ`}Cb}{{AJbAJb}Cb}{{AJdAJd}Cb}{{AJfAJf}Cb}{{AJhAJh}Cb}{{AJjAJj}Cb}{{AJlAJl}Cb}{{AJnAJn}Cb}{{AK`AK`}Cb}{{AKbAKb}Cb}{{AKdAKd}Cb}{{AKfAKf}Cb}{{ce}Cb{}{}}00000000000000000000000000000000000000000000000000000````{{AHbCd}Cf}{{AHdCd}Cf}{{AHfCd}Cf}{{AHhCd}Cf}{{AHjCd}Cf}{{AHlCd}Cf}{{AHnCd}Cf}{{AI`Cd}Cf}{{AIbCd}Cf}{{AIdCd}Cf}{{AIfCd}Cf}{{AIhCd}Cf}{{AIjCd}Cf}{{AIlCd}Cf}{{AInCd}Cf}{{AJ`Cd}Cf}{{AJbCd}Cf}{{AJdCd}Cf}{{AJfCd}Cf}{{AJhCd}Cf}{{AJjCd}Cf}{{AJlCd}Cf}{{AJnCd}Cf}{{AK`Cd}Cf}{{AKbCd}Cf}{{AKdCd}Cf}{{AKfCd}Cf}`{cc{}}00000000000000000000000000`````{{AHbc}hCl}{{AHdc}hCl}{{AHfc}hCl}{{AHhc}hCl}{{AHjc}hCl}{{AHlc}hCl}{{AHnc}hCl}{{AI`c}hCl}{{AIbc}hCl}{{AIdc}hCl}{{AIfc}hCl}{{AIhc}hCl}{{AIjc}hCl}{{AIlc}hCl}{{AInc}hCl}{{AJ`c}hCl}{{AJbc}hCl}{{AJdc}hCl}{{AJfc}hCl}{{AJhc}hCl}{{AJjc}hCl}{{AJlc}hCl}{{AJnc}hCl}{{AK`c}hCl}{{AKbc}hCl}{{AKdc}hCl}{{AKfc}hCl}`{{}b}00000000000000000000000000{ce{}{}}00000000000000000000000000{AHbCn}{AHdCn}{AHfCn}{AHhCn}{AHjCn}{AHlCn}{AHnCn}{AI`Cn}{AIbCn}{AIdCn}{AIfCn}{AIhCn}{AIjCn}{AIlCn}{AInCn}{AJ`Cn}{AJbCn}{AJdCn}{AJfCn}{AJhCn}{AJjCn}{AJlCn}{AJnCn}{AK`Cn}{AKbCn}{AKdCn}{AKfCn}````````{{AHjAHj}{{D`{Bl}}}}{{AJbAJb}{{D`{Bl}}}}``````````````{ce{}{}}00000000000000000000000000``{{}{{j{AHbDd}}}}{{}{{j{AHdDd}}}}{{}{{j{AHfDd}}}}{{}{{j{AHhDd}}}}{{}{{j{AHlDd}}}}{{}{{j{AHnDd}}}}{{}{{j{AI`Dd}}}}{{}{{j{AIbDd}}}}{{}{{j{AIdDd}}}}{{}{{j{AIfDd}}}}{{}{{j{AIhDd}}}}{{}{{j{AIjDd}}}}{{}{{j{AIlDd}}}}{{}{{j{AInDd}}}}{{}{{j{AJ`Dd}}}}{{}{{j{AJdDd}}}}{{}{{j{AJfDd}}}}{{}{{j{AJhDd}}}}{{}{{j{AJjDd}}}}{{}{{j{AJlDd}}}}{{}{{j{AJnDd}}}}{{}{{j{AK`Dd}}}}{{}{{j{AKbDd}}}}{{}{{j{AKfDd}}}}{c{{j{e}}}{}{}}00000000000000000000000000{Cn{{j{AHbDd}}}}{Cn{{j{AHdDd}}}}{Cn{{j{AHfDd}}}}{Cn{{j{AHhDd}}}}{Cn{{j{AHjDd}}}}{Cn{{j{AHlDd}}}}{Cn{{j{AHnDd}}}}{Cn{{j{AI`Dd}}}}{Cn{{j{AIbDd}}}}{Cn{{j{AIdDd}}}}{Cn{{j{AIfDd}}}}{Cn{{j{AIhDd}}}}{Cn{{j{AIjDd}}}}{Cn{{j{AIlDd}}}}{Cn{{j{AInDd}}}}{Cn{{j{AJ`Dd}}}}{Cn{{j{AJbDd}}}}{Cn{{j{AJdDd}}}}{Cn{{j{AJfDd}}}}{Cn{{j{AJhDd}}}}{Cn{{j{AJjDd}}}}{Cn{{j{AJlDd}}}}{Cn{{j{AJnDd}}}}{Cn{{j{AK`Dd}}}}{Cn{{j{AKbDd}}}}{Cn{{j{AKdDd}}}}{Cn{{j{AKfDd}}}}{c{{j{e}}}{}{}}00000000000000000000000000`{cl{}}00000000000000000000000000{ce{}{}}00000000000000000000000000````````````````````{cIj{}}`1111{bc{}}000{bh}0{{AGbCd}Cf}0{cc{}}0{AKhAGb}{{{Al{Aj}}AfA`}AKj}{{AKj{Bf{Bd}}}{{Dn{{D`{{Bj{Bd}}}}}}}}0{AKjAf}{{}b}0::{AKj{{AKn{AKl}}}}0`{{AfBb}AKj}{{AKj{Bf{AL`}}H`}{{Dn{h}}}}0``{AGb{{D`{AGh}}}}`{cDb{}}{c{{j{e}}}{}{}}000{cl{}}0{ce{}{}}0``0000{bc{}}000{bh}0{{{ALb{c}}}{{j{AjAGb}}}ALd}{{{ALb{c}}}{{j{NfAGb}}}ALd}{cc{}}021==55{c{{ALb{c}}}ALd}{{cNf}{{j{hAGb}}}ALf}099998877``7777`{ALhALh}{{ce}h{}{}}{{}ALh}999988{{{ALj{c}}Fn}{{j{{D`{Ad}}AGb}}}ALd}{{ALhALh}Cb}{{ce}Cb{}{}}0{{ALhCd}Cf}99``{{}b}0??{ALhCn}``{{{ALj{c}}Fn}{{j{{D`{Ab}}AGb}}}ALd}{c{{ALj{c}}}ALd}````{{{ALj{c}}Fn}{{j{{D`{ALh}}AGb}}}ALd}{{{ALj{c}}}{{j{{Bj{ALh}}AGb}}}ALd}{ce{}{}}{{}{{j{ALhDd}}}}{c{{j{e}}}{}{}}0{Cn{{j{ALhDd}}}}11{cl{}}044`44{bc{}}0{bh}{cc{}}=7{c{{ALl{c}}}ALd}{{{ALl{c}}F`}{{j{{D`{ABd}}AGb}}}ALd}{{{ALl{c}}}{{j{{Bj{ABd}}AGb}}}ALd}{{{ALl{c}}Fn}{{j{{D`{Ah}}AGb}}}ALd}997;`;;6654{{}b}<{{{ALn{c}}Fn}{{j{AFlAG`}}}ALd}{c{{ALn{c}}}ALd}{{{ALn{c}}Fn}{{j{{AM`{AfAFn}}AGb}}}ALd}{{{ALn{c}}FnAf}{{j{{D`{AFn}}AGb}}}ALd}{{{ALn{c}}Fn}{{j{AhAG`}}}ALd}??={ce{}{}}`{{{AMb{c}}Mn}{{j{AHlAGb}}}ALd}{{{AMb{c}}}{{j{{Bj{Mn}}AGb}}}ALd}22{{{AMb{c}}}{{j{GnAGb}}}ALd}{{{AMb{c}}MnMnAj}{{j{AJ`AGb}}}ALd}{{{AMb{c}}}{{j{{AM`{Mn{AM`{Mn{Bj{AJ`}}}}}}AGb}}}ALd}{{{AMb{c}}MnMn}{{j{AInAGb}}}ALd}{{{AMb{c}}}{{j{{AM`{Mn{AM`{MnAIn}}}}AGb}}}ALd}{bc{}}0{bh}{cc{}}7{{}b};8{c{{AMb{c}}}ALd}9{c{{j{e}}}{}{}}0{cl{}}>```>>{ChAMd}{AMfAMf}{{ce}h{}{}}{Mh{{Dn{AMf}}}}::9{AMf{{Dn{Mh}}}}{{AMfCd}Cf}:{AMfA`}:{ce{}{}}``{AMhA`}1{AMj{{Dn{AMf}}}};;:``2```22{AMl{{D`{AMn}}}}{{}AMl}{bc{}}0{bh}{{AMlCd}Cf}{cc{}}`{{}b}9{AMlCn}``{{}{{j{AMlDd}}}}{c{{j{e}}}{}{}}{Cn{{j{AMlDd}}}}1{cl{}}{{AMlAMnAMn}{{Dn{h}}}}?``????::::99{{AN`AfANb}{{ANf{{AKn{ANd}}}}}}88{ANh{{`{ANj}}}}88{ce{}{}}0{AN`{{ANf{{AKn{ANd}}}}}}0{{{Al{Aj}}}AN`}{{{Al{Aj}}ANlANnFnDb}ANh}{AN`h}{ANhh}{{AN`Af}{{ANf{{AKn{ANd}}}}}}0<<<<::{{AN`Mh}{{ANf{{AKn{ANd}}}}}}{{AN`MhAEfAj}{{ANf{{AKn{ANd}}}}}}088```````````88888888{{}AO`}{{}AOb}{{}AOd}{bc{}}0000000{bh}000`{{AOfCd}Cf}{{AO`Cd}Cf}{{AObCd}Cf}{{AOdCd}Cf}{cc{}}000``{{}b}000{ce{}{}}000{AOfCn}{AO`Cn}{AObCn}{AOdCn}``````{{}{{j{AO`Dd}}}}{{}{{j{AObDd}}}}{{}{{j{AOdDd}}}}{c{{j{e}}}{}{}}000{Cn{{j{AOfDd}}}}{Cn{{j{AO`Dd}}}}{Cn{{j{AObDd}}}}{Cn{{j{AOdDd}}}}4444{cl{}}000{{AOhDb}Cb}>>>>```````````{cIj{}}????`{ANnANn}{{ce}h{}{}}{{}ANn}{bc{}}000{bh}0{{ANnANn}Cb}{{ce}Cb{}{}}0{{ANjAfANb}{{ANf{{AKn{ANd}}}}}}{{AOjCd}Cf}0{{ANnCd}Cf}{cc{}}0``{{}b}0{ce{}{}}0{ANnCn}{ANj{{ANf{{AKn{ANd}}}}}}0`{AOj{{D`{AGh}}}}{{ANjAf}{{ANf{{AKn{ANd}}}}}}04{cDb{}}{{}{{j{ANnDd}}}}{c{{j{e}}}{}{}}0{Cn{{j{ANnDd}}}}11{cl{}}0{{ANjMh}{{ANf{{AKn{ANd}}}}}}{{ANjMhAEfAj}{{ANf{{AKn{ANd}}}}}}0{{AKjADhFnLbF`}{{j{hAOj}}}}<<````<<<<<<`{{}AOl}{bc{}}00000{bh}00{cc{}}00`{{AOnB`}AOl}{{}b}00{ce{}{}}00{{ANl{AKn{AOn}}{Al{ADh}}}{{Al{Bb}}}}`{{BbAfBd}{{Dn{h}}}}``{{Bb{Al{Aj}}{AKn{ANj}}}h}??????`===333`````````````````{cIj{}}4444999988{{BfCd}Cf}088{AKhBf}{DdBf}88{{BhChc}{{j{eBf}}}Bj{MbBl}}88{{Bn{Al{Aj}}Ch{Bj{F`}}}Bh}1{Bf{{D`{AGh}}}}{cDb{}}{c{{j{e}}}{}{}}000{cl{}}0{{Bh{D`{{BA`{Hj}}}}}h}{{Bh{Bj{F`}}}h}{{BhHn}h}{{Bh{D`{Fn}}}h}{ce{}{}}0`00`{bc{}}0{bh}{cc{}}`{{}b}4`{{{Al{ADh}}Cb{D`{{Al{BAb}}}}{Al{ANj}}BAd}BAf}``;;:`5```````{cIj{}}666666{{BAh{BAl{BAj}}c}{{j{hBAn}}}BB`}666666555{{BAnCd}Cf}055{AKhBAn}{DdBAn}7{BAj{{D`{{Al{BAb}}}}}}777;;;{{{Al{ADh}}}BAh}{{BAj{Bj{Bd}}c}{{j{{D`{BBb}}BAn}}}BB`}{{BAh{Bj{Bd}}c}{{j{{Eb{{BAl{BAj}}{D`{BBb}}}}BAn}}}BB`}{BAhh}{BAn{{D`{AGh}}}}{cDb{}}{c{{j{e}}}{}{}}00000{cl{}}00{ce{}{}}00{{BAjBBbc}{{j{hBAn}}}BB`}````````{{BBdBBf}h}222222{BBhBBh}{{ce}h{}{}}{{}BBd}{bc{}}00000{{BBjBAfBBl}{{Dn{BBn}}}}{{BBdBAfBBlBC`}BBn}{bh}00{{BBhCd}Cf}{cc{}}00{BBjBBh}{{BCbBAfc}{{Dn{e}}}{}{}}{{BBdHn}h}{{BBdALh}h}{{BCdBAf}h}{{}b}00{ce{}{}}00``{{BBhg}BBfMbBj{{BCb{ce}}BlBCf}}{{BBdc}h{BCdBlBCf}}{{BBd{D`{{AKn{BCh}}}}}h}{{BBd{D`{{AKn{BCj}}}}}h}4{c{{j{e}}}{}{}}00000{cl{}}00666``````{BClFb}77777777{BnBCn}0{BClBCl}{BnBn}{{ce}h{}{}}0{BCnh}{{Bn{D`{{Al{ANj}}}}}Bn}{{}Bn}{bc{}}0000000{bh}000{{BClCd}Cf}{cc{}}000{BCn{{Dn{F`}}}}{Bn{{D`{{Al{Hn}}}}}}{Bn{{D`{{BA`{Hj}}}}}}{Bn{{D`{Fn}}}}{{}b}000{ce{}{}}000{BClCn}{BCnCb}0{{BCn{Bj{F`}}}Cb}{{Bn{Al{ADh}}}Bn}{{BCn{Bj{Bd}}c}{{Dn{{D`{BBb}}}}}BB`}{{Bn{D`{{Al{Hn}}}}}Bn}`{BClF`}{{Bn{D`{{BA`{Hj}}}}}Bn}{{Bn{D`{Fn}}}Bn}{BCn{{D`{{Al{BAb}}}}}}{{BCnF`}{{Dn{h}}}};;{c{{j{e}}}{}{}}000{Cn{{j{BClDd}}}}1111{cl{}}000`{{BCl{Bf{Bd}}{D`{{BA`{Hj}}}}Hn}{{Dn{I`}}}}{{BClHn}{{Dn{I`}}}}{ce{}{}}000{{BCnBBbc}{{Dn{h}}}BB`}```````````````````````````{BD`{{Bf{Bd}}}}{cb{}}`333333333333333333{c{{j{{Bj{Bh}}}}}{}}{BD`BD`}{BC`BC`}{BDbBDb}{BBlBBl}{BDdBDd}{BDfBDf}{BBnBBn}{BBbBBb}{BDhBDh}{{ce}h{}{}}00000000{{BD`BD`}Bl}{{}BD`}{{}BC`}{{}BDb}{{}BDd}{bc{}}00000000000000000{bh}00000000{ce{}{{C`{Bn}}}}0{{BD`BD`}Cb}{{BC`BC`}Cb}{{BDhBDh}Cb}{{ce}Cb{}{}}00000{{BD`Cd}Cf}00{{BC`Cd}Cf}{{BDbCd}Cf}{{BBlCd}Cf}{{BDdCd}Cf}{{BDfCd}Cf}{{BBnCd}Cf}{{BBbCd}Cf}{{BDhCd}Cf}{ChBD`}{{{Bf{Bd}}}BD`}{{{Bj{Bd}}}BD`}{cc{}}00000000{Ch{{j{BD`Cj}}}}{{BD`c}hCl}{{BC`c}hCl}{{}b}00000000{ce{}{}}00000000{BD`Cn}{BC`Cn}{BDbCn}{BBlCn}{BDdCn}{BDfCn}{BBnCn}{BBbCn}{BDhCn}:``{{BD`BD`}{{D`{Bl}}}}`{{}BD`}`;;;;;;;;;{cDb{}}{{}{{j{BD`Dd}}}}{{}{{j{BC`Dd}}}}{{}{{j{BDbDd}}}}{{}{{j{BDdDd}}}}{c{{j{e}}}{}{}}00000000{Cn{{j{BD`Dd}}}}{Cn{{j{BC`Dd}}}}{Cn{{j{BDbDd}}}}{Cn{{j{BBlDd}}}}{Cn{{j{BDdDd}}}}{Cn{{j{BDfDd}}}}{Cn{{j{BBnDd}}}}{Cn{{j{BBbDd}}}}{Cn{{j{BDhDd}}}}999999999{cl{}}00000000`{ce{}{}}00000000{{ce}{{j{h}}}{}Df}{BD`h}{c{}ANd}{{}BDj}````{cIj{}}55{bc{}}0{bh}{{BDlCd}Cf}0{cc{}}{BDnBDl}{BE`{{ANf{{AKn{ANd}}}}}}{{}b}<{BDl{{D`{AGh}}}}{cDb{}}{c{{j{e}}}{}{}}0{cl{}}{ce{}{}}`00{{ADh{Dh{Bd}}{Bj{Bd}}{Bj{Bd}}Dj}{{Dn{{Bj{Bd}}}}}}{{}ADh}==<:720{ADhF`}0{ADhGb}{ADh{{D`{{Al{Hl}}}}}}{ADh{{D`{{Al{Hn}}}}}}{{ADhF`Hl}Cb}{{ADh{Bf{Bd}}{Bf{Bd}}}{{Dn{Fb}}}}::9{{I`F`}{{Dn{h}}}}9{{{AKn{AOn}}Md}h}```````````{cIj{}};;;;{bc{}}000{bh}0{{BEbCd}Cf}0{cc{}}0{{}b}0{ce{}{}}0{{BEdFn}{{Dn{Fn}}}}{{BEdFn}{{Dn{Oj}}}}{{BEdFn}{{Dn{ALh}}}}{{{Al{ANj}}}BEd}{{BEdFn{D`{Lb}}}{{Dn{Hn}}}}{cDb{}}{c{{j{e}}}{}{}}000{cl{}}0{{BEdOjFn}{{Dn{Oj}}}}{{BEdALhFn}{{Dn{ALh}}}}{{BEdHnFn{D`{Lb}}}{{Dn{Hn}}}};;``````````````{cIj{}}<<<<<<<<{{AjBd}{{j{BdBDn}}}}0{BEfBEf}{{ce}h{}{}}```{bc{}}0000000{bh}000{Aj{{Dn{h}}}}{{BEhCd}Cf}0{{BEfCd}Cf}{cc{}}000{{BEj{Bj{Bd}}}{{j{{Bj{Bd}}BDn}}}}{AjMd}{AjBEf}{Aj{{D`{{Al{ADh}}}}}}{AjFn}{Aj{{ANf{{AKn{ANd}}}}}}{{}b}000{{BEj{Bj{Bd}}{Bj{Bd}}}{{j{hBDn}}}}{ce{}{}}000`{{{Al{Aj}}}BEj}`{{AjAfBd}{{Dn{h}}}}2{cDb{}}{c{{j{e}}}{}{}}0000000{cl{}}0005555``{{BAd{Bj{Bd}}}{{j{{Bj{Bd}}BDn}}}}{{BAd{Bj{Bd}}{Bj{Bd}}}{{j{hBDn}}}}```````````````````````{AL`{{Bf{Bd}}}}{cb{}}9999999999999999`{{BEl{Bf{Bd}}}Cb}{{ALf{Bf{Bd}}}Cb}{{{BEn{c}}{Bf{Bd}}}CbALf}{{Bb{Bf{Bd}}}Cb}0{c{{j{{Bj{Bh}}}}}{}}{BF`BF`}{A`A`}{BFbBFb}{BFdBFd}{AL`AL`}{{ce}h{}{}}0000{{AL`AL`}Bl}{{BElFnAf}{{Dn{{Eb{BFfAh}}}}}}{{ALfFnAf}{{Dn{Ah}}}}{{{BEn{c}}}{{Dn{BFf}}}ALf}{{{BEn{c}}FnAf}{{Dn{{Eb{BFfAh}}}}}ALf}{{BbFnAf}{{Dn{Ah}}}}01{{}BF`}{{}A`}{{}BFh}{{}BFd}{{}AL`}{bc{}}0000000{AL`c{}}111111101{bh}0000000{ce{}{{C`{Bn}}}}0{{BF`BF`}Cb}{{A`A`}Cb}{{BFhBFh}Cb}{{BFbBFb}Cb}{{BFdBFd}Cb}{{AL`AL`}Cb}{{ce}Cb{}{}}00000000000{AKl{{D`{AKh}}}}{{BbCd}{{Dn{hBFj}}}}{{BF`Cd}Cf}{{A`Cd}Cf}{{BFhCd}Cf}{{BFbCd}Cf}{{BFdCd}Cf}{{AL`Cd}Cf}{cc{}}000000{{{Bj{Bd}}}AL`}1{{BEl{Bf{Bd}}}{{D`{{Bj{Bd}}}}}}{{ALf{Bf{Bd}}}{{Dn{{D`{{Bj{Bd}}}}}}}}{{ALd{Bf{Bd}}}{{Dn{{D`{{Bj{Bd}}}}}}}}{{{BEn{c}}{Bf{Bd}}}{{Dn{{D`{{Bj{Bd}}}}}}}ALf}{{{BEn{c}}{Bf{Bd}}}{{D`{{Bj{Bd}}}}}ALf}{{Bb{Bf{Bd}}}{{Dn{{D`{{Bj{Bd}}}}}}}}0{{c{Bf{Bd}}}{{j{{D`{{Bj{Bd}}}}AKh}}}{}}{AKl{{D`{BFl}}}}{AKl{{D`{{Bj{Bd}}}}}}{{BF`c}hCl}{{BFdc}hCl}`{{}b}0000000{{BEl{Bf{Bd}}{Bf{Bd}}}{{D`{{Bj{Bd}}}}}}{{ALf{Bf{Bd}}{Bf{Bd}}}{{Dn{{D`{{Bj{Bd}}}}}}}}{{{BEn{c}}{Bf{Bd}}{Bf{Bd}}}{{D`{{Bj{Bd}}}}}ALf}{{{BEn{c}}{Bf{Bd}}{Bf{Bd}}}{{Dn{{D`{{Bj{Bd}}}}}}}ALf}{{Bb{Bf{Bd}}{Bf{Bd}}}{{Dn{{D`{{Bj{Bd}}}}}}}}0{ce{}{}}0000000{BF`Cn}{A`Cn}{BFdCn}{AL`Cn}{AKlCb}{BEl{{AKn{AKl}}}}{ALf{{AKn{AKl}}}}{ALd{{AKn{AKl}}}}{{{BEn{c}}}{{AKn{AKl}}}ALf}{{{BEn{c}}}{{`{c}}}ALf}`{c{{AKn{AKl}}}{}}{Bb{{AKn{AKl}}}}`{BFdBFb}`{BFl{{Dn{{Bj{Bd}}}}}}{BFh{{Dn{{Bj{Bd}}}}}}`{c{{BEn{c}}}ALf}`{{{Bf{Bd}}{Bf{Bd}}}BFd}{AKlh}{{AL`AL`}{{D`{Bl}}}}{{BEl{Bf{AL`}}H`}h}{{ALf{Bf{AL`}}H`}{{Dn{h}}}}{{ALd{Bf{AL`}}H`}{{Dn{h}}}}{{{BEn{c}}{Bf{AL`}}H`}hALf}{{c{Bf{AL`}}H`}{{j{hAKh}}}{}}{{Bb{Bf{AL`}}H`}{{Dn{h}}}}0{{BEl{Bf{Bd}}}{{D`{{Bj{Bd}}}}}}{{ALf{Bf{Bd}}}{{Dn{{D`{{Bj{Bd}}}}}}}}{{{BEn{c}}{Bf{Bd}}}{{Dn{{D`{{Bj{Bd}}}}}}}ALf}{{{BEn{c}}{Bf{Bd}}}{{D`{{Bj{Bd}}}}}ALf}{{Bb{Bf{Bd}}}{{Dn{{D`{{Bj{Bd}}}}}}}}0<`{{AKl{Bf{Bd}}}h}{{AKlb}h}`{ce{}{}}0000{{}{{j{A`Dd}}}}{{}{{j{BFdDd}}}}{{}{{j{AL`Dd}}}}{c{{j{e}}}{}{}}0000000{Cn{{j{BF`Dd}}}}{Cn{{j{A`Dd}}}}{Cn{{j{BFdDd}}}}{Cn{{j{AL`Dd}}}}44444444{cl{}}0000000{{BFl{Bf{Bd}}}{{Dn{b}}}}{{BFh{Bf{Bd}}}{{Dn{b}}}}``;;;;;;;;{{ce}{{j{h}}}{}Df}`{BG`{{Dn{{Bj{Bd}}}}}}{{BG`{Bf{Bd}}}{{Dn{b}}}}``````````````{BGb{{BGf{BGd}}}}0{BFnAGj}{BGhAGj}{BGjAGj}{BGlAGj}{cIj{}}{BGd{{Bf{Bd}}}}{cb{}}{ce{}{}}00000000000000000000000{c{{j{{Bj{Bh}}}}}{}}{BGdBGd}{BGnBGn}{BH`BH`}{BHbBHb}{BHdBHd}{BHfBHf}{BHhBHh}{{ce}h{}{}}000000{{}BGd}{{}BGn}{{}BH`}{{}BHb}{{}BHd}{{}BHf}{{}BHh}{bc{}}0000{BGdc{}}11111111111101111111{bh}00000000000{ce{}{{C`{Bn}}}}0`{{BGdBGd}Cb}{{BGnBGn}Cb}{{BH`BH`}Cb}{{ce}Cb{}{}}00000{{BHjCd}Cf}0{{BGdCd}Cf}{{BGnCd}Cf}{{BH`Cd}Cf}{{BHbCd}Cf}{{BHdCd}Cf}{{BHfCd}Cf}{{BHhCd}Cf}{cc{}}0000{{{Bj{Bd}}}BGd}1111111`{{}b}00000000000{ce{}{}}00000000000{BGdCn}{BGnCn}{BH`Cn}{BHbCn}{BHdCn}{BHfCn}{BHhCn}```{{{B`{{An{`}}}}{B`{{An{`}}}}{Bj{{B`{{An{`}}}}}}}{{Dn{h}}}}{{{Al{Aj}}BHl}BGh}{{{AKn{BFn}}}BGl}`````{b{{Eb{b{D`{b}}}}}}{{BFnBHb}{{Dn{BHh}}}}{{BGhBHb}{{Dn{BHh}}}}{{BGjBHb}{{Dn{BHh}}}}{{BGlBHb}{{Dn{BHh}}}}`{{BFnBHd}{{Dn{BHh}}}}{{BGhBHd}{{Dn{BHh}}}}{{BGjBHd}{{Dn{BHh}}}}{{BGlBHd}{{Dn{BHh}}}}`{{BFnBHf}{{Dn{BHh}}}}{{BGhBHf}{{Dn{BHh}}}}{{BGjBHf}{{Dn{BHh}}}}{{BGlBHf}{{Dn{BHh}}}}`{ce{}{}}000000{cDb{}}```{{}{{j{BGdDd}}}}{{}{{j{BGnDd}}}}{{}{{j{BH`Dd}}}}{{}{{j{BHbDd}}}}{{}{{j{BHdDd}}}}{{}{{j{BHfDd}}}}{{}{{j{BHhDd}}}}{c{{j{e}}}{}{}}00000000000{Cn{{j{BGdDd}}}}{Cn{{j{BGnDd}}}}{Cn{{j{BH`Dd}}}}{Cn{{j{BHbDd}}}}{Cn{{j{BHdDd}}}}{Cn{{j{BHfDd}}}}{Cn{{j{BHhDd}}}}777777777777{cl{}}00000000000`{{BHnAhBGn}{{Dn{{B`{{An{`}}}}}}}}{ce{}{}}00000000000{{ce}{{j{h}}}{}Df}````````11```{bc{}}0{bh}`{cc{}}`{{}b}5`{{{Al{Aj}}MhAKjBElAEfAjAFlHbCb}BI`}```{c{{j{e}}}{}{}}097`````777777{{BIbBI`BId}{{j{{Bj{BIf}}BDn}}}}{{BIhBI`BId}{{j{{Bj{BIf}}BDn}}}}{{}BIh}888888777{{BIbBI`BId{Bf{AFf}}}{{j{BIjBDn}}}}{{BIhBI`BId{Bf{AFf}}}{{j{BIjBDn}}}}{{BIbAh}h}999`888===``{{BIbBI`Ch{Bj{Bd}}}{{j{{Bj{Bd}}BDn}}}}`32{{BIb{Al{BIl}}}h}`888888`{cl{}}00{ce{}{}}00```{BIn{{Bf{Bd}}}}{cb{}}2222{c{{j{{Bj{Bh}}}}}{}}{BInBIn}{BJ`BJ`}{{ce}h{}{}}0{{}BIn}{{}BJ`}{bc{}}000{bh}0{ce{}{{C`{Bn}}}}0{{BInBIn}Cb}{{BJ`BJ`}Cb}{{ce}Cb{}{}}000{{BInCd}Cf}{{BJ`Cd}Cf}{cc{}}{{{Bj{Bd}}}BIn}1`{{}b}0{ce{}{}}0{BInCn}{BJ`Cn}`22{{}{{j{BInDd}}}}{{}{{j{BJ`Dd}}}}{c{{j{e}}}{}{}}0{Cn{{j{BInDd}}}}{Cn{{j{BJ`Dd}}}}22{cl{}}088{{ce}{{j{h}}}{}Df}```99{BJbBJb}{{ce}h{}{}}{{}BJb}{bc{}}0{bh}{{BJbCd}Cf}{cc{}}{{}b}{ce{}{}}`{{{Bj{Bd}}{Bj{Bd}}}BJb}1>>`;`1``{{BJdBJf}{{Dn{h}}}}{{BJd{Bj{Bd}}Hb}{{Dn{h}}}}{{BJdAh{Bj{Bd}}BJf}{{Dn{h}}}}44{BJd{{Dn{{Eb{BFfAh}}}}}}::9765{{{AKn{BFn}}A`}BJd}{c{{j{e}}}{}{}}0{cl{}}8`88{BIdBId}{{ce}h{}{}}{{}BId}{BIdc{}}{bc{}}01{bh}{{BIdBId}Cb}{{ce}Cb{}{}}0{{BIdCd}Cf}{cc{}}{{{Bj{{Bj{Bd}}}}}BId}{{{BJh{{Bj{Bd}}}}}BId}{{}b}{ce{}{}}{BIdCn}41{{}{{j{BIdDd}}}}{c{{j{e}}}{}{}}{Cn{{j{BIdDd}}}}1{cl{}}5````````````````````````````````````````````````````````````````````````````````````````{cIj{}}`66666666666666666666666666666666666666{BJjBJj}{BHlBHl}{BDnBDn}{BJlBJl}{BJnBJn}{BK`BK`}{BKbBKb}{BKdBKd}{BIfBIf}{BKfBKf}{ANbANb}{BKhBKh}{BKjBKj}{BKlBKl}{{ce}h{}{}}0000000000000````{{}BJj}{{}Bd}{{}BDn}{{}BJl}{{}BJn}{{}BK`}{{}BKb}{{}BKd}{{}BIf}{{}BKf}{{}BKj}{{}BKl}{{}BKn}{bc{}}0000000000000000000000000000000000000{bh}000000000000000000`{{BHlBHl}Cb}{{BKdBKd}Cb}{{ce}Cb{}{}}000```{{BJjCd}Cf}{{BL`Cd}Cf}{{BLbCd}Cf}{{BLdCd}Cf}{{BHlCd}Cf}{{BdCd}Cf}{{BDnCd}Cf}0{{BJlCd}Cf}{{BJnCd}Cf}{{BK`Cd}Cf}{{BKbCd}Cf}{{BKdCd}Cf}{{BIfCd}Cf}{{BKfCd}Cf}{{ANbCd}Cf}{{BKhCd}Cf}{{BKjCd}Cf}{{BKlCd}Cf}{{BKnCd}Cf}{cc{}}00000{BEhBDn}{BAnBDn}{AOjBDn}{AGbBDn}{BLfBDn}{AKhBDn}6666666666666{{BHlc}hCl}```{{}b}000000000000000000`{ce{}{}}000000000000000000{BJjCn}{BL`Cn}{BLbCn}{BLdCn}{BHlCn}{BdCn}{BDnCn}{BJlCn}{BJnCn}{BK`Cn}{BKbCn}{BKdCn}{BIfCn}{BKfCn}{ANbCn}{BKhCn}{BKjCn}{BKlCn}{BKnCn}```````````{{ChHbCh}BDn}````````````{ce{}{}}0000000000000{cDb{}}{{}{{j{BJjDd}}}}{{}{{j{BDnDd}}}}{{}{{j{BJlDd}}}}{{}{{j{BJnDd}}}}{{}{{j{BK`Dd}}}}{{}{{j{BKbDd}}}}{{}{{j{BKdDd}}}}{{}{{j{BIfDd}}}}{{}{{j{BKfDd}}}}{{}{{j{BKjDd}}}}{{}{{j{BKnDd}}}}{c{{j{e}}}{}{}}000000000000000000{Cn{{j{BJjDd}}}}{Cn{{j{BL`Dd}}}}{Cn{{j{BLbDd}}}}{Cn{{j{BLdDd}}}}{Cn{{j{BHlDd}}}}{Cn{{j{BdDd}}}}{Cn{{j{BDnDd}}}}{Cn{{j{BJlDd}}}}{Cn{{j{BJnDd}}}}{Cn{{j{BK`Dd}}}}{Cn{{j{BKbDd}}}}{Cn{{j{BKdDd}}}}{Cn{{j{BIfDd}}}}{Cn{{j{BKfDd}}}}{Cn{{j{ANbDd}}}}{Cn{{j{BKhDd}}}}{Cn{{j{BKjDd}}}}{Cn{{j{BKlDd}}}}{Cn{{j{BKnDd}}}}{c{{j{e}}}{}{}}000000000000000000{cl{}}000000000000000000{ce{}{}}000000000000000000````````````````````````````````````````````````````````````````````","c":[],"p":[[1,"usize"],[5,"BUILD_INFO",0],[5,"BuildInfo",0],[1,"unit"],[6,"Result",6781],[5,"TypeId",6782],[5,"CacheSet",58],[5,"Root",5466],[5,"Cache",58],[5,"MutexGuard",6783],[1,"u64"],[5,"Hash",109],[5,"Protocol",5374],[5,"Arc",6784],[5,"RefCell",6785],[5,"Rc",6786],[5,"Tree",5466],[1,"u8"],[1,"slice"],[5,"u5",6787],[5,"Vec",6788],[6,"Ordering",6789],[1,"char"],[10,"FromIterator",6790],[1,"bool"],[5,"Formatter",6791],[8,"Result",6791],[1,"str"],[6,"FromHexError",6792],[10,"Hasher",6793],[6,"Value",6794],[6,"Option",6795],[5,"String",6796],[6,"DecodeError",6797],[10,"WriteBase32",6787],[1,"array"],[5,"PublicKey",6798],[5,"StaticSecret",6798],[8,"Result",6799],[10,"Opener",161],[1,"tuple"],[5,"DeoxysII",161],[6,"DecryptionError",6800],[10,"AsMut",6801],[10,"AsRef",6801],[6,"EncryptionError",6800],[5,"Nonce",188],[5,"PublicKey",211],[5,"Signature",211],[5,"Signed",211],[5,"MultiSigned",211],[5,"SignatureBundle",211],[5,"PrivateKey",211],[10,"Signer",211],[5,"Namespace",487],[5,"PrivateKey",405],[5,"PublicKey",405],[10,"KeyFormat",473],[10,"KeyFormatAtom",473],[5,"Logger",6802],[6,"Level",6803],[1,"never"],[5,"Quantity",531],[1,"u16"],[1,"u32"],[1,"u128"],[5,"MrEnclave",582],[5,"MrSigner",582],[5,"EnclaveIdentity",582],[6,"Quote",582],[5,"QuotePolicy",582],[5,"VerifiedQuote",582],[1,"i64"],[5,"Keypolicy",6804],[5,"QuotePolicy",774],[5,"AVR",774],[10,"Fail",6805],[5,"QuotePolicy",832],[5,"QuoteBundle",832],[5,"TCBBundle",832],[5,"SignedTCBInfo",832],[5,"TCBInfo",832],[5,"TDXModule",832],[5,"TCBLevel",832],[5,"TCBVersions",832],[5,"TCBComponent",832],[6,"TCBStatus",832],[5,"SignedQEIdentity",832],[5,"QEIdentity",832],[5,"EnclaveTCBLevel",832],[5,"EnclaveTCBVersions",832],[10,"Deserializer",6806],[6,"Error",832],[5,"Utc",6807],[5,"DateTime",6808],[5,"SystemTime",6809],[5,"Version",1232],[5,"ProtocolVersions",1232],[5,"Versioned",1292],[10,"Clone",6810],[10,"PartialEq",6789],[10,"Debug",6791],[10,"Hash",6793],[10,"EncodeAsMap",6811],[10,"Decode",6812],[5,"Config",1319],[5,"Storage",1319],[5,"LightBlock",1363],[6,"Event",1363],[5,"BlockMetadata",1363],[5,"Address",1447],[5,"COMMON_POOL_ADDRESS",1447],[5,"FEE_ACC_ADDRESS",1447],[5,"GOVERNANCE_DEPOSITS_ADDRESS",1447],[5,"EpochTimeState",1533],[6,"Vote",1562],[5,"ProposalVote",1562],[5,"UpgradeProposal",1562],[5,"CancelUpgradeProposal",1562],[5,"ChangeParametersProposal",1562],[5,"ProposalContent",1562],[5,"ConsensusParameterChanges",1562],[5,"PolicySGX",1759],[5,"EnclavePolicySGX",1759],[5,"SignedPolicySGX",1759],[5,"EncryptedSecret",1759],[5,"EncryptedMasterSecret",1759],[5,"EncryptedEphemeralSecret",1759],[5,"SignedEncryptedMasterSecret",1759],[5,"SignedEncryptedEphemeralSecret",1759],[6,"Error",1759],[5,"Runtime",1995],[8,"EpochTime",1533],[5,"VersionInfo",1995],[5,"TCPAddress",1995],[5,"TLSAddress",1995],[5,"TLSInfo",1995],[5,"P2PInfo",1995],[5,"ConsensusAddress",1995],[5,"ConsensusInfo",1995],[5,"VRFInfo",1995],[5,"CapabilityTEE",1995],[5,"Capabilities",1995],[5,"NodeRuntime",1995],[5,"RolesMask",1995],[5,"Node",1995],[6,"RuntimeKind",1995],[5,"ExecutorParameters",1995],[5,"TxnSchedulerParameters",1995],[5,"StorageParameters",1995],[5,"SchedulingConstraints",1995],[5,"ValidatorSetConstraint",1995],[5,"MaxNodesConstraint",1995],[5,"MinPoolSizeConstraint",1995],[5,"RuntimeStakingParameters",1995],[5,"EntityWhitelistRuntimeAdmissionPolicy",1995],[5,"EntityWhitelistConfig",1995],[6,"RuntimeAdmissionPolicy",1995],[6,"RuntimeGovernanceModel",1995],[6,"SGXConstraints",1995],[6,"SGXAttestation",1995],[6,"TEEHardware",1995],[5,"RuntimeGenesis",1995],[5,"Identity",5302],[5,"Pool",2886],[5,"Block",2886],[5,"ExecutorCommitment",2886],[10,"NodeLookup",2886],[10,"MessageValidator",2886],[6,"HeaderType",2886],[5,"Header",2886],[5,"ComputeResultsHeader",2886],[6,"ExecutorCommitmentFailure",2886],[5,"ExecutorCommitmentHeader",2886],[6,"Message",2886],[6,"StakingMessage",2886],[6,"RegistryMessage",2886],[6,"GovernanceMessage",2886],[5,"IncomingMessage",2886],[5,"AnnotatedBlock",2886],[5,"MessageEvent",2886],[5,"RoundResults",2886],[5,"RoundRoots",2886],[6,"Error",2886],[6,"StateError",4276],[10,"OpenCommitment",2886],[5,"Committee",3414],[10,"Error",6813],[10,"Any",6782],[6,"Role",3414],[6,"CommitteeKind",3414],[5,"CommitteeNode",3414],[5,"Transfer",3505],[5,"Withdraw",3505],[5,"Escrow",3505],[5,"ReclaimEscrow",3505],[6,"ThresholdKind",3505],[5,"Account",3505],[5,"GeneralAccount",3505],[5,"EscrowAccount",3505],[5,"SharePool",3505],[5,"CommissionSchedule",3505],[5,"CommissionRateStep",3505],[5,"CommissionRateBoundStep",3505],[5,"StakeAccumulator",3505],[5,"StakeThreshold",3505],[5,"Delegation",3505],[5,"DebondingDelegation",3505],[6,"SlashReason",3505],[5,"Slash",3505],[5,"TransferResult",3505],[5,"AddEscrowResult",3505],[5,"ReclaimEscrowResult",3505],[5,"WithdrawResult",3505],[5,"Event",3505],[5,"TransferEvent",3505],[5,"BurnEvent",3505],[6,"EscrowEvent",3505],[5,"AllowanceChangeEvent",3505],[5,"Error",6799],[5,"ConsensusState",4276],[10,"Iterator",5466],[5,"Box",6814],[5,"Prefix",5466],[5,"ImmutableState",4323],[10,"ImmutableMKVS",5466],[10,"FallibleMKVS",5466],[5,"Status",4356],[5,"ImmutableState",4356],[5,"ImmutableState",4407],[5,"ImmutableState",4424],[5,"BTreeMap",6815],[5,"ImmutableState",4442],[5,"Id",6816],[5,"LightBlockMeta",4466],[5,"SignedHeader",6817],[5,"LightBlock",6818],[5,"Proof",4495],[8,"Hash",6819],[5,"NopVerifier",4520],[6,"EventKind",6221],[10,"Future",6820],[5,"Pin",6821],[5,"Verifier",4520],[10,"Verifier",4646],[5,"Handle",6822],[5,"TrustRoot",4646],[5,"Fee",4559],[5,"Proof",4559],[5,"SignedTransactionWithProof",4559],[5,"Transaction",4559],[8,"SignedTransaction",4559],[6,"Error",4646],[5,"PostInitState",4710],[10,"Initializer",4710],[5,"PreInitState",4710],[5,"Dispatcher",4710],[6,"Body",6221],[6,"RpcClientError",4768],[5,"RpcClient",4768],[10,"Encode",6811],[10,"Send",6823],[5,"Builder",4956],[5,"HashSet",6824],[5,"SessionInfo",4956],[10,"KeyValue",5461],[5,"Context",4816],[5,"Demux",4836],[5,"MultiplexedSession",4836],[5,"OwnedMutexGuard",6825],[6,"Error",4836],[10,"Write",6826],[6,"Message",5051],[5,"Dispatcher",4893],[5,"Method",4893],[5,"MethodDescriptor",4893],[10,"MethodHandlerDispatch",4893],[5,"Request",5051],[5,"Response",5051],[6,"Kind",5051],[10,"MethodHandler",4893],[10,"ContextInitializer",4893],[10,"Sync",6823],[8,"KeyManagerQuotePolicyHandler",4893],[8,"KeyManagerStatusHandler",4893],[6,"RAKBinding",4956],[5,"Session",4956],[5,"SessionID",5051],[5,"Frame",5051],[5,"Error",5051],[6,"Body",5051],[6,"PeerFeedback",5051],[5,"Runtime",6827],[6,"Error",5279],[5,"Error",6221],[10,"Host",5279],[6,"PolicyVerifierError",5327],[5,"PolicyVerifier",5327],[5,"HostInfo",5374],[6,"ProtocolError",5374],[5,"ProtocolUntrustedLocalStorage",5374],[10,"MKVS",5466],[5,"OverlayTree",5466],[6,"RootType",5466],[6,"LogEntryKind",5466],[5,"LogEntry",5466],[8,"WriteLog",5466],[6,"NodeBox",5466],[5,"Error",6791],[8,"Key",5466],[10,"ReadSync",5728],[10,"Marshal",5725],[5,"Unstructured",6828],[5,"RawProofEntry",5728],[8,"Result",6829],[5,"HostReadSyncer",5728],[5,"NoopReadSyncer",5728],[5,"StatsCollector",5728],[5,"Proof",5728],[5,"TreeID",5728],[5,"GetRequest",5728],[5,"GetPrefixesRequest",5728],[5,"IterateRequest",5728],[5,"ProofResponse",5728],[6,"SyncerError",5728],[6,"HostStorageEndpoint",6221],[5,"ProofVerifier",5728],[5,"Context",6011],[10,"Dispatcher",6034],[5,"TxnBatch",6192],[5,"CheckTxResult",6221],[5,"NoopDispatcher",6034],[5,"ExecuteBatchResult",6034],[5,"AtomicBool",6830],[5,"CoarsenedKey",6091],[5,"ReadWriteSet",6091],[5,"Tag",6150],[5,"Tree",6173],[8,"Tags",6150],[5,"VecDeque",6831],[5,"ComputedBatch",6221],[5,"RuntimeInfoRequest",6221],[5,"Features",6221],[5,"FeatureScheduleControl",6221],[5,"RuntimeInfoResponse",6221],[6,"ExecutionMode",6221],[5,"CheckTxMetadata",6221],[5,"HostFetchConsensusEventsRequest",6221],[5,"HostFetchConsensusEventsResponse",6221],[6,"MessageType",6221],[5,"Message",6221],[6,"StorageSyncRequest",6221],[5,"StorageSyncRequestWithEndpoint",6221],[6,"StorageSyncResponse",6221],[5,"JoinError",6832],[15,"V1",2878],[15,"V0",2881],[15,"V1",2881],[15,"DebondingStart",4259],[15,"Add",4259],[15,"Take",4259],[15,"Reclaim",4259],[5,"MutableState",4323],[15,"V0",5045],[15,"V1",5045],[5,"ExecuteTxResult",6034],[15,"RuntimeQueryRequest",6713],[15,"RuntimeCapabilityTEERakAvrRequest",6713],[15,"RuntimeExecuteTxBatchResponse",6713],[15,"HostFetchTxBatchResponse",6713],[15,"HostProveFreshnessRequest",6713],[15,"RuntimeCheckTxBatchRequest",6713],[15,"RuntimeExecuteTxBatchRequest",6713],[15,"HostFetchConsensusBlockResponse",6713],[15,"RuntimeQueryResponse",6713],[15,"HostRPCCallRequest",6713],[15,"RuntimeCapabilityTEERakQuoteResponse",6713],[15,"RuntimeConsensusSyncRequest",6713],[15,"HostFetchConsensusBlockRequest",6713],[15,"HostFetchBlockMetadataTxRequest",6713],[15,"HostFetchGenesisHeightResponse",6713],[15,"HostLocalStorageGetRequest",6713],[15,"HostLocalStorageSetRequest",6713],[15,"RuntimeRPCCallRequest",6713],[15,"HostFetchTxBatchRequest",6713],[15,"HostRPCCallResponse",6713],[15,"HostIdentityResponse",6713],[15,"RuntimeCapabilityTEERakReportResponse",6713],[15,"RuntimeKeyManagerQuotePolicyUpdateRequest",6713],[15,"HostFetchBlockMetadataTxResponse",6713],[15,"HostProveFreshnessResponse",6713],[15,"RuntimeCapabilityTEERakQuoteRequest",6713],[15,"RuntimeLocalRPCCallRequest",6713],[15,"RuntimeRPCCallResponse",6713],[15,"RuntimeLocalRPCCallResponse",6713],[15,"RuntimeCheckTxBatchResponse",6713],[15,"RuntimeKeyManagerStatusUpdateRequest",6713],[15,"RuntimeCapabilityTEERakInitRequest",6713],[15,"HostLocalStorageGetResponse",6713]],"b":[[132,"impl-Display-for-Hash"],[133,"impl-Debug-for-Hash"],[134,"impl-LowerHex-for-Hash"],[135,"impl-From%3C%26str%3E-for-Hash"],[136,"impl-From%3CVec%3Cu8%3E%3E-for-Hash"],[138,"impl-From%3C%26%5Bu8%5D%3E-for-Hash"],[292,"impl-LowerHex-for-PublicKey"],[293,"impl-Display-for-PublicKey"],[294,"impl-Debug-for-PublicKey"],[295,"impl-Display-for-Signature"],[296,"impl-Debug-for-Signature"],[297,"impl-LowerHex-for-Signature"],[302,"impl-From%3CVec%3Cu8%3E%3E-for-PublicKey"],[304,"impl-From%3C%26str%3E-for-PublicKey"],[305,"impl-From%3C%26%5Bu8%5D%3E-for-PublicKey"],[307,"impl-From%3CVec%3Cu8%3E%3E-for-Signature"],[308,"impl-From%3C%26%5Bu8%5D%3E-for-Signature"],[309,"impl-From%3C%26str%3E-for-Signature"],[439,"impl-From%3CStaticSecret%3E-for-PrivateKey"],[440,"impl-From%3C%5Bu8;+PRIVATE_KEY_LENGTH%5D%3E-for-PrivateKey"],[442,"impl-From%3CPublicKey%3E-for-PublicKey"],[443,"impl-From%3C%5Bu8;+PUBLIC_KEY_LENGTH%5D%3E-for-PublicKey"],[445,"impl-From%3C%26PrivateKey%3E-for-PublicKey"],[506,"impl-Display-for-Namespace"],[507,"impl-LowerHex-for-Namespace"],[508,"impl-Debug-for-Namespace"],[509,"impl-From%3C%26%5Bu8%5D%3E-for-Namespace"],[511,"impl-From%3CVec%3Cu8%3E%3E-for-Namespace"],[512,"impl-From%3C%26str%3E-for-Namespace"],[532,"impl-Add-for-Quantity"],[533,"impl-Add%3C%26Quantity%3E-for-Quantity"],[534,"impl-Add%3Cu64%3E-for-Quantity"],[535,"impl-AddAssign%3C%26Quantity%3E-for-Quantity"],[536,"impl-AddAssign-for-Quantity"],[537,"impl-AddAssign%3Cu64%3E-for-Quantity"],[552,"impl-Debug-for-Quantity"],[553,"impl-Display-for-Quantity"],[554,"impl-From%3Cu16%3E-for-Quantity"],[555,"impl-From%3Cu32%3E-for-Quantity"],[557,"impl-From%3Cu8%3E-for-Quantity"],[558,"impl-From%3Cu128%3E-for-Quantity"],[559,"impl-From%3Cu64%3E-for-Quantity"],[566,"impl-Mul%3Cu64%3E-for-Quantity"],[567,"impl-Mul-for-Quantity"],[568,"impl-Mul%3C%26Quantity%3E-for-Quantity"],[569,"impl-MulAssign-for-Quantity"],[570,"impl-MulAssign%3Cu64%3E-for-Quantity"],[571,"impl-MulAssign%3C%26Quantity%3E-for-Quantity"],[667,"impl-LowerHex-for-MrEnclave"],[668,"impl-Debug-for-MrEnclave"],[669,"impl-Display-for-MrEnclave"],[670,"impl-Debug-for-MrSigner"],[671,"impl-Display-for-MrSigner"],[672,"impl-LowerHex-for-MrSigner"],[678,"impl-From%3C%26%5Bu8%5D%3E-for-MrEnclave"],[680,"impl-From%3C%26str%3E-for-MrEnclave"],[681,"impl-From%3CVec%3Cu8%3E%3E-for-MrEnclave"],[682,"impl-From%3C%26%5Bu8%5D%3E-for-MrSigner"],[683,"impl-From%3C%26str%3E-for-MrSigner"],[685,"impl-From%3CVec%3Cu8%3E%3E-for-MrSigner"],[1035,"impl-Debug-for-Error"],[1036,"impl-Display-for-Error"],[1488,"impl-LowerHex-for-Address"],[1489,"impl-Debug-for-Address"],[1493,"impl-From%3C%26%5Bu8;+ADDRESS_SIZE%5D%3E-for-Address"],[1495,"impl-From%3C%26str%3E-for-Address"],[1868,"impl-Debug-for-Error"],[1869,"impl-Display-for-Error"],[3150,"impl-Display-for-Error"],[3151,"impl-Debug-for-Error"],[4291,"impl-Debug-for-StateError"],[4292,"impl-Display-for-StateError"],[4297,"impl-ImmutableMKVS-for-ConsensusState"],[4298,"impl-ImmutableMKVS-for-%26ConsensusState"],[4304,"impl-ImmutableMKVS-for-ConsensusState"],[4305,"impl-ImmutableMKVS-for-%26ConsensusState"],[4308,"impl-ImmutableMKVS-for-ConsensusState"],[4309,"impl-ImmutableMKVS-for-%26ConsensusState"],[4676,"impl-Debug-for-Error"],[4677,"impl-Display-for-Error"],[4789,"impl-Debug-for-RpcClientError"],[4790,"impl-Display-for-RpcClientError"],[4793,"impl-From%3CError%3E-for-RpcClientError"],[4794,"impl-From%3CDecodeError%3E-for-RpcClientError"],[4860,"impl-Display-for-Error"],[4861,"impl-Debug-for-Error"],[4864,"impl-From%3CError%3E-for-Error"],[4865,"impl-From%3CDecodeError%3E-for-Error"],[5155,"impl-Display-for-SessionID"],[5156,"impl-LowerHex-for-SessionID"],[5157,"impl-Debug-for-SessionID"],[5166,"impl-From%3C%26str%3E-for-SessionID"],[5167,"impl-From%3C%26%5Bu8%5D%3E-for-SessionID"],[5168,"impl-From%3CVec%3Cu8%3E%3E-for-SessionID"],[5289,"impl-Display-for-Error"],[5290,"impl-Debug-for-Error"],[5349,"impl-Display-for-PolicyVerifierError"],[5350,"impl-Debug-for-PolicyVerifierError"],[5417,"impl-Display-for-ProtocolError"],[5418,"impl-Debug-for-ProtocolError"],[5510,"impl-Tree"],[5511,"impl-FallibleMKVS-for-Tree"],[5526,"impl-OverlayTree%3CT%3E"],[5527,"impl-MKVS-for-OverlayTree%3CT%3E"],[5528,"impl-FallibleMKVS-for-Tree"],[5529,"impl-Tree"],[5602,"impl-OverlayTree%3CT%3E"],[5603,"impl-MKVS-for-OverlayTree%3CT%3E"],[5604,"impl-Tree"],[5605,"impl-FallibleMKVS-for-Tree"],[5622,"impl-MKVS-for-OverlayTree%3CT%3E"],[5623,"impl-OverlayTree%3CT%3E"],[5624,"impl-Tree"],[5625,"impl-FallibleMKVS-for-Tree"],[5642,"impl-MKVS-for-OverlayTree%3CT%3E"],[5643,"impl-OverlayTree%3CT%3E"],[5644,"impl-Tree"],[5646,"impl-FallibleMKVS-for-Tree"],[5663,"impl-FallibleMKVS-for-Tree"],[5664,"impl-Tree"],[5667,"impl-OverlayTree%3CT%3E"],[5668,"impl-MKVS-for-OverlayTree%3CT%3E"],[5669,"impl-FallibleMKVS-for-Tree"],[5670,"impl-Tree"],[5847,"impl-Debug-for-SyncerError"],[5848,"impl-Display-for-SyncerError"],[6208,"impl-From%3CVec%3CVec%3Cu8%3E%3E%3E-for-TxnBatch"],[6209,"impl-From%3CVecDeque%3CVec%3Cu8%3E%3E%3E-for-TxnBatch"],[6467,"impl-Debug-for-Error"],[6468,"impl-Display-for-Error"],[6487,"impl-From%3CProtocolError%3E-for-Error"],[6488,"impl-From%3CError%3E-for-Error"],[6489,"impl-From%3CError%3E-for-Error"],[6490,"impl-From%3CStateError%3E-for-Error"],[6491,"impl-From%3CJoinError%3E-for-Error"],[6492,"impl-From%3CError%3E-for-Error"]]}],\
["oasis_runtime_sdk",{"doc":"Oasis runtime SDK.","t":"EEYYEEFNNCENNCCECNNNCNNNNCCNNNXNCNNNNCOXOCCNOCCXCCCCCNNNNNNCQNPPGNNHHHNNNHHHHNNHNNNNNNOOOFONNNNNNNNONOONNNNKRFNNMNMNNNNMNNMNMNMNNNNNMNNMNNMNNMNNNNNNCCCFGPPPIIFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNOFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPGPPPPPGGPPPPPPPPPPPFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCCNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNPPFFFGPPPNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNONONONONONNNNNNNNNOOONNNNNNNNKFNNNNNMONNNNNNNNNNNNNNNNNNNNNNNNNNOOMNNNNNNNNNKFIKNNNNMNNNHNNNNNMNOMNNNNONGPPKNNNNMMNNNNNNNNNNNNNNNPPPPPPPPPPPSKFGFFPPPPPPPPPPPPPPPPPFPPFPPFPNNMNOOMNNNNNNONHMNMNMNMNNONOOOOONNNNNPKGGRRRPRPKKKKKTPKRTKPTNNNNNNNNNNNNNNNNNHNNHNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNOOOCCCCCJJKPPPGGPFFPPPFPGFPONNNNNONNNNNNNNNNNNNNMNMNNMNNNNNNNNNONNNONNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNOMNMNMNMNMNMNMNNNNNNNNNNNNNNNNNNNNNNNMNNNNONMNMNMNMNNCNMNNNNNNOMNMNONNNNNNNNNNNNNNNNNNNNONNNNNNNCMNNNNNNNNOOOOOOOFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNONNNNNNNNNNNNNNNSSSFFFFFFFFOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKPPPGGFFPPPPFGFPPPMNMNMNNNNNNNNNNNNNNNNNNNNNNNNNMNOONNNMNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNMNNNNNNNNNNNNNNNNNNNOMNNNNNNNNNNNNNNNNNNNNNNONNNOMNOMNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNMNPGFPNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNJJKPPPPGGPFFPPPFFPPPNNNNNNNNNNNNNNNNNNNNNNNNNMNMNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNONNCONONNNNNNNNNNNNNNNNNNNNNNOOOONNNNNNCMNNNNNNNMNOOOOOOOOOOOOOOOOOOOOOOOOOSSSSFHHNNNNNONOHHHHHNNHHHHONNNNNFFFFFFFFFPFFFFFPFGFFPPFFFOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNTKPPKRTTFTTGGPPPPFPPPFPPPPPPPPPFTSPPPFPPPPPGFPPPFNNNNNNOONNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNMNONNNNNNNNNNNNNNNNNNNNNNNNOMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNOOOOOMNOOONNNNNONMNMNMNMNNCONMNMNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNCMNMNMNMNNNNNNNNNNNNOSSSSPFFFFPFFGFPFSNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNOONNNNNNNNNJGFPPPFGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONCNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNSFPPGFGFPONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNRRTKTTTNMNNNNNNNGPKNNNNNNNMNNNNNNNNNNNNFONNNNNNNNNNNNNNNNONNNONNPPFFPGFPPPFFGFNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNNONNNNNNNNNNNNNNNNNNONNNNNONNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNEEFRFKFFFKFNNNNNNNNNNNNNNNNNNMNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNMNNNNNNNNMNNNNNNNNNNNNMNNNNNNNNNNNMNNMNNNNMNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFPPPGSNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFKONNNNNNHOONNNNNNNNNNNNNNNNOHNNNNNNOOONNNNNNNNNNMNNNNCCCPPPPPPPPPPPGFFPPPPFPPPPPPPPPPPPPFPPFPPFPNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNONNNNNOONOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCCCCCCHHHHHHHHHHHHHHHHHHHHHHHHHHHHFFFFFNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNHOONNNNNNNOONNNNNNNNNNONNOONNHNNNNNNNNNNNNNNNNNNNNNCCCCCSSSSSSSSSFPGPTPGPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNSFFNNNNNNNNOONNNNNNNNONNNNNNNNNNOOONNNNNNNNNNNNNNIFFNNNNNNNNOONNNNNNONNNNOONNNNNONOONNNNNNNNNNNFFGTTPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOPGFGFGGGPGPPFPSPPPPPPSPPFFPPFNNOONONONNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNONNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNOOO","n":["Context","CurrentState","Error","Event","Module","Runtime","Version","borrow","borrow_mut","callformat","cbor","clone","clone_into","config","context","core","crypto","default","deref","deref_mut","dispatcher","drop","eq","equivalent","equivalent","error","event","fmt","from","from","handler","hash","history","init","into","into_cbor_value","is_compatible_with","keymanager","major","migration","minor","module","modules","new","patch","runtime","schedule_control","sdk_derive","sender","state","storage","subcall","testing","to_owned","try_default","try_from","try_from_cbor_value","try_into","type_id","types","version_from_cargo","vzip","Empty","EncryptedX25519DeoxysII","Metadata","borrow","borrow_mut","decode_call","decode_call_ex","decode_result","deref","deref_mut","drop","encode_call","encode_result","encode_result_ex","encrypt_result_x25519_deoxysii","fmt","from","get_key_pair_id","init","into","try_from","try_into","type_id","vzip","index","pk","sk","ScheduleControl","batch_size","borrow","borrow_mut","default","deref","deref_mut","drop","from","init","initial_batch_size","into","max_tx_count","min_remaining_gas","try_from","try_into","type_id","vzip","Context","Runtime","RuntimeBatchContext","borrow","borrow_mut","clone","clone","consensus_state","consensus_state","deref","deref_mut","drop","epoch","epoch","from","get_logger","get_logger","history","history","host_info","host_info","init","into","is_allowed_query","is_confidential","key_manager","key_manager","local_config","max_messages","max_messages","new","runtime_header","runtime_header","runtime_id","runtime_round_results","runtime_round_results","should_execute_contracts","try_from","try_into","type_id","vzip","multisig","random","signature","Config","Error","InsufficientWeight","InvalidConfig","InvalidSignatureSet","SignatureSet","SignatureSetOwned","Signer","as_fail","batch","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","into_cbor_value","into_cbor_value","public_key","signers","threshold","to_owned","to_owned","to_string","try_default","try_from","try_from","try_from","try_from_cbor_value","try_from_cbor_value","try_into","try_into","try_into","type_id","type_id","type_id","validate_basic","vzip","vzip","vzip","weight","LeafRng","RootRng","append_local_entropy","append_subcontext","append_tx","as_rngcore","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","fill_bytes","fork","from","from","gen_bigint","gen_bigint_range","gen_biguint","gen_biguint_below","gen_biguint_range","gen_prime","init","init","into","into","invalid","new","next_u32","next_u64","try_fill_bytes","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Ed25519","Ed25519","Ed25519_Oasis","Ed25519_PrehashedSha512","Ed25519_Pure","Error","InvalidArgument","InvalidDigestLength","MalformedPrivateKey","MalformedPublicKey","MalformedSignature","MemorySigner","PublicKey","Secp256k1","Secp256k1","Secp256k1_Oasis","Secp256k1_PrehashedKeccak256","Secp256k1_PrehashedSha256","Secp256r1","Secp256r1","Secp256r1_PrehashedSha256","Secp384r1","Secp384r1","Secp384r1_PrehashedSha384","Signature","SignatureType","SigningError","Sr25519","Sr25519","VerificationFailed","as_bytes","as_fail","as_int","as_ref","as_ref","base32_len","base32_len","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_base32","check_base32","clone","clone","clone","clone_into","clone_into","clone_into","cmp","context","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","ed25519","encode_hex","encode_hex","encode_hex_upper","encode_hex_upper","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_bytes","from_bytes","hash","init","init","init","init","init","into","into","into","into","into","into_cbor_value","into_cbor_value","into_cbor_value","is_ed25519_variant","is_prehashed","is_secp256k1_variant","is_secp256r1_variant","is_secp384r1_variant","new_from_seed","new_test","partial_cmp","public_key","secp256k1","secp256r1","secp384r1","sign","sign_by_type","sign_raw","sr25519","to_bytes","to_owned","to_owned","to_owned","to_string","try_default","try_from","try_from","try_from","try_from","try_from","try_from","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","verify","verify_batch_multisig","verify_by_type","verify_raw","vzip","vzip","vzip","vzip","vzip","write_base32","write_base32","get_chain_context_for","set_chain_context","MemorySigner","PublicKey","as_bytes","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","equivalent","fmt","from","from","from","from","from","from_bytes","init","init","into","into","into_cbor_value","sign_digest","to_owned","try_from","try_from","try_from_cbor_value","try_into","try_into","type_id","type_id","verify","verify_digest","verify_raw","vzip","vzip","MemorySigner","PublicKey","as_bytes","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","equivalent","fmt","from","from","from","from_bytes","init","init","into","into","into_cbor_value","sign_digest","to_eth_address","to_owned","to_uncompressed_untagged_bytes","try_from","try_from","try_from_cbor_value","try_into","try_into","type_id","type_id","verify","verify_digest","verify_raw","vzip","vzip","MemorySigner","PublicKey","as_bytes","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","equivalent","fmt","from","from","from","from_bytes","init","init","into","into","into_cbor_value","sign_digest","to_owned","try_from","try_from","try_from_cbor_value","try_into","try_into","type_id","type_id","verify","verify_digest","verify_raw","vzip","vzip","MemorySigner","PublicKey","as_bytes","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","equivalent","fmt","from","from","from","from_bytes","init","init","into","into","into_cbor_value","sign_digest","to_owned","try_from","try_from","try_from_cbor_value","try_into","try_into","type_id","type_id","verify","verify_digest","verify_raw","vzip","vzip","PublicKey","as_bytes","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","equivalent","equivalent","fmt","from","from","from_bytes","init","into","into_cbor_value","to_owned","try_from","try_from_cbor_value","try_into","type_id","verify","vzip","Aborted","BatchOutOfGas","DispatchOptions","DispatchResult","Dispatcher","Error","KeyManagerFailure","MalformedTransactionInBatch","QueryAborted","as_fail","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_format_metadata","check_batch","check_tx","code","decode_tx","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","dispatch_query","dispatch_tx","dispatch_tx_call","dispatch_tx_opts","drop","drop","drop","drop","execute_batch","execute_tx","execute_tx_opts","fmt","fmt","fmt","from","from","from","from","from","from","init","init","init","init","into","into","into","into","into_abort","method_authorizer","module_name","prefetch_tx","priority","query","result","schedule_and_execute_batch","sender_metadata","set_abort_batch_flag","skip_authentication","source","tags","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","tx_hash","tx_index","tx_size","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","Error","RuntimeError","as_fail","borrow","borrow_mut","clone","clone_into","code","code","default","deref","deref_mut","drop","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","init","into","into_abort","into_call_result","into_cbor_value","message","module","module_name","new","to_owned","to_string","try_default","try_from","try_from_cbor_value","try_into","type_id","vzip","Event","EventTag","EventTags","IntoTags","borrow","borrow_mut","clone","clone_into","code","deref","deref_mut","drop","etag_for_event","fmt","from","init","into","into_event_tag","into_tags","into_tags","key","module_name","to_owned","try_from","try_into","type_id","value","vzip","Error","FailedToFetchBlock","FailedToFetchEvents","HistoryHost","as_fail","borrow","borrow_mut","code","consensus_events_at","consensus_state_at","deref","deref_mut","drop","fmt","fmt","from","init","into","into_abort","module_name","to_string","try_from","try_into","type_id","vzip","ActiveDeploymentNotFound","EphemeralSecretChecksumMismatch","EphemeralSecretNotFound","EphemeralSecretNotPublished","EphemeralSecretNotReplicated","GenerationFromFuture","HeightNotFresh","InvalidCiphertext","InvalidEpoch","InvalidGeneration","InvalidSignature","KEY_PAIR_ID_CONTEXT","KeyManager","KeyManagerClientWithContext","KeyManagerError","KeyPair","KeyPairId","MasterSecretChecksumMismatch","MasterSecretNotFound","MasterSecretNotPublished","MasterSecretNotReplicated","NotAuthenticated","NotAuthorized","NotInitialized","Other","PolicyChanged","PolicyInsufficientSignatures","PolicyInvalid","PolicyInvalidRuntime","PolicyRequired","PolicyRollback","REKNotPublished","RSKMissing","RuntimeMismatch","SignedPublicKey","StateCorrupted","StateError","StateKey","StatusNotFound","StorageCorrupted","TrustedPolicySigners","VerificationError","borrow","borrow_mut","box_clone","box_clone","checksum","checksum","clear_cache","clear_cache","clone","clone_into","deref","deref_mut","drop","expiration","from","get_key_pair_id","get_or_create_ephemeral_keys","get_or_create_ephemeral_keys","get_or_create_keys","get_or_create_keys","get_public_ephemeral_key","get_public_ephemeral_key","get_public_key","get_public_key","init","input_keypair","into","key","signature","signers","state_key","threshold","to_owned","try_from","try_into","type_id","vzip","Aborted","BlockHandler","CallResult","DispatchResult","Error","Error","Event","Failed","Genesis","Handled","InvariantHandler","MethodHandler","MigrationHandler","Module","ModuleInfoHandler","NAME","Ok","Parameters","Parameters","STORE_KEY","TransactionHandler","Unhandled","VERSION","after_dispatch_tx","after_handle_call","approve_raw_tx","approve_unverified_tx","authenticate_tx","before_handle_call","begin_block","borrow","borrow","borrow_mut","borrow_mut","check_invariants","decode_tx","deref","deref","deref_mut","deref_mut","dispatch_call","dispatch_call","dispatch_message_result","dispatch_query","dispatch_query","drop","drop","end_block","fmt","from","from","init","init","init_or_migrate","into","into","is_allowed_interactive_call","is_allowed_private_km_query","is_expensive_query","is_success","module_info","ok_or","ok_or_else","params","prefetch","set_params","supported_methods","try_from","try_from","try_into","try_into","type_id","type_id","unwrap","validate_basic","vzip","vzip","code","message","module","accounts","consensus","consensus_accounts","core","rewards","ADDRESS_COMMON_POOL","ADDRESS_FEE_ACCUMULATOR","API","Burn","Core","DebugOptionUsed","Error","Event","Forbidden","GasCosts","Genesis","InsufficientBalance","InvalidArgument","Mint","Module","NotFound","ParameterValidationError","Parameters","Transfer","accounts","after_dispatch_tx","after_handle_call","as_fail","as_fail","authenticate_tx","balances","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","burn","burn","charge_tx_fee","charge_tx_fee","check_invariants","check_signer_nonces","check_signer_nonces","clone","clone","clone","clone_into","clone_into","clone_into","code","code","debug_disable_nonce_check","default","default","default","denomination_infos","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","dispatch_call","dispatch_query","drop","drop","drop","drop","drop","drop","drop","end_block","ensure_balance","fee","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","gas_costs","get_addresses","get_addresses","get_balance","get_balance","get_balances","get_balances","get_denomination_info","get_denomination_info","get_nonce","get_nonce","get_total_supplies","get_total_supplies","inc_nonce","inc_nonce","init","init","init","init","init","init","init","init","init_or_migrate","into","into","into","into","into","into","into","into_abort","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","is_expensive_query","mint","mint","module_info","module_name","module_name","parameters","prefetch","set_balance","set_balance","set_nonce","set_nonce","set_refund_unused_tx_fee","set_refund_unused_tx_fee","set_total_supply","set_total_supply","source","state","supported_methods","take_refund_unused_tx_fee","take_refund_unused_tx_fee","to_owned","to_owned","to_owned","to_string","to_string","total_supplies","transfer","transfer","transfer_silent","transfer_silent","transfers_disabled","try_default","try_default","try_default","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tx_transfer","type_id","type_id","type_id","type_id","type_id","type_id","type_id","types","update_signer_nonces","update_signer_nonces","vzip","vzip","vzip","vzip","vzip","vzip","vzip","amount","amount","amount","from","owner","owner","to","FeeManager","FeeUpdates","TransactionFee","amount","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","commit_block","commit_tx","default","default","denomination","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","from","from","from","init","init","init","into","into","into","new","payer","payer","record_fee","record_refund","refund","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","tx_fee","type_id","type_id","type_id","vzip","vzip","vzip","ACCOUNTS","BALANCES","TOTAL_SUPPLY","Account","AccountBalances","AddressesQuery","BalancesQuery","DenominationInfo","DenominationInfoQuery","NonceQuery","Transfer","address","address","amount","balances","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","decimals","default","default","default","default","default","default","default","default","denomination","denomination","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","nonce","to","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","API","AmountNotRepresentable","ConsensusIncompatibleSigner","Core","Error","Event","GasCosts","Genesis","History","InternalStateError","InvalidArgument","InvalidDenomination","Module","ParameterValidationError","Parameters","ScalingFactorNotPowerOf10","UnderMinDelegationAmount","ZeroScalingFactor","account","account","amount_from_consensus","amount_from_consensus","amount_to_consensus","amount_to_consensus","as_fail","as_fail","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","code","code","consensus_denomination","consensus_denomination","consensus_denomination","consensus_scaling_factor","default","default","default","delegation","delegation","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","dispatch_call","dispatch_query","drop","drop","drop","drop","drop","drop","drop","ensure_compatible_tx_signer","ensure_compatible_tx_signer","eq","eq","equivalent","equivalent","equivalent","equivalent","escrow","escrow","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","gas_costs","height_for_epoch","height_for_epoch","init","init","init","init","init","init","init","init","init_or_migrate","into","into","into","into","into","into","into","into_abort","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","min_delegate_amount","module_info","module_name","module_name","parameters","reclaim_escrow","reclaim_escrow","round_root","round_roots","round_roots","source","supported_methods","to_owned","to_owned","to_owned","to_string","to_string","transfer","transfer","try_default","try_default","try_default","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","types","validate_basic","vzip","vzip","vzip","vzip","vzip","vzip","vzip","withdraw","withdraw","IO","RootKind","RoundRootBody","State","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","init","init","into","into","into_cbor_value","into_cbor_value","kind","round","runtime_id","to_owned","to_owned","try_from","try_from","try_from_cbor_value","try_from_cbor_value","try_into","try_into","type_id","type_id","vzip","vzip","ADDRESS_PENDING_DELEGATION","ADDRESS_PENDING_WITHDRAWAL","API","Consensus","Core","Delegate","Deposit","Error","Event","Forbidden","GasCosts","Genesis","InsufficientBalance","InvalidArgument","InvalidDenomination","Module","Parameters","UndelegateDone","UndelegateStart","Withdraw","as_fail","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_invariants","clone","clone","clone","clone_into","clone_into","clone_into","code","code","default","default","default","delegate","delegate","deposit","deposit","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","disable_delegate","disable_deposit","disable_undelegate","disable_withdraw","dispatch_call","dispatch_message_result","dispatch_query","drop","drop","drop","drop","drop","drop","end_block","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","gas_costs","init","init","init","init","init","init","init","init_or_migrate","into","into","into","into","into","into","into_abort","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","module_info","module_name","module_name","parameters","prefetch","source","state","store_receipt","supported_methods","take_receipt","to_owned","to_owned","to_owned","to_string","try_default","try_default","try_default","try_from","try_from","try_from","try_from","try_from","try_from","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_into","try_into","try_into","try_into","try_into","try_into","tx_delegate","tx_deposit","tx_undelegate","tx_withdraw","type_id","type_id","type_id","type_id","type_id","type_id","types","undelegate","undelegate","vzip","vzip","vzip","vzip","vzip","vzip","withdraw","withdraw","amount","amount","amount","amount","debond_end_time","error","error","error","error","from","from","from","from","from","nonce","nonce","nonce","nonce","shares","shares","to","to","to","to","to","DELEGATIONS","RECEIPTS","UNDELEGATIONS","UNDELEGATION_QUEUE","Undelegation","add_delegation","add_undelegation","borrow","borrow_mut","deref","deref_mut","drop","epoch","from","from","get_delegation","get_delegations","get_delegations_by_destination","get_queued_undelegations","get_undelegations","init","into","set_receipt","sub_delegation","take_receipt","take_undelegation","to","try_from","try_from","try_into","type_id","vzip","AccountBalance","BalanceQuery","ConsensusAccountQuery","ConsensusDelegateContext","ConsensusError","ConsensusTransferContext","ConsensusUndelegateContext","ConsensusWithdrawContext","Delegate","Delegate","DelegationInfo","DelegationQuery","DelegationsQuery","Deposit","ExtendedDelegationInfo","Invalid","Receipt","ReceiptKind","TakeReceipt","Undelegate","UndelegateDone","UndelegateStart","UndelegationInfo","UndelegationsQuery","Withdraw","address","address","address","address","amount","amount","amount","amount","amount","amount","amount","balance","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","epoch","epoch","eq","equivalent","equivalent","error","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","id","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","is_valid","kind","module","nonce","nonce","nonce","nonce","receipt","receipt","receipt","receipt","receipt","receipt","shares","shares","shares","shares","shares","shares","to","to","to","to","to","to","to","to","to","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ALLOW_INTERACTIVE_READ_ONLY_TRANSACTIONS","API","Abort","CallDepthExceeded","Config","Config","DEFAULT_LOCAL_ESTIMATE_GAS_SEARCH_MAX_ITERS","DEFAULT_LOCAL_MIN_GAS_PRICE","DynamicMinGasPrice","EMIT_GAS_USED_EVENTS","ESTIMATE_GAS_EXTRA_FAIL","Error","Event","ExpiredTransaction","Forbidden","ForbiddenInSecureBuild","FutureNonce","GasCosts","GasOverflow","GasPriceTooLow","GasUsed","Genesis","InsufficientFeeBalance","InvalidArgument","InvalidCallFormat","InvalidMethod","InvalidMinPriceMaxChangeDenominator","InvalidNonce","InvalidTargetBlockGasUsagePercentage","InvalidTransaction","InvariantViolation","LocalConfig","MIN_GAS_PRICE_EXEMPT_METHODS","MODULE_NAME","MalformedTransaction","MessageHandlerMissing","MessageHandlerNotInvoked","Module","MultisigTooManySigners","NotAuthenticated","OutOfGas","OutOfMessageSlots","OversizedTransaction","ParameterValidationError","Parameters","ReadOnlyTransaction","TooManyAuth","TxSimulationFailed","TxSimulationFailure","after_handle_call","approve_raw_tx","approve_unverified_tx","as_fail","as_fail","as_fail","auth_multisig_signer","auth_signature","before_handle_call","begin_block","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","callformat_x25519_deoxysii","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","code","code","code","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","dispatch_query","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dynamic_min_gas_price","enabled","end_block","eq","equivalent","equivalent","estimate_gas_search_max_iters","estimate_gas_search_max_iters","estimate_gas_search_max_iters","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","gas_costs","has_epoch_changed","has_epoch_changed","init","init","init","init","init","init","init","init","init","init","init","init_or_migrate","into","into","into","into","into","into","into","into","into","into","into_abort","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","is_allowed_private_km_query","is_error_core_out_of_gas","is_expensive_query","max_batch_gas","max_batch_gas","max_batch_gas","max_estimated_gas","max_multisig_signers","max_tx_signers","max_tx_size","min_gas_price","min_gas_price","min_gas_price","min_gas_price","min_price_max_change_denominator","module_info","module_name","module_name","module_name","out_of_gas","parameters","query_estimate_gas","remaining_batch_gas","remaining_batch_gas","remaining_tx_gas","remaining_tx_gas","set_priority","set_priority","set_sender_meta","set_sender_meta","source","state","storage_byte","supported_methods","take_priority","take_priority","take_sender_meta","take_sender_meta","target_block_gas_usage_percentage","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_default","try_default","try_default","try_default","try_default","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tx_byte","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","types","use_batch_gas","use_batch_gas","use_tx_gas","use_tx_gas","used_batch_gas","used_batch_gas","used_tx_gas","used_tx_gas","validate_basic","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","amount","DYNAMIC_MIN_GAS_PRICE","LAST_EPOCH","MESSAGE_HANDLERS","METADATA","Call","CallDataPublicKeyQueryResponse","EstimateGasQuery","ExecuteReadOnlyTxQuery","ExecuteReadOnlyTxResponse","MessageResult","Metadata","MethodHandlerInfo","MethodHandlerKind","ModuleInfo","Query","RuntimeInfoResponse","VERSION_GLOBAL_KEY","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","caller","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","epoch","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","kind","methods","modules","name","params","propagate_failures","public_key","result","runtime_version","state_version","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_default","try_default","try_default","try_default","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tx","tx","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","versions","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ADDRESS_REWARD_POOL","Error","Genesis","InvalidArgument","InvalidParticipationThreshold","InvalidSchedule","Module","ParameterValidationError","Parameters","as_fail","as_fail","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","code","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","dispatch_query","drop","drop","drop","drop","drop","end_block","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","init","init","init","init","init","init_or_migrate","into","into","into","into","into","into_abort","into_cbor_value","into_cbor_value","module_info","module_name","parameters","participation_threshold_denominator","participation_threshold_numerator","schedule","source","state","to_owned","to_owned","to_string","to_string","try_default","try_default","try_from","try_from","try_from","try_from","try_from","try_from_cbor_value","try_from_cbor_value","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","types","validate_basic","vzip","vzip","vzip","vzip","vzip","REWARDS","EpochRewards","NoReward","Reward","RewardAction","RewardSchedule","RewardScheduleError","RewardStep","StepsNotSorted","amount","as_fail","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","for_disbursement","for_epoch","forbid","from","from","from","from","from","increment","init","init","init","init","init","into","into","into","into","into","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","pending","steps","to_owned","to_owned","to_owned","to_owned","to_string","try_default","try_default","try_default","try_default","try_from","try_from","try_from","try_from","try_from","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","until","validate_basic","value","vzip","vzip","vzip","vzip","vzip","Core","Modules","PREFETCH_LIMIT","Runtime","SCHEDULE_CONTROL","STATE_VERSION","VERSION","consensus_trust_root","genesis_state","is_allowed_interactive_call","is_allowed_private_km_query","is_allowed_query","migrate","migrate_state","start","trusted_policy_signers","Error","FailedToFetchBatch","ScheduleControlHost","as_fail","borrow","borrow_mut","code","deref","deref_mut","drop","fetch_tx_batch","fmt","fmt","from","init","into","into_abort","module_name","to_string","try_from","try_into","type_id","vzip","SenderMeta","address","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","fmt","from","id","init","into","state_nonce","to_owned","try_from","try_into","tx_nonce","type_id","vzip","Check","Commit","CurrentState","Environment","Execute","Mode","Options","PreSchedule","Rollback","Simulate","State","StateValue","TransactionResult","TransactionWithMeta","block_value","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","commit","commit_transaction","data","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","emit_event","emit_event_raw","emit_message","emit_unconditional_event","emitted_messages_count","emitted_messages_local_count","emitted_messages_max","enter","enter_opts","env","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","get","get_mut","has_pending_store_updates","hash","hide_block_values","index","init","init","init","init","init","init","init","init","internal","internal","into","into","into","into","into","into","into","into","is_check_only","is_execute","is_internal","is_pre_schedule","is_read_only","is_simulation","is_transaction","level","local_value","mode","mode","new","open","or_default","pending_store_update_byte_size","rng","rng_local_entropy","rollback","rollback_transaction","set","size","start_transaction","store","take","take_all_events","take_events","take_messages","take_unconditional_events","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tx","tx_auth_info","tx_call_format","tx_caller_address","tx_index","tx_size","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with","with_env","with_internal","with_mode","with_rng_local_entropy","with_store","with_transaction","with_transaction_opts","with_tx","ConfidentialStore","ConfidentialStoreError","HashedStore","Inner","MKVSStore","NestedStore","OverlayStore","Prefix","PrefixStore","Store","TypedStore","as_ref","base32_len","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_base32","clone","clone_into","cmp","commit","commit","commit","confidential","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","encode_hex","encode_hex_upper","eq","equivalent","equivalent","fmt","from","from","from","from","from","from","from","get","get","get","get","get","get","has_pending_updates","has_pending_updates","has_pending_updates","init","init","init","init","init","init","insert","insert","insert","insert","insert","insert","into","into","into","into","into","into","into_cbor_value","iter","iter","iter","iter","iter","iter","new","new","new","new","new","partial_cmp","pending_update_byte_size","pending_update_byte_size","pending_update_byte_size","prefetch_prefixes","prefetch_prefixes","prefetch_prefixes","prefetch_prefixes","prefetch_prefixes","remove","remove","remove","remove","remove","remove","rollback","rollback","rollback","to_owned","try_default","try_from","try_from","try_from","try_from","try_from","try_from","try_from_cbor_value","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","write_base32","ConfidentialStore","CorruptKey","CorruptValue","DecryptionFailure","Error","KEY_SIZE","as_fail","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","get","init","init","insert","into","into","iter","new_with_key","prefetch_prefixes","remove","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","zeroize","AllowAllValidator","SubcallInfo","SubcallResult","Validator","body","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","call","call_result","caller","clone","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","from","from","from","gas_used","get_current_subcall_depth","init","init","init","into","into","into","max_depth","max_gas","method","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","validate","validate","vzip","vzip","vzip","keymanager","keys","mock","ActiveDeploymentNotFound","EphemeralSecretChecksumMismatch","EphemeralSecretNotFound","EphemeralSecretNotPublished","EphemeralSecretNotReplicated","GenerationFromFuture","HeightNotFresh","InvalidCiphertext","InvalidEpoch","InvalidGeneration","InvalidSignature","KeyManagerError","KeyPair","KeyPairId","MasterSecretChecksumMismatch","MasterSecretNotFound","MasterSecretNotPublished","MasterSecretNotReplicated","MockKeyManagerClient","NotAuthenticated","NotAuthorized","NotInitialized","Other","PolicyChanged","PolicyInsufficientSignatures","PolicyInvalid","PolicyInvalidRuntime","PolicyRequired","PolicyRollback","REKNotPublished","RSKMissing","RuntimeMismatch","SignedPublicKey","StateCorrupted","StateError","StateKey","StatusNotFound","StorageCorrupted","TrustedPolicySigners","VerificationError","as_fail","as_ref","as_ref","base32_len","base32_len","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","box_clone","check_base32","check_base32","checksum","checksum","clear_cache","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","encode_hex","encode_hex","encode_hex_upper","encode_hex_upper","eq","eq","equivalent","equivalent","equivalent","equivalent","expiration","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_public_key","from_str","generate_mock","get_or_create_ephemeral_keys","get_or_create_keys","get_public_ephemeral_key","get_public_key","hash","init","init","init","init","init","init","init","input_keypair","into","into","into","into","into","into","into","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","key","len","new","new","new","partial_cmp","signature","signers","source","state_key","threshold","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_default","try_default","try_default","try_default","try_default","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","verify","verify","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write_base32","write_base32","zeroize","zeroize","alice","bob","charlie","dave","erin","frank","grace","address","pk","pk_ed25519","sigspec","address","pk","pk_ed25519","sigspec","address","pk","pk_ed25519","sigspec","address","pk","pk_secp256k1","sigspec","address","pk","pk_secp256k1","sigspec","address","pk","pk_sr25519","sigspec","address","pk","pk_sr25519","sigspec","CallOptions","Config","EmptyRuntime","Mock","Signer","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","call_opts","clone","clone_into","consensus_state","create_ctx","create_ctx_for_runtime","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","empty_store","epoch","fee","fmt","from","from","from","from","from","genesis_state","history","host_info","init","init","init","init","init","into","into","into","into","into","max_messages","new","query","runtime_header","runtime_round_results","sigspec","to_owned","transaction","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_local_config","address","callformat","message","token","transaction","ADDRESS_BECH32_HRP","ADDRESS_RUNTIME_V0_CONTEXT","ADDRESS_RUNTIME_V0_VERSION","ADDRESS_V0_ED25519_CONTEXT","ADDRESS_V0_MODULE_CONTEXT","ADDRESS_V0_MULTISIG_CONTEXT","ADDRESS_V0_SECP256K1ETH_CONTEXT","ADDRESS_V0_SR25519_CONTEXT","ADDRESS_V0_VERSION","Address","Ed25519","Error","MalformedAddress","SIZE","Secp256k1Eth","SignatureAddressSpec","Sr25519","as_fail","as_ref","base32_len","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check_base32","clone","clone","clone_into","clone_into","cmp","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","encode_hex","encode_hex_upper","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bech32","from_bytes","from_eth","from_module","from_module_raw","from_multisig","from_runtime_id","from_sigspec","hash","init","init","init","into","into","into","into_bytes","into_cbor_value","into_cbor_value","new","partial_cmp","public_key","to_bech32","to_owned","to_owned","to_string","to_string","try_default","try_from","try_from","try_from","try_from","try_from_cbor_value","try_from_cbor_value","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","write_base32","CALL_DATA_KEY_PAIR_ID_CONTEXT_BASE","CallEnvelopeX25519DeoxysII","ResultEnvelopeX25519DeoxysII","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","data","data","default","default","deref","deref","deref_mut","deref_mut","drop","drop","epoch","fmt","fmt","from","from","init","init","into","into","into_cbor_value","into_cbor_value","nonce","nonce","pk","to_owned","to_owned","try_default","try_default","try_from","try_from","try_from_cbor_value","try_from_cbor_value","try_into","try_into","type_id","type_id","vzip","vzip","MessageEvent","MessageEventHookInvocation","MessageResult","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","code","context","deref","deref","deref_mut","deref_mut","drop","drop","event","fmt","fmt","from","from","hook_name","index","init","init","into","into","into_cbor_value","module","new","payload","result","to_owned","to_owned","try_from","try_from","try_from_cbor_value","try_into","try_into","type_id","type_id","vzip","vzip","BaseUnits","Denomination","Error","MAX_LENGTH","NATIVE","NameTooLong","amount","as_fail","as_ref","base32_len","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check_base32","clone","clone","clone_into","clone_into","cmp","cmp","default","default","denomination","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","encode_hex","encode_hex_upper","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_str","hash","init","init","init","into","into","into","into_cbor_value","into_cbor_value","into_vec","is_native","new","partial_cmp","partial_cmp","to_owned","to_owned","to_string","to_string","to_string","try_default","try_default","try_from","try_from","try_from","try_from","try_from_cbor_value","try_from_cbor_value","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","write_base32","length","Address","AddressSpec","AuthInfo","AuthProof","Call","CallFormat","CallResult","CallerAddress","EncryptedX25519DeoxysII","Error","EthAddress","Failed","Fee","Internal","LATEST_TRANSACTION_VERSION","MalformedTransaction","Module","Multisig","Multisig","Ok","Plain","SIGNATURE_CONTEXT_BASE","Signature","Signature","SignerInfo","Transaction","Unknown","UnsupportedVersion","UnverifiedTransaction","address","address","address_spec","amount","as_fail","auth_info","batch","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","caller_address","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_messages","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","equivalent","equivalent","fee","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","from","from","from","from","from","from","from","from","from","from","from","from","from","gas","gas_price","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into_call_result","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","is_success","method","new_multisig","new_sigspec","nonce","not_after","not_before","read_only","signer_info","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_default","try_default","try_default","try_default","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrap","validate_basic","verify","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","zeroized","code","message","module"],"q":[[0,"oasis_runtime_sdk"],[62,"oasis_runtime_sdk::callformat"],[86,"oasis_runtime_sdk::callformat::Metadata"],[89,"oasis_runtime_sdk::config"],[107,"oasis_runtime_sdk::context"],[148,"oasis_runtime_sdk::crypto"],[151,"oasis_runtime_sdk::crypto::multisig"],[219,"oasis_runtime_sdk::crypto::random"],[262,"oasis_runtime_sdk::crypto::signature"],[428,"oasis_runtime_sdk::crypto::signature::context"],[430,"oasis_runtime_sdk::crypto::signature::ed25519"],[474,"oasis_runtime_sdk::crypto::signature::secp256k1"],[518,"oasis_runtime_sdk::crypto::signature::secp256r1"],[560,"oasis_runtime_sdk::crypto::signature::secp384r1"],[602,"oasis_runtime_sdk::crypto::signature::sr25519"],[628,"oasis_runtime_sdk::dispatcher"],[721,"oasis_runtime_sdk::error"],[768,"oasis_runtime_sdk::event"],[796,"oasis_runtime_sdk::history"],[821,"oasis_runtime_sdk::keymanager"],[900,"oasis_runtime_sdk::module"],[977,"oasis_runtime_sdk::module::CallResult"],[980,"oasis_runtime_sdk::modules"],[985,"oasis_runtime_sdk::modules::accounts"],[1193,"oasis_runtime_sdk::modules::accounts::Event"],[1200,"oasis_runtime_sdk::modules::accounts::fee"],[1260,"oasis_runtime_sdk::modules::accounts::state"],[1263,"oasis_runtime_sdk::modules::accounts::types"],[1440,"oasis_runtime_sdk::modules::consensus"],[1629,"oasis_runtime_sdk::modules::consensus::types"],[1672,"oasis_runtime_sdk::modules::consensus_accounts"],[1834,"oasis_runtime_sdk::modules::consensus_accounts::Event"],[1859,"oasis_runtime_sdk::modules::consensus_accounts::state"],[1891,"oasis_runtime_sdk::modules::consensus_accounts::types"],[2391,"oasis_runtime_sdk::modules::core"],[2694,"oasis_runtime_sdk::modules::core::Event"],[2695,"oasis_runtime_sdk::modules::core::state"],[2699,"oasis_runtime_sdk::modules::core::types"],[2898,"oasis_runtime_sdk::modules::rewards"],[3007,"oasis_runtime_sdk::modules::rewards::state"],[3008,"oasis_runtime_sdk::modules::rewards::types"],[3125,"oasis_runtime_sdk::runtime"],[3141,"oasis_runtime_sdk::schedule_control"],[3164,"oasis_runtime_sdk::sender"],[3189,"oasis_runtime_sdk::state"],[3391,"oasis_runtime_sdk::storage"],[3543,"oasis_runtime_sdk::storage::confidential"],[3584,"oasis_runtime_sdk::subcall"],[3640,"oasis_runtime_sdk::testing"],[3643,"oasis_runtime_sdk::testing::keymanager"],[3870,"oasis_runtime_sdk::testing::keys"],[3877,"oasis_runtime_sdk::testing::keys::alice"],[3881,"oasis_runtime_sdk::testing::keys::bob"],[3885,"oasis_runtime_sdk::testing::keys::charlie"],[3889,"oasis_runtime_sdk::testing::keys::dave"],[3893,"oasis_runtime_sdk::testing::keys::erin"],[3897,"oasis_runtime_sdk::testing::keys::frank"],[3901,"oasis_runtime_sdk::testing::keys::grace"],[3905,"oasis_runtime_sdk::testing::mock"],[3995,"oasis_runtime_sdk::types"],[4000,"oasis_runtime_sdk::types::address"],[4103,"oasis_runtime_sdk::types::callformat"],[4152,"oasis_runtime_sdk::types::message"],[4198,"oasis_runtime_sdk::types::token"],[4288,"oasis_runtime_sdk::types::token::Error"],[4289,"oasis_runtime_sdk::types::transaction"],[4574,"oasis_runtime_sdk::types::transaction::CallResult"],[4577,"core::fmt"],[4578,"core::fmt"],[4579,"core::hash"],[4580,"oasis_cbor_value::values"],[4581,"oasis_cbor"],[4582,"core::any"],[4583,"core::option"],[4584,"x25519_dalek::x25519"],[4585,"x25519_dalek::x25519"],[4586,"oasis_core_runtime::common::crypto::x25519"],[4587,"oasis_core_runtime::consensus::state"],[4588,"slog"],[4589,"oasis_core_runtime::protocol"],[4590,"oasis_cbor::decode"],[4591,"alloc::boxed"],[4592,"oasis_core_runtime::consensus::roothash::block"],[4593,"oasis_core_runtime::consensus::roothash"],[4594,"oasis_core_runtime::common::namespace"],[4595,"failure"],[4596,"alloc::vec"],[4597,"alloc::string"],[4598,"oasis_core_runtime::common::crypto::hash"],[4599,"rand_core"],[4600,"core::marker"],[4601,"num_bigint_dig::bigint"],[4602,"num_bigint_dig::biguint"],[4603,"rand_core::error"],[4604,"bech32"],[4605,"core::cmp"],[4606,"core::iter::traits::collect"],[4607,"bech32"],[4608,"typenum::generated::consts"],[4609,"digest::digest"],[4610,"typenum::generated::consts"],[4611,"crypto_common"],[4612,"digest"],[4613,"oasis_core_runtime::transaction::types"],[4614,"oasis_core_runtime::types"],[4615,"core::marker"],[4616,"oasis_core_runtime::transaction::dispatcher"],[4617,"oasis_core_runtime::transaction::dispatcher"],[4618,"alloc::collections::btree::set"],[4619,"core::sync::atomic"],[4620,"alloc::sync"],[4621,"core::error"],[4622,"oasis_core_runtime::consensus::verifier"],[4623,"oasis_core_runtime::protocol"],[4624,"tokio::runtime::task::error"],[4625,"oasis_core_runtime::enclave_rpc::demux"],[4626,"oasis_core_runtime::consensus::state"],[4627,"core::iter::traits::collect"],[4628,"core::ops::function"],[4629,"alloc::collections::btree::map"],[4630,"oasis_core_runtime::consensus::staking"],[4631,"oasis_core_runtime::consensus::staking"],[4632,"oasis_core_runtime::consensus::verifier"],[4633,"core::convert"],[4634,"oasis_core_runtime::storage::mkvs"],[4635,"core::convert"],[4636,"oasis_core_runtime::common::crypto::signature"],[4637,"oasis_core_runtime::consensus::keymanager"],[4638,"oasis_core_runtime::storage::mkvs::tree::overlay"]],"d":["","","Derives the <code>Error</code> trait on an enum.","Derives the <code>Event</code> trait on an enum.","","","A protocol or runtime version.","","","Handling of different call formats.","","","","Configuration types.","Execution context.","","Cryptography.","","","","Transaction dispatcher.","","","","","Error types for runtimes.","Event types for runtimes.","","Returns the argument unchanged.","","A helper attribute for <code>#[sdk_derive(...)]</code>. It doesn’t do …","","Historic state access.","","Calls <code>U::from(self)</code>.","","Checks if two versions are compatible.","Keymanager interface.","","A helper attribute for <code>#[sdk_derive(...)]</code>. It doesn’t do …","","Runtime modules.","Runtime modules included with the SDK.","Creates a new version with given major, minor, and patch …","","Runtime.","Types related to schedule control.","Derives traits from a non-trait <code>impl</code> block (rather than …","Transaction sender metadata.","","Storage.","Subcall dispatch.","Module which contains utilities useful for testing and …","","","","","","","Types defined by the SDK.","Constructs an <code>oasis_sdk::core::common::version::Version</code> …","","","","Additional metadata required by the result encoding …","","","Decode call arguments.","Decode call arguments.","","","","","Encodes a call such that it can be decoded by …","Encode call results.","Encode call results.","Encrypt a call result using the X25519-Deoxys-II …","","Returns the argument unchanged.","Derive the key pair ID for the call data encryption key …","","Calls <code>U::from(self)</code>.","","","","","Transaction index within the batch.","Caller’s ephemeral public key used for X25519.","Secret key.","Runtime schedule control configuration.","Size of each extra batch that the runtime should fetch.","","","Construct a default schedule control configuration.","","","","Returns the argument unchanged.","","Size of the initial batch that the node should provide to …","Calls <code>U::from(self)</code>.","Maximum number of transactions that can go in a batch.","Minimum amount of gas that needs to be remaining in a …","","","","","Runtime SDK context.","Runtime that the context is being invoked in.","Dispatch context for the whole batch.","","","Clone this context.","","Consensus state.","","","","","Current epoch.","","Returns the argument unchanged.","Returns a logger.","","Historical state.","","Information about the host environment.","","","Calls <code>U::from(self)</code>.","Whether <code>method</code> is an allowed query per policy in the local …","Whether the context has a key manager available (e.g. the …","The key manager, if the runtime is confidential.","","Returns node operator-provided local configuration.","Maximum number of consensus messages that the runtime can …","","Create a new dispatch context.","Last runtime block header.","","Runtime ID.","Results of executing the last successful runtime round.","","Whether smart contracts should be executed in this context.","","","","","","Random number generator based on root VRF key and Merlin …","Cryptographic signatures.","A multisig configuration. A set of signers with total “…","Error.","","","","A set of signatures corresponding to a multisig …","A <code>SignatureSet</code> owned in a <code>Vec</code>.","One of the signers in a multisig configuration.","","Checks that the configuration and signature set are …","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","The public key of the signer.","The signers.","The threshold.","","","","","","","","","","","","","","","","Performs some sanity checks. This looks at the …","","","","The weight of the signer.","A leaf RNG.","A root RNG that can be used to derive domain-separated …","Append local entropy to the root RNG.","Append an observed subcontext to RNG transcript.","Append an observed transaction hash to RNG transcript.","","","","","","","","","","","","","Create an independent leaf RNG using this RNG as its …","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create an invalid root RNG which will fail when any leaf …","Create a new root RNG.","","","","","","","","","","","","","","","","","Error.","","","","","","A memory-backed signer.","A public key used for signing.","","","","","","","","","","","","Variable-length opaque signature.","A specific combination of signature and hash.","","","","","Return a byte representation of this public key.","","","","","","","","","","","","","","","","","","","","","","","","","","Domain separation context helpers.","","","","","","","","","","","","","","","","","Ed25519 signatures.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Reconstruct the signer from its byte representation.","Construct a public key from a slice of bytes.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Create a new memory signer from a seed.","Create a new signer for testing purposes.","","Public key corresponding to the signer.","Secp256k1 signatures.","Secp256r1 signatures.","Secp384r1 signatures.","Generate a signature with the private key over the context …","Generate a signature for the specified message and …","Generate a signature with the private key over the message.","Sr25519 signatures.","Return a byte representation of the signer.","","","","","","","","","","","","","","","","","","","","","","","","","Verify a signature.","Verify a batch of signatures of the same message.","Verify the signature of a message.","Verify signature raw using the underlying method, without …","","","","","","","","Return the globally configured chain domain separation …","Configure the global chain domain separation context.","A memory-backed signer for Ed25519.","An Ed25519 public key.","Return a byte representation of this public key.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Construct a public key from a slice of bytes.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Verify a signature.","Verify signature of a pre-hashed message.","Verify signature without applying domain separation.","","","A memory-backed signer for Secp256k1.","A Secp256k1 public key (in compressed form).","Return a byte representation of this public key.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Construct a public key from a slice of bytes.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Derive an Ethereum-compatible address.","","Return an alternative byte representation used in deriving …","","","","","","","","Verify a signature.","Verify signature of a pre-hashed message.","Verify signature without using any domain separation …","","","A memory-backed signer for Secp256r1.","A Secp256r1 public key (in compressed form).","Return a byte representation of this public key.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Construct a public key from a slice of bytes.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Verify a signature.","Verify signature of a pre-hashed message.","Verify signature without using any domain separation …","","","A memory-backed signer for Secp384r1.","A Secp384r1 public key (in compressed form).","Return a byte representation of this public key.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Construct a public key from a slice of bytes.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Verify a signature.","Verify signature of a pre-hashed message.","Verify signature without using any domain separation …","","","A Sr25519 public key.","Return a byte representation of this public key.","","","","","","","","","","","","","Returns the argument unchanged.","Construct a public key from a slice of bytes.","","Calls <code>U::from(self)</code>.","","","","","","","Verify a signature.","","","","Additional options for dispatch operations.","Result of dispatching a transaction.","The runtime dispatcher.","Error emitted by the dispatch process. Note that this …","","","","","","","","","","","","","Call format metadata.","","Check whether the given transaction is valid.","","Decode a runtime transaction.","","","","","","","","","","Process the given runtime query.","Dispatch a runtime transaction in the given context.","Run the dispatch steps inside a transaction context. This …","Dispatch a runtime transaction in the given context with …","","","","","","Execute the given transaction.","Execute the given transaction, returning unserialized …","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Optionally only allow methods for which the provided …","","Prefetch prefixes for the given transaction.","Transaction priority.","","Transaction call result.","","Transaction sender metadata.","","Optionally skip authentication.","","Transaction tags.","","","","","","","","","","Transaction hash.","Transaction index within the batch.","Transaction size.","","","","","","","","","A runtime error that gets propagated to the caller.","A serializable error.","","","","","","Error code uniquely identifying the error.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Consumes self and returns either <code>Ok(err)</code> (where <code>err</code> is a …","Converts the error into a call result.","","","","Name of the module that emitted the error.","Create a new error.","","","","","","","","","An event emitted by the runtime.","A key-value pair representing an emitted event that will …","Event tags with values accumulated by key.","Provides method for converting event tags into events.","","","","","Code uniquely identifying the event.","","","","Generate an EventTag corresponding to the passed event …","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Converts an event into an event tag.","","","","Name of the module that emitted the event.","","","","","","","History host errors.","","","Interface to the runtime host to fetch historic …","","","","","Fetch events emitted during execution of the block at …","Fetch historic consensus state after executing the block …","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Key pair ID domain separation context.","Key manager interface.","Convenience wrapper around an existing KeyManagerClient …","Key manager error.","A key pair managed by the key manager.","A 256-bit key pair identifier.","","","","","","","","","","","","","","","","","","Signed public key.","","","A state encryption key.","","","Set of trusted key manager policy signing keys.","","","","","","Checksum of the key manager state.","Checksum of the key manager state.","Clear local key cache.","","","","","","","Expiration epoch.","Returns the argument unchanged.","Derive a <code>KeyPairId</code> for use with the key manager functions.","Get or create named ephemeral key pair for given epoch.","","Get or create named key pair.","","Get ephemeral public key for an epoch and a key pair id.","","Get public key for a key pair id.","","","Input key pair (pk, sk)","Calls <code>U::from(self)</code>.","Public key.","Sign(sk, (key || checksum || runtime id || key pair id || …","Set of trusted signers.","State encryption key","Threshold for determining if enough valid signatures are …","","","","","","A fatal error has occurred and the batch must be aborted.","Block handler.","A variant of <code>types::transaction::CallResult</code> but used for …","Result of invoking the method handler.","Module error type.","","Module event type.","Call has completed with failure.","Genesis state type.","","Invariant handler.","Method handler.","Migration handler.","A runtime module.","Info handler.","Module name.","Call has completed successfully.","Parameters for a runtime module.","Module parameters.","Store key used for storing parameters.","Transaction handler.","","Module version.","Perform any action after dispatching the transaction, in …","Perform any action after call, within the transaction …","Judge if a raw transaction is good enough to undergo …","Judge if an unverified transaction is good enough to …","Authenticate a transaction.","Perform any action after authentication, within the …","Perform any common actions at the start of the block …","","","","","Check invariants.","Decode a transaction that was sent with module-controlled …","","","","","A convenience function for dispatching method calls.","Dispatch a call.","Dispatch a message result.","A convenience function for dispatching queries.","Dispatch a query.","","","Perform any common actions at the end of the block (after …","","Returns the argument unchanged.","Returns the argument unchanged.","","","Initialize state from genesis or perform a migration.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Checks whether the given call is allowed to be called …","Checks whether the given query is allowed to access …","Checks whether the given query method is tagged as …","Check whether the call result indicates a successful …","Reports info about the module (or modules, if <code>Self</code> is a …","Transforms <code>DispatchResult&lt;B, R&gt;</code> into <code>Result&lt;R, E&gt;</code>, mapping …","Transforms <code>DispatchResult&lt;B, R&gt;</code> into <code>Result&lt;R, E&gt;</code>, mapping …","Return the module’s parameters.","Add storage prefixes to prefetch.","Set the module’s parameters.","Lists the names of all RPC methods exposed by this module. …","","","","","","","","Perform basic parameter validation.","","","","","","Accounts module.","Consensus module.","Consensus accounts module.","Core definitions module.","Rewards module.","Module’s address that has the common pool.","Module’s address that has the fee accumulator.","Interface that can be called from other modules.","","","","Errors emitted by the accounts module.","Events emitted by the accounts module.","","Gas costs.","Genesis state for the accounts module.","","","","","","Errors emitted during rewards parameter validation.","Parameters for the accounts module.","","","","","","","","","","","","","","","","","","","","","","","Burn existing tokens, decreasing the total supply.","","Moves the amount into the per-transaction fee accumulator.","","Check invariants.","Check transaction signer account nonces. Return payer …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Ensures that the given account has at least the specified …","Fee manager.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Fetch addresses.","","Fetch an account’s balance of the given denomination.","","Fetch an account’s current balances.","","Fetch information about a denomination.","","Fetch an account’s current nonce.","","Fetch total supplies.","","Increments an account’s nonce.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Mint new tokens, increasing the total supply.","","","","","","","Sets an account’s balance of the given denomination.","","Sets an account’s nonce.","","Indicates that the unused portion of the transaction fee …","","Sets the total supply for the given denomination.","","","State schema constants.","","Take the flag indicating that the unused portion of the …","","","","","","","","Transfer an amount from one account to the other.","","Transfer an amount from one account to the other without …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Account module types.","Update transaction signer account nonces.","","","","","","","","","","","","","","","","The per-block fee manager that records what fees have been …","Fee updates to apply to state after <code>commit_tx</code>.","Information about fees charged for the current transaction.","Transaction fee amount.","","","","","","","","","","","Commit the fees accumulated for the current block, …","Commit the currently open transaction fee by moving the …","","","Denomination of the transaction fee.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new per-block fee manager.","Transaction fee payer address.","Fee payer.","Record that a transaction fee has been charged.","Record that a portion of the previously charged …","Amount that should be refunded to fee payer.","","","","","","","","","Fees charged for the current transaction.","","","","","","","Map of account addresses to account metadata.","Map of account addresses to map of denominations to …","Map of total supplies (per denomination).","Account metadata.","Balances in an account.","Arguments for the Addresses query.","Arguments for the Balances query.","Information about a denomination.","Arguments for the DenominationInfo query.","Arguments for the Nonce query.","Transfer call.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Number of decimals that the denomination is using.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Interface that can be called from other modules.","","","","","Events emitted by the consensus module (none so far).","Gas costs.","Genesis state for the consensus module.","","","","","","Errors emitted during rewards parameter validation.","Parameters for the consensus module.","","","","Query consensus account info.","","Convert runtime amount to consensus amount, scaling as …","","Convert consensus amount to runtime amount, scaling as …","","","","","","","","","","","","","","","","","","","","","","","","","","Returns consensus token denomination.","","","","","","","Query consensus delegation info.","","","","","","","","","","","","","","","","","","","","","","","","","Ensures transaction signer is consensus compatible.","","","","","","","","Escrow an amount of the runtime account funds.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Determine consensus height corresponding to the given …","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Minimum amount that is allowed to be delegated. This …","","","","","Reclaim an amount of runtime staked shares.","","Cost of the internal round_root call.","Round roots return the round roots for the given runtime …","","","","","","","","","Transfer an amount from the runtime account.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Withdraw an amount into the runtime account.","","","Kind of root.","Internal round root call body.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Module’s address that has the tokens pending delegation.","Module’s address that has the tokens pending withdrawal.","Interface that can be called from other modules.","","","","","","Events emitted by the consensus accounts module.","","Gas costs.","Genesis state for the consensus module.","","","","","Parameters for the consensus module.","","","","","","","","","","","","","","","","","Check invariants.","","","","","","","","","","","","Delegate from runtime account to consensus staking account.","","Transfer from consensus staking account to runtime account.","","","","","","","","","","","","","","Whether delegate functionality should be disabled.","Whether deposit functionality should be disabled.","Whether undelegate functionality should be disabled.","Whether withdraw functionality should be disabled.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","State schema.","Cost of storing a delegation/undelegation receipt.","","Cost of taking a delegation/undelegation receipt.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consensus module types.","Start the undelegation process of the given number of …","","","","","","","","Transfer from runtime account to consensus staking account.","","","","","","","","","","","","","","","","","","","","","","","","","","","Map of active delegations.","Receipts.","Map of undelegations.","An undelegation queue.","Undelegation metadata.","Add delegation for a given (from, to) pair.","Record new undelegation and add to undelegation queue.","","","","","","","Returns the argument unchanged.","","Retrieve delegation metadata for a given (from, to) pair.","Retrieve all delegation metadata originating from a given …","Return the number of delegated shares for each destination …","Retrieve all queued undelegations for epochs earlier than …","Retrieve all undelegation metadata to a given address.","","Calls <code>U::from(self)</code>.","Store the given receipt.","Subtract delegation from a given (from, to) pair.","Remove the given receipt from storage if it exists and …","Remove an existing undelegation and return it.","","","","","","","","Balance query.","Consensus account query.","Context for consensus delegate message handler.","Error details from the consensus layer.","Context for consensus transfer message handler.","Context for consensus undelegate message handler.","Context for consensus withdraw message handler.","Delegate from runtime call.","","Information about a delegation.","Delegation query.","Delegations query.","Deposit into runtime call. Transfer from consensus staking …","Extended information about a delegation.","","A receipt.","Kind of receipt.","Take receipt internal runtime call.","Undelegate into runtime call.","","","Information about an undelegation.","Undelegations query.","Withdraw from runtime call. Transfer from an account in …","","","","","","","","Amount of tokens receivedndelegate end epoch.","Epoch when the undelegation will be complete.","","","","Consensus layer error.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Address being undelegated from.","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Whether the receipt kind is valid.","","","","","","","","","Undelegate end receipt.","Receipt identifier for this undelegation.","","","","Shares received (for delegations).","The amount of owned shares.","The amount of owned shares.","The amount of undelegated shares.","","","","","","","Address delegated to.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether to allow submission of read-only transactions in …","","","","Module configuration.","Module configuration.","Default local estimate gas max search iterations …","Default local minimum gas price configuration that is used …","Dynamic min gas price parameters.","Whether gas used events should be emitted for every …","Estimated gas amount to be added to failed transaction …","Errors emitted by the core module.","Events emitted by the core module.","","","","","Gas costs.","","","","Genesis state for the accounts module.","","","","","","","","","","Local configuration that can be provided by the node …","Methods which are exempt from minimum gas price …","Unique module name.","","","","","","","","","","Errors emitted during core parameter validation.","Parameters for the core module.","","","","Simulation failure error.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Enables the dynamic min gas price feature which …","","","","","Returns the configured max iterations in the binary search …","","The maximum number of iterations of the binary search to …","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Check whether the epoch has changed since last processed …","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Returns true if the failure is “core::Error::OutOfGas”.","","Configured maximum amount of gas that can be used in a …","","","When estimating gas in <code>core.EstimateGas</code>, simulate the tx …","","","","Configured minimum gas price.","","","Minimum gas price to accept.","Represents a constant value used to limit the rate at …","","","","","Generate a proper OutOfGas error, depending on whether the …","","Run a transaction in simulation and return how much gas it …","Returns the remaining batch-wide gas.","","Return the remaining tx-wide gas.","","Sets the transaction priority to the provided amount.","","Set transaction sender metadata.","","","State schema constants.","","","Takes and returns the stored transaction priority.","","Takes and returns the stored transaction sender metadata.","","Target block gas usage indicates the desired block gas …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempt to use gas. If the gas specified would cause …","","Attempt to use gas. If the gas specified would cause …","","Returns the total batch-wide gas used.","","Return the used tx-wide gas.","","","","","","","","","","","","","","Dynamic min gas price.","Last processed epoch for detecting epoch changes.","Map of message idx to message handlers for messages …","Runtime metadata.","","Response to the call data public key query.","Arguments for the EstimateGas query.","Arguments for the ExecuteReadOnlyTx query.","Response to the ExecuteReadOnlyTx query.","","Basic per-module metadata; tracked in core module’s …","","","Metadata for an individual module.","","Response to the RuntimeInfo query.","Key in the versions map used for the global state version.","","","","","","","","","","","","","","","","","","","The address of the caller for which to do estimation. If …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Epoch of the ephemeral runtime key.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","If the estimate gas query should fail in case of …","Public key used for deriving the shared secret for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The unsigned transaction to estimate.","","","","","","","","","","","","A set of state versions for all supported modules.","","","","","","","","","","Module’s address that has the reward pool.","Errors emitted by the rewards module.","Genesis state for the rewards module.","","","","","Errors emitted during rewards parameter validation.","Parameters for the rewards module.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","State schema constants.","","","","","","","","","","","","","","","","","","","","","","","","Rewards module types.","","","","","","","Map of epochs to rewards pending distribution.","Rewards for the epoch.","","","Action that should be taken for a given address when …","A reward schedule.","Errors emitted during reward schedule validation.","One of the time periods in the reward schedule.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an iterator over addresses that should be rewarded.","Compute the per-entity reward amount for the given epoch …","Forbids any rewards from accumulating.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Increment the reward counter associated with the reward.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Perform basic reward schedule validation.","Value of the reward counter.","","","","","","Module that provides the core API.","Supported modules.","Prefetch limit. To enable prefetch set it to a non-zero …","A runtime.","Runtime schedule control configuration.","State version.","Runtime version.","Return the consensus layer trust root for this runtime; if …","Genesis state for the runtime.","Whether a given call is allowed to be invoked …","Whether a given query method is allowed to access private …","Whether a given query method is allowed to be invoked.","Perform state migrations if required.","Perform runtime-specific state migration. This method is …","Start the runtime.","Return the trusted policy signers for this runtime; if <code>None</code>…","Schedule control errors.","","Interface to the runtime host that supports schedule …","","","","","","","","Fetch the specified set of transactions from the host’s …","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","Transaction sender metadata.","Sender address.","","","","","","","","","","","","","Returns the argument unchanged.","Unique identifier of the sender, currently derived from …","","Calls <code>U::from(self)</code>.","Sender nonce contained in runtime state.","","","","Sender nonce contained in the transaction.","","","Check that transactions are valid for local acceptance …","","State attached to the current thread.","Information about the execution environment.","Actually execute transactions during block production.","Execution mode.","Environment modification options.","Check that transactions are still valid before scheduling.","","Simulate transaction outcomes (e.g. for gas estimation).","Mutable block state of a runtime.","A per-state arbitrary value.","Result of a transaction helper closure.","Decoded transaction with additional metadata.","Fetches a block state value entry.","","","","","","","","","","","","","","","","","","","","","","","","","Commit the current state and return to its parent state.","Commit a previously started transaction.","Decoded transaction.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Emit an event.","Emit a raw event.","Queue a message to be emitted by the runtime for consensus …","Emit an unconditional event.","Emitted messages count returns the number of messages …","Emitted messages count returns the number of messages …","Maximum number of messages that can be emitted.","Attach a new state to the current thread and enter the …","Attach a new state to the current thread and enter the …","Environment information.","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Gets a reference to the specified per-state value.","Gets a mutable reference to the specified per-state value.","Whether the store associated with the state has any …","Transaction hash.","Hides block values from the current state which will have …","Transaction index within the batch.","","","","","","","","","Create transaction with metadata for an internally …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Whether the execution mode is such that only checks should …","Whether the execution mode is <code>Mode::Execute</code>.","Whether the current execution environment is part of an …","Whether the execution mode is <code>Mode::PreSchedule</code>.","An active transaction’s read only flag.","Whether the execution mode is <code>Mode::Simulate</code>.","Whether there is an active transaction in the current …","Returns the nesting level of the current state.","Fetches a local state value entry.","Execution mode.","","Create options with default values.","Open a child state after which self will point to the …","Retrieves the existing value or inserts and returns the …","Size (in bytes) of any pending updates in the associated …","Random number generator.","","Rollback the current state and return to its parent state.","Rollback a previously started transaction.","Sets the context value, returning a mutable reference to …","Transaction size.","Start a new transaction by opening a new child state.","Store associated with the state.","Takes the context value, if it exists.","Take all events accumulated in the current state and …","Take all regular events accumulated in the current state.","Take all messages accumulated in the current state.","Take all unconditional events accumulated in the current …","","","","","","","","","","","","","","","","","","","","","","","An active transaction’s authentication information.","An active transaction’s call format.","Authenticated address of the caller.","An active transaction’s index (order) within the block.","An active transaction’s size in bytes.","","","","","","","","","","","","","","","","","Run a closure with the currently active state.","Run a closure with the environment of the currently active …","Change the internal flag of the environment.","Change the execution mode of the environment.","Request for local entropy to be mixed into the current RNG.","Run a closure with the store of the currently active state.","Run a closure within a state transaction.","Run a closure within a state transaction, allowing the …","Change the active transaction of the environment.","","","A key-value store that hashes all keys and stores them as …","Type of the inner store.","A key-value store backed by MKVS.","A key-value store that supports the commit operation.","An overlay store which keeps values locally until …","A key prefix.","A key-value store that prefixes all keys with the given …","A key-value store.","A key-value store that transparently handles …","","","","","","","","","","","","","","","","","","","Commit any changes to the underlying store.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Fetch entry with given key.","","","","","Fetch entry with given key.","Whether there are any store updates pending to be …","","","","","","","","","Update entry with given key to the given value.","","","","","Update entry with given key to the given value.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns an iterator over the tree.","","","","","","Create a new hashed store.","","Create a new overlay store.","Create a new prefix store with the given prefix.","Create a new typed store.","","Size (in bytes) of any pending updates.","","","Populate the in-memory tree with nodes for keys starting …","","","","","Remove entry with given key.","","","","","Remove entry with given key.","Rollback any changes.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A key-value store that encrypts all content with DeoxysII.","","","","Errors emitted by the confidential store.","Size of the Deoxys-II-256-128 key in bytes.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Create a new confidential store with the given keypair.","","","","","","","","","","","","","A validator which allows everything.","Information about a subcall to be dispatched.","Result of dispatching a subcall.","Subcall validator.","Subcall body.","","","","","","","Perform a subcall.","Result of the subcall.","Address of the caller.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Gas used by the subcall.","The current subcall depth.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Maximum subcall depth.","Maximum gas amount that can be consumed.","Method to call.","","","","","","","","","","","Validate a subcall before it is performed.","","","","","Mock key manager implementation.","Module that contains known test keys.","Mock dispatch context for use in tests.","","","","","","","","","","","","Key manager error.","A key pair managed by the key manager.","A 256-bit key pair identifier.","","","","","","","","","","","","","","","","","","","Signed public key.","","","A state encryption key.","","","Set of trusted key manager policy signing keys.","","","","","","","","","","","","","","","","","","","","","","","","Checksum of the key manager state.","Checksum of the key manager state.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Expiration epoch.","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a <code>KeyPair</code> with only the public key.","","Generate a new random key (for testing).","","","","","","","","","","","","","Input key pair (pk, sk)","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Public key.","Size of this object in bytes.","Create a <code>KeyPair</code>.","Create a new signed public key.","","","Sign(sk, (key || checksum || runtime id || key pair id || …","Set of trusted signers.","","State encryption key","Threshold for determining if enough valid signatures are …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Verify the signature.","Verify that policy has valid signatures and that enough of …","","","","","","","","","","","","Test key  A .","Test key  B .","Test key  C .","Test key  D .","Test key  E .","Test key  F .","Test key  G .","Test address  A .","Test public key  A .","Test Ed25519 public key  A .","Test address derivation information  A .","Test address  B .","Test public key  B .","Test Ed25519 public key  B .","Test address derivation information  B .","Test address  C .","Test public key  C .","Test Ed25519 public key  C .","Test address derivation information  C .","Test address  D .","Test public key  D .","Test Secp256k1 public key  D .","Test address derivation information  D .","Test address  E .","Test public key  E .","Test Secp256k1 public key  E .","Test address derivation information  E .","Test address  F .","Test public key  F .","Test Sr25519 public key  F .","Test address derivation information  F .","Test address  G .","Test public key  G .","Test Sr25519 public key  G .","Test address derivation information  G .","Options that can be used during mock signer calls.","","A mock runtime that only has the core module.","Mock dispatch context factory.","A mock signer for use during tests.","","","","","","","","","","","Dispatch a call to the given method.","Dispatch a call to the given method with the given options.","","","","Create a new mock dispatch context.","Create a new mock dispatch context.","","","","","","","","","","","","","","","","","","Create an empty MKVS store.","","Transaction fee.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Create a new mock signer using the given nonce and …","Dispatch a query to the given method.","","","Address specification for this signer.","","Create a new mock transaction.","","","","","","","","","","","","","","","","","","","","","Create an instance with the given local configuration.","Account address type.","Types related to call formats.","","Token types.","Transaction types.","Human readable part for Bech32-encoded addresses.","V0 runtime address context.","V0 runtime address version.","V0 Ed25519 addres context (shared with consensus layer).","V0 module address context.","V0 multisig address context.","V0 Secp256k1 address context.","V0 Sr25519 address context.","V0 address version.","An account address.","Ed25519 address derivation compatible with the consensus …","Error.","","Size of an address in bytes.","Ethereum-compatible address derivation from Secp256k1 …","Information for signature-based authentication and public …","Sr25519 address derivation.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Tries to create a new address from Bech32-encoded string.","Tries to create a new address from raw bytes.","Creates a new address from an Ethereum-compatible address.","Creates a new address for a specific module and kind.","Creates a new address for a specific module and raw kind.","Creates a new address from a multisig configuration.","Creates a new runtime address.","Creates a new address from a public key.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert the address into raw bytes.","","","Creates a new address from a context, version and data.","","Public key of the authentication/address derivation …","Converts an address to Bech32 representation.","","","","","","","","","","","","","","","","","","","","","","Call data key pair ID domain separation context base.","A call envelope when using the EncryptedX25519DeoxysII …","A result envelope when using the EncryptedX25519DeoxysII …","","","","","","","","","Encrypted call data.","Encrypted call data.","","","","","","","","","Epoch of the ephemeral runtime key.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Nonce.","Nonce.","Caller’s ephemeral public key used for X25519.","","","","","","","","","","","","","","","Result of a message being processed by the consensus layer.","Handler name and context to be called after message is …","Result of a message being processed by the consensus layer …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Constructs a new message hook invocation.","","","","","","","","","","","","","","Token amount of given denomination in base units.","Name/type of the token.","","Maximum length of a denomination.","Denomination in native token.","","Token amount in base units.","","","","","","","","","","","","","","","","","","","Denomination of the token amount.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Raw representation of a denomination.","Whether the denomination represents the native token.","Creates a new token amount of the given denomination.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Common information that specifies an address as well as …","Transaction authentication information.","A container for data that authenticates a transaction.","Method call.","Format used for encoding the call (and output) information.","Call result.","A caller address.","Encrypted call data using X25519 for key exchange and …","Error.","","","Transaction fee.","For internal child calls (cannot be …","The latest transaction format version.","","A flag to use module-controlled decoding. The string is an …","For <em>multisig</em> authentication.","For <em>multisig</em> authentication.","","Plain text call data.","Transaction signature domain separation context base.","For <em>signature</em> authentication.","For <em>signature</em> authentication.","Transaction signer information.","Transaction.","","","An unverified signed transaction.","Derives the address.","Derives the address.","","Amount of base units paid as fee for transaction …","","","Checks that the address specification and the …","Method body.","","","","","","","","","","","","","","","","","","","","","","","","","","Derives the caller address.","","","","","","","","","","","","","","","","","","","","","","","Maximum amount of emitted consensus messages paid for. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fee payment information.","","","","","","","","","","","","","","Call format.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Maximum amount of gas paid for.","Calculates gas price from fee amount and gas.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Check whether the call result indicates a successful …","Method name.","Create a new signer info from a multisig configuration and …","Create a new signer info from a signature address …","","Latest round when the transaction is valid.","Earliest round when the transaction is valid.","Read-only flag.","Transaction signer information.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Perform basic validation on the transaction.","Verify and deserialize the unverified transaction.","","","","","","","","","","","","","","Maps the caller address to one of the same type but with …","","",""],"i":[0,0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,1,1,1,0,1,1,1,1,0,0,1,1,1,0,1,0,1,1,1,1,0,1,0,1,0,0,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,1,15,15,0,15,15,0,0,0,15,15,15,0,0,0,0,15,15,0,15,15,15,15,15,15,287,287,287,0,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,0,19,0,33,33,19,33,19,33,33,33,33,19,33,33,19,33,19,33,19,33,33,33,19,19,19,33,19,19,33,33,19,33,19,19,33,19,33,33,33,33,0,0,0,0,0,52,52,52,0,0,0,52,47,52,53,47,52,53,47,53,47,53,47,47,52,53,47,52,53,47,52,53,47,52,52,53,47,52,53,47,52,53,47,52,53,47,53,47,53,47,47,53,47,52,47,52,53,47,53,47,52,53,47,52,53,47,47,52,53,47,53,0,0,55,55,55,58,55,58,55,58,55,58,55,58,55,58,58,55,55,58,58,58,58,58,58,58,55,58,55,58,55,55,58,58,58,55,58,55,58,55,58,55,58,72,49,66,66,66,0,71,71,71,71,71,0,0,72,49,66,66,66,72,49,66,72,49,66,0,0,71,66,49,71,49,71,66,49,51,49,51,72,66,49,71,51,72,66,49,71,51,49,51,66,49,51,66,49,51,66,0,51,72,66,49,71,51,72,66,49,71,51,72,66,49,71,51,0,49,51,49,51,66,49,51,66,66,49,49,51,51,66,49,71,71,51,72,66,49,71,51,51,72,49,66,72,66,49,71,51,72,66,49,71,51,66,49,51,66,66,66,66,66,72,72,66,72,0,0,0,72,72,72,0,72,66,49,51,71,51,72,66,66,49,71,51,66,49,51,72,66,49,71,51,72,66,49,71,51,49,49,49,49,72,66,49,71,51,49,51,0,0,0,0,74,76,74,76,74,74,74,76,74,76,74,76,74,74,74,74,74,76,74,74,74,74,74,76,74,76,74,74,76,74,76,74,74,76,74,76,74,74,74,74,76,74,0,0,80,81,80,81,80,80,80,81,80,81,80,81,80,80,80,80,80,81,80,80,80,81,80,81,80,80,81,80,80,80,81,80,80,81,80,81,80,80,80,80,81,80,0,0,84,85,84,85,84,84,84,85,84,85,84,85,84,84,84,84,84,85,84,84,84,85,84,85,84,84,85,84,85,84,84,85,84,85,84,84,84,84,85,84,0,0,88,89,88,89,88,88,88,89,88,89,88,89,88,88,88,88,88,89,88,88,88,89,88,89,88,88,89,88,89,88,88,89,88,89,88,88,88,88,89,88,0,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,100,100,0,0,0,0,100,100,100,100,92,100,102,101,92,100,102,101,102,92,92,100,92,101,92,100,102,101,92,100,102,101,92,92,92,92,92,100,102,101,92,92,92,100,100,102,92,100,100,102,102,101,92,100,102,101,92,100,102,101,100,101,100,92,102,92,102,92,102,92,101,100,102,100,92,100,102,101,92,100,102,101,101,101,101,92,100,102,101,92,100,102,101,0,0,96,96,96,96,96,113,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,113,113,96,96,96,113,96,96,96,96,96,96,96,96,96,0,0,0,0,126,126,126,126,127,126,126,126,0,126,126,126,126,127,128,129,126,127,126,126,126,126,126,126,0,121,121,0,121,121,121,121,37,37,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,107,107,107,107,107,107,107,107,107,107,107,0,0,0,0,0,0,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,0,107,107,0,107,107,0,107,132,132,39,132,135,136,39,132,132,132,132,132,132,136,132,0,39,132,39,132,39,132,39,132,132,135,132,136,136,234,135,234,132,132,132,132,132,24,0,0,0,288,149,288,24,289,139,0,0,0,0,0,288,24,0,288,149,0,139,288,290,290,290,290,290,290,291,139,24,139,24,292,290,139,24,139,24,0,293,293,0,293,139,24,291,24,139,24,139,24,289,139,24,293,293,293,24,294,139,139,288,293,288,293,139,24,139,24,139,24,24,149,139,24,295,295,295,0,0,0,0,0,0,0,0,155,114,156,0,0,114,0,0,114,114,155,0,114,0,0,155,154,296,296,114,156,296,154,296,114,155,152,153,156,154,296,114,155,152,153,156,154,297,296,297,296,296,297,296,152,153,154,152,153,154,114,155,153,152,153,154,153,296,114,155,152,153,156,154,296,114,155,152,153,156,154,296,296,296,114,155,152,153,156,154,296,297,0,114,114,155,152,153,156,156,154,296,114,114,155,152,153,156,154,153,297,296,297,296,297,296,297,296,297,296,297,296,297,296,296,296,114,155,152,153,156,154,296,296,114,155,152,153,156,154,114,155,152,153,154,296,297,296,296,114,155,154,296,297,296,297,296,297,296,297,296,114,0,296,297,296,152,153,154,114,156,154,297,296,297,296,153,152,153,154,296,114,155,152,153,156,154,152,153,154,296,114,155,152,153,156,154,152,296,114,155,152,153,156,154,0,297,296,296,114,155,152,153,156,154,298,299,300,298,299,300,298,0,0,0,161,163,162,161,163,162,161,162,161,162,161,162,162,162,161,161,163,162,161,163,162,161,163,162,161,162,161,163,162,161,163,162,161,163,162,161,162,161,163,162,162,163,162,161,163,162,161,163,162,161,162,163,162,161,163,162,161,0,0,0,0,0,0,0,0,0,0,0,166,168,164,159,164,165,166,167,168,159,169,160,164,165,166,167,168,159,169,160,164,165,166,167,168,159,169,160,164,165,166,167,168,159,169,160,160,164,165,166,167,168,159,169,160,167,169,164,165,166,167,168,159,169,160,164,165,166,167,168,159,169,160,164,165,166,167,168,159,169,160,164,165,166,167,168,159,169,160,164,165,166,167,168,159,169,160,164,165,166,167,168,159,169,160,164,165,166,167,168,159,169,160,164,165,166,167,168,159,169,160,165,164,164,165,166,167,168,159,169,160,164,165,166,167,168,159,169,160,164,165,166,167,168,159,169,160,164,165,166,167,168,159,169,160,164,165,166,167,168,159,169,160,164,165,166,167,168,159,169,160,164,165,166,167,168,159,169,160,0,116,116,116,0,0,0,0,116,116,116,116,0,0,0,177,116,177,301,302,301,302,301,302,177,116,302,171,172,177,174,173,116,302,171,172,177,174,173,116,171,172,173,171,172,173,174,116,301,302,172,172,171,172,173,301,302,302,171,172,177,174,173,116,302,171,172,177,174,173,116,302,302,302,171,172,177,174,173,116,301,302,171,172,171,171,172,172,301,302,171,172,177,177,174,173,116,116,302,171,172,177,174,173,116,116,116,116,172,301,302,302,302,171,172,177,174,173,116,302,302,171,172,177,174,173,116,116,171,172,174,173,172,302,174,116,173,301,302,171,301,302,116,302,171,172,173,177,116,301,302,171,172,173,302,171,172,177,174,173,116,171,172,173,302,171,172,177,174,173,116,302,171,172,177,174,173,116,0,172,302,171,172,177,174,173,116,301,302,179,0,0,179,179,180,179,180,179,180,179,180,179,180,179,180,179,180,179,180,179,180,179,180,179,180,179,180,180,180,180,179,180,179,180,179,180,179,180,179,180,179,180,0,0,0,124,124,184,184,0,0,124,0,0,124,124,124,0,0,184,184,184,124,303,124,181,182,184,183,303,124,181,182,184,183,303,181,182,183,181,182,183,124,184,181,182,183,304,303,304,303,303,124,181,182,184,183,303,124,181,182,184,183,182,182,182,182,303,303,303,303,124,181,182,184,183,303,124,124,181,182,184,183,303,124,124,124,181,182,184,183,182,303,303,124,181,182,184,183,303,303,124,181,182,184,183,124,181,182,184,183,303,124,184,183,303,124,0,181,303,181,181,182,183,124,181,182,183,303,124,181,182,184,183,181,182,183,303,124,181,182,184,183,181,181,181,181,303,124,181,182,184,183,0,304,303,303,124,181,182,184,183,304,303,305,306,307,308,309,305,306,307,309,305,306,307,309,308,305,306,307,309,309,308,305,306,307,309,308,0,0,0,0,0,0,0,187,187,187,187,187,187,187,187,0,0,0,0,0,187,187,0,0,0,0,187,187,187,187,187,187,0,0,0,0,0,0,0,0,0,189,0,0,0,0,0,189,0,0,0,0,189,189,0,0,0,196,197,202,203,191,192,193,190,202,203,204,201,191,192,193,194,189,195,190,196,197,198,199,200,201,185,186,188,202,203,204,205,206,191,192,193,194,189,195,190,196,197,198,199,200,201,185,186,188,202,203,204,205,206,191,192,193,194,189,195,190,196,197,198,199,200,201,185,186,188,202,203,204,205,206,191,192,193,194,189,195,190,196,197,198,199,200,201,185,186,188,202,203,204,205,206,206,191,192,193,194,189,195,190,196,197,198,199,200,201,185,186,188,202,203,204,205,206,191,192,193,194,189,195,190,196,197,198,199,200,201,185,186,188,202,203,204,205,206,191,192,193,194,189,195,190,196,197,198,199,200,201,185,186,188,202,203,204,205,206,191,192,193,194,189,195,190,196,197,198,199,200,201,185,186,188,202,203,204,205,206,190,188,206,206,206,190,191,192,193,194,189,195,190,196,197,198,199,200,201,185,186,188,202,203,204,205,206,191,192,193,194,189,195,190,196,197,198,199,200,201,185,186,188,202,203,204,205,206,206,194,198,199,188,203,204,205,195,191,192,193,194,189,195,190,196,197,198,199,200,201,185,186,188,202,203,204,205,206,191,192,193,194,189,195,190,196,197,198,199,200,201,185,186,188,202,203,204,205,206,191,192,193,194,189,195,190,196,197,198,199,200,201,185,186,188,202,203,204,205,206,189,195,206,202,203,204,205,193,194,190,185,204,205,194,190,185,186,188,205,191,192,193,198,200,186,202,204,205,191,192,193,194,189,195,190,196,197,198,199,200,201,185,186,188,202,203,204,205,206,191,192,193,194,195,190,196,197,198,199,200,201,185,186,188,202,203,204,205,206,191,192,193,194,189,195,190,196,197,198,199,200,201,185,186,188,202,203,204,205,206,191,192,193,194,189,195,190,196,197,198,199,200,201,185,186,188,202,203,204,205,206,191,192,193,194,189,195,190,196,197,198,199,200,201,185,186,188,202,203,204,205,206,191,192,193,194,189,195,190,196,197,198,199,200,201,185,186,188,202,203,204,205,206,191,192,193,194,189,195,190,196,197,198,199,200,201,185,186,188,202,203,204,205,206,310,0,18,18,0,311,310,310,0,310,310,0,0,18,18,18,18,0,18,18,214,0,18,18,18,18,215,18,215,18,18,0,310,0,18,18,18,0,18,18,18,18,18,0,0,18,18,18,0,312,312,312,18,213,215,208,208,312,312,312,18,213,214,208,209,215,210,211,212,312,18,213,214,208,209,215,210,211,212,208,208,209,210,211,212,208,209,210,211,212,18,213,214,208,209,210,211,212,312,18,213,214,208,209,215,210,211,212,312,18,213,214,208,209,215,210,211,212,312,312,18,213,214,208,209,215,210,211,212,210,209,312,214,214,214,311,312,212,18,18,213,213,214,208,209,215,215,210,211,212,312,18,18,18,213,214,208,209,215,210,211,212,210,311,312,312,312,18,213,214,208,209,215,210,211,212,312,312,18,213,214,208,209,215,210,211,212,18,214,208,209,210,211,212,312,213,312,311,312,210,212,210,210,210,311,312,210,212,209,312,18,213,214,18,211,312,311,312,311,312,311,312,311,312,18,0,208,312,311,312,311,312,209,208,209,210,211,212,18,213,215,208,209,210,211,212,312,18,213,213,214,208,209,215,210,211,212,208,209,210,211,212,312,18,213,214,208,209,215,210,211,212,208,312,18,213,214,208,209,215,210,211,212,0,311,312,311,312,311,312,311,312,210,312,18,213,214,208,209,215,210,211,212,313,0,0,0,0,220,0,0,0,0,220,0,0,0,0,220,0,0,144,217,219,220,147,145,221,222,223,144,217,219,220,147,145,221,222,223,217,144,217,219,220,147,145,221,222,223,144,217,219,220,147,145,221,222,223,144,219,222,223,144,217,219,220,147,145,221,222,223,144,217,219,220,147,145,221,222,223,144,217,219,220,147,145,221,222,223,219,144,217,219,220,147,145,221,222,223,144,217,219,220,147,145,221,222,223,144,217,219,220,147,145,221,222,223,144,217,219,220,147,145,221,222,223,144,217,219,220,147,145,221,222,223,147,145,221,147,145,217,219,223,221,221,144,217,219,220,147,145,221,222,223,144,219,222,223,144,217,219,220,147,145,221,222,223,144,217,219,220,147,145,221,222,223,144,217,219,220,147,145,221,222,223,217,222,144,217,219,220,147,145,221,222,223,145,144,144,217,219,220,147,145,221,222,223,0,0,0,117,226,226,0,0,0,117,226,314,117,224,226,225,314,117,224,226,225,224,225,224,225,117,224,225,314,117,224,226,225,314,117,224,226,225,314,314,117,224,226,225,314,117,117,224,226,226,225,314,117,224,226,226,225,314,117,224,226,225,314,314,117,224,226,225,117,224,225,314,117,225,224,224,224,226,0,224,225,117,226,224,225,314,117,224,226,225,224,225,314,117,224,226,225,314,117,224,226,225,0,224,314,117,224,226,225,0,0,230,230,0,0,0,0,227,228,227,228,229,227,230,231,228,229,227,230,231,228,229,230,231,228,229,230,231,228,229,230,231,228,229,227,230,231,228,229,227,230,231,228,229,227,230,231,230,230,230,228,229,227,227,230,231,231,229,230,228,229,227,230,231,230,228,229,227,230,231,228,229,227,230,231,228,229,230,231,231,229,228,229,230,231,227,228,229,230,231,228,229,227,230,231,228,229,230,231,228,229,227,230,231,228,229,227,230,231,228,229,230,228,229,227,230,231,32,32,32,0,32,32,32,32,32,32,32,32,32,32,32,32,0,122,0,122,122,122,122,122,122,122,235,122,122,122,122,122,122,122,122,122,122,122,122,0,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,64,244,0,0,64,0,0,64,244,64,0,0,0,0,236,236,244,315,237,64,239,240,241,236,244,315,237,64,239,240,241,64,239,240,241,64,239,240,241,236,315,240,64,239,241,236,244,315,237,64,239,240,241,236,244,315,237,64,239,240,241,236,244,315,237,64,239,240,241,236,236,236,236,236,236,236,315,315,236,64,64,64,64,64,239,240,241,236,244,244,244,315,237,64,239,240,240,241,237,237,236,240,236,240,236,244,315,237,64,239,240,241,240,241,236,244,315,237,64,239,240,241,239,239,239,239,239,239,239,236,236,239,241,241,236,237,236,236,241,236,315,237,240,315,236,237,236,236,236,236,64,239,240,241,64,236,244,315,237,64,239,240,241,236,244,315,237,64,239,240,241,241,239,239,239,239,239,236,244,315,237,64,239,240,241,236,244,315,237,64,239,240,241,315,315,241,241,241,315,315,315,241,0,0,0,248,0,0,0,0,0,0,0,108,108,252,249,251,253,255,108,252,249,251,253,255,108,108,108,108,108,248,249,251,0,108,252,249,251,253,255,108,108,252,249,251,253,255,108,108,252,249,251,253,255,108,108,108,108,108,108,108,252,249,251,253,255,108,108,243,252,249,251,253,255,248,249,251,252,249,251,253,255,108,243,252,249,251,253,255,252,249,251,253,255,108,108,243,252,249,251,253,255,252,249,251,253,255,108,248,249,251,243,252,249,251,253,243,252,249,251,253,255,248,249,251,108,108,252,249,251,253,255,108,108,252,249,251,253,255,108,252,249,251,253,255,108,252,249,251,253,255,108,108,0,258,258,258,0,0,258,259,258,259,258,259,258,259,258,259,258,258,258,259,258,259,259,258,259,259,258,259,259,259,259,258,259,258,259,258,259,258,259,258,259,0,0,0,0,261,264,261,262,264,261,262,0,262,261,261,261,264,261,262,264,261,262,264,261,262,261,262,264,261,262,262,0,264,261,262,264,261,262,261,261,261,261,264,261,262,264,261,262,264,261,262,263,264,264,261,262,0,0,0,107,107,107,107,107,107,107,107,107,107,107,0,0,0,107,107,107,107,0,107,107,107,107,107,107,107,107,107,107,107,107,107,0,107,107,0,107,107,0,107,107,29,265,29,265,107,29,265,135,136,234,266,107,29,265,135,136,234,266,266,29,265,135,136,266,29,265,135,136,234,266,29,265,135,136,234,266,29,29,265,135,136,234,266,107,29,265,135,136,234,266,107,29,265,135,136,234,266,107,29,265,135,136,234,266,29,265,29,265,29,136,29,29,136,136,136,107,107,29,29,29,136,234,107,107,107,107,29,29,29,29,265,135,136,234,266,135,29,135,266,266,266,266,29,107,29,265,135,136,234,266,135,107,29,265,135,136,234,266,29,265,135,136,234,136,29,135,136,266,29,136,234,107,135,234,29,265,135,136,234,266,107,29,29,265,135,136,234,107,29,265,135,136,234,266,29,265,135,136,234,107,29,265,135,136,234,266,107,29,265,135,136,234,266,136,234,107,29,265,135,136,234,266,29,265,29,265,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,316,275,274,272,273,316,275,274,272,273,272,272,273,273,274,274,274,274,273,316,275,274,272,273,316,275,274,272,273,316,275,274,272,273,0,274,273,273,316,275,274,272,273,275,274,274,316,275,274,272,273,316,275,274,272,273,274,272,272,274,274,272,273,0,316,275,274,272,273,316,275,274,272,273,316,275,274,272,273,316,275,274,272,273,274,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,271,0,278,150,271,0,271,278,150,150,271,278,150,271,278,150,150,271,150,271,150,150,150,271,278,150,271,278,150,271,278,150,150,150,271,150,271,271,150,150,271,278,278,150,150,150,271,278,150,150,150,150,150,150,150,150,150,150,150,271,278,150,271,278,150,150,271,150,150,150,271,150,271,150,278,150,150,271,278,150,150,271,150,271,278,150,271,278,150,271,278,150,150,0,0,0,279,280,279,280,279,280,279,280,279,280,279,280,279,280,279,280,279,280,279,279,280,279,280,279,280,279,280,279,280,279,280,279,279,280,279,280,279,280,279,280,279,280,279,280,279,280,0,0,0,176,143,176,143,176,143,176,143,207,143,176,143,176,143,176,143,143,176,143,176,143,176,207,176,143,176,143,176,207,176,176,207,176,143,176,143,176,176,143,176,143,176,143,0,0,0,157,157,281,151,281,157,157,157,281,151,157,281,151,157,157,151,157,151,157,151,157,151,151,157,281,151,157,281,151,157,281,151,157,157,157,151,157,157,151,151,157,157,281,281,151,151,157,281,151,157,157,157,281,151,157,281,151,157,151,157,157,151,157,151,157,151,157,281,151,157,151,157,157,281,151,157,151,157,281,151,157,281,151,157,281,151,157,317,282,0,0,0,0,0,0,0,20,0,282,21,0,283,0,216,284,284,283,21,20,0,284,283,0,0,21,216,0,282,283,286,285,216,99,283,14,216,284,138,99,20,14,137,285,282,283,286,21,216,284,138,99,20,14,137,285,282,283,286,21,99,283,284,138,99,20,14,137,285,282,283,286,21,284,138,99,20,14,137,285,282,283,286,21,285,20,14,137,285,21,216,284,138,99,20,14,137,285,282,283,286,21,216,284,138,99,20,14,137,285,282,283,286,21,216,284,138,99,20,14,137,285,282,283,286,21,20,20,20,137,216,216,284,138,99,20,14,137,285,282,283,286,21,14,216,284,138,99,20,14,137,285,282,283,286,21,21,285,285,216,284,138,99,20,14,137,285,282,283,286,21,216,284,138,99,20,14,137,285,282,283,286,21,21,284,138,99,20,14,137,285,282,283,286,21,21,14,286,286,286,137,137,14,137,284,138,99,20,14,137,285,282,283,286,21,216,20,14,137,285,216,284,138,99,20,14,137,285,282,283,286,21,284,138,99,20,14,137,285,282,283,286,21,216,284,138,99,20,14,137,285,282,283,286,21,216,284,138,99,20,14,137,285,282,283,286,21,21,99,138,99,216,284,138,99,20,14,137,285,282,283,286,21,282,318,318,318],"f":"```````{ce{}{}}0``{bb}{{ce}d{}{}}````{{}b}{fc{}}0`{fd}{{bb}h}{{ce}h{}{}}0``{{bj}{{n{dl}}}}{cc{}}{A`b}`{{bc}dAb}`{{}f}<{bAd}7``````{{AfAfAf}b}`````````>{{}{{n{bAh}}}}{c{{n{e}}}{}{}}{Ad{{n{bAh}}}}1{cAj{}}``{ce{}{}}```00{{cAlf}{{n{{Bb{{B`{AlAn}}}}Bd}}}Bf}{{cAlfh}{{n{{Bb{{B`{AlAn}}}}Bd}}}Bf}{{cBhBj{B`{BlBn}}}{{n{C`Bd}}}Bf}{fc{}}0{fd}{{cAl{B`{BlBn}}}{{n{AlBd}}}Bf}{{cC`An}BjBf}{{cC`Anh}BjBf}{{cBjCbCdf}AdBf}{{Anj}Cf}{cc{}}{ChCj}{{}f}={c{{n{e}}}{}{}}0?>`````>>{{}Cl};;:42`?``11{cAj{}}{ce{}{}}```00{{{Bf{}{{Cn{c}}}}}{{Bf{}{{Cn{c}}}}}D`}{{{Db{c}}}{{Db{c}}}D`}{{{Bf{}{{Cn{c}}}}}DdD`}{{{Db{c}}}DdD`}{fc{}}0{fd}{{{Bf{}{{Cn{c}}}}}ChD`}{{{Db{c}}}ChD`}>{{{Bf{}{{Cn{c}}}}Df}DhD`}{{{Db{c}}Df}DhD`}{{{Bf{}{{Cn{c}}}}}DjD`}{{{Db{c}}}DjD`}{{{Bf{}{{Cn{c}}}}}DlD`}{{{Db{c}}}DlD`}{{}f}?{{{Bf{}{{Cn{c}}}}Df}hD`}{{{Bf{}{{Cn{c}}}}}hD`}{{{Bf{}{{Cn{c}}}}}{{Bb{Dn}}}D`}{{{Db{c}}}{{Bb{Dn}}}D`}{{{Bf{}{{Cn{c}}}}Df}{{Bb{e}}}D`E`}{{{Bf{}{{Cn{c}}}}}EbD`}{{{Db{c}}}EbD`}{{Dl{Bb{{Ed{Dn}}}}EfEhDdDjChEb}{{Db{c}}}D`}{{{Bf{}{{Cn{c}}}}}EfD`}{{{Db{c}}}EfD`}{{{Bf{}{{Cn{c}}}}}EjD`}{{{Bf{}{{Cn{c}}}}}EhD`}{{{Db{c}}}EhD`};{c{{n{e}}}{}{}}0{cAj{}}{ce{}{}}```````````{cEl{}}{{EnF`}{{n{{B`{{Fd{Fb}}{Fd{Ff}}}}Fh}}}}222222{FjFj}{EnEn}{{ce}d{}{}}0{{}En}{fc{}}00000{fd}00{{Fhj}Cf}0{{Fjj}Cf}{{Enj}Cf}{cc{}}00{{}f}00==={FjAd}{EnAd}```??{cFl{}}{{}{{n{EnAh}}}}{c{{n{e}}}{}{}}00{Ad{{n{FjAh}}}}{Ad{{n{EnAh}}}}222{cAj{}}00{En{{n{dFh}}}}{ce{}{}}00```{Fnd}0{{FnG`}d}{cGb{}}3333{fc{}}000{fd}0{{Gd{Gh{Gf}}}d}{{Fnc{Gh{Gf}}}{{n{GdBd}}}{BfGj}}{cc{}}0{{cf}Gl{}}{{cGlGl}Gl{}}{{cf}Gn{}}{{cGn}Gn{}}{{cGnGn}Gn{}}2{{}f}0>>{{}Fn}{H`Fn}{GdEb}{GdA`}{{Gd{Gh{Gf}}}{{n{dHb}}}}{c{{n{e}}}{}{}}000{cAj{}}0{ce{}{}}0``````````````````````````````{Fb{{Gh{Gf}}}}{cEl{}}{HdGf}2{Ff{{Gh{Gf}}}}{cf{}}05555555555{c{{n{{Fd{Hf}}}}}{}}0{HdHd}{FbFb}{FfFf}{{ce}d{}{}}00{{HdHd}Hh}`{{}Ff}{fc{}}000000000{fd}0000`{ce{}{{Hl{Hj}}}}000{{HdHd}h}{{FbFb}h}{{FfFf}h}{{ce}h{}{}}00000{{Hdj}Cf}{{Fbj}Cf}{{Hnj}Cf}0{{Ffj}Cf}{cc{}}000{{{Fd{Gf}}}Ff}1{{Hd{Gh{Gf}}}{{n{I`Hn}}}}{{Hd{Gh{Gf}}}{{n{FbHn}}}}{{Hdc}dAb}{{}f}0000{ce{}{}}0000{HdAd}{FbAd}{FfAd}{Hdh}00008{{HdDf}I`}{{HdHd}{{Bb{Hh}}}}{I`Fb}```{{I`{Gh{Gf}}{Gh{Gf}}}{{n{FfHn}}}}{{I`Hd{Gh{Gf}}{Gh{Gf}}}{{n{FfHn}}}}{{I`{Gh{Gf}}}{{n{FfHn}}}}`{I`{{Fd{Gf}}}};;;{cFl{}}{{}{{n{FfAh}}}}{c{{n{e}}}{}{}}0{Gf{{n{Hdc}}}{}}111{Ad{{n{HdAh}}}}{Ad{{n{FbAh}}}}{Ad{{n{FfAh}}}}44444{cAj{}}0000{{Fb{Gh{Gf}}{Gh{Gf}}Ff}{{n{dHn}}}}{{{Gh{Gf}}{Gh{Gf}}{Gh{Fb}}{Gh{Ff}}}{{n{dHn}}}}{{FbHd{Gh{Gf}}{Gh{Gf}}Ff}{{n{dHn}}}}{{Fb{Gh{Gf}}Ff}{{n{dHn}}}}{ce{}{}}0000{{ce}{{n{d}}}{}Ib}0{{{Gh{Gf}}}{{Fd{Gf}}}}{{EjDf}d}``{Id{{Gh{Gf}}}}4444{IdId}{{ce}d{}{}}{fc{}}000{fd}0{{IdId}h}{{ce}h{}{}}0{{Idj}Cf}{cc{}}0{IfId}{DfId}1{{{Gh{Gf}}}{{n{IdHn}}}}{{}f}0{ce{}{}}0{IdAd}{{Ihc}{{n{FfHn}}}{{In{}{{Ij{Il}}}}}}2{c{{n{e}}}{}{}}0{Ad{{n{IdAh}}}}11{cAj{}}0{{Id{Gh{Gf}}{Gh{Gf}}Ff}{{n{dHn}}}}{{IdcFf}{{n{dHn}}}{{In{}{{Ij{Il}}}}}}{{Id{Gh{Gf}}Ff}{{n{dHn}}}}88``{J`{{Gh{Gf}}}}9999{J`J`}{{ce}d{}{}}{fc{}}000{fd}0{{J`J`}h}{{ce}h{}{}}0{{J`j}Cf}{cc{}}0{DfJ`}{{{Gh{Gf}}}{{n{J`Hn}}}}{{}f}0{ce{}{}}0{J`Ad}{{Jbc}{{n{FfHn}}}{In{Jf{}{{Ij{Jd}}}}}}{J`{{Fd{Gf}}}}30{c{{n{e}}}{}{}}0{Ad{{n{J`Ah}}}}11{cAj{}}0{{J`{Gh{Gf}}{Gh{Gf}}Ff}{{n{dHn}}}}{{J`cFf}{{n{dHn}}}{In{Jf{}{{Ij{Jd}}}}}}{{J`{Gh{Gf}}Ff}{{n{dHn}}}}99``{Jh{{Gh{Gf}}}}::::{JhJh}{{ce}d{}{}}{fc{}}000{fd}0{{JhJh}h}{{ce}h{}{}}0{{Jhj}Cf}{cc{}}0{DfJh}{{{Gh{Gf}}}{{n{JhHn}}}}{{}f}0{ce{}{}}0{JhAd}{{Jjc}{{n{FfHn}}}{In{Jf{}{{Ij{Jd}}}}JlJn}}2{c{{n{e}}}{}{}}0{Ad{{n{JhAh}}}}11{cAj{}}0{{Jh{Gh{Gf}}{Gh{Gf}}Ff}{{n{dHn}}}}{{JhcFf}{{n{dHn}}}{In{Jf{}{{Ij{Jd}}}}}}{{Jh{Gh{Gf}}Ff}{{n{dHn}}}}88``{K`{{Gh{Gf}}}}9999{K`K`}{{ce}d{}{}}{fc{}}000{fd}0{{K`K`}h}{{ce}h{}{}}0{{K`j}Cf}{cc{}}{DfK`}1{{{Gh{Gf}}}{{n{K`Hn}}}}{{}f}0{ce{}{}}0{K`Ad}{{Kbc}{{n{FfHn}}}{In{Jf{}{{Ij{Kd}}}}JlJn}}2{c{{n{e}}}{}{}}0{Ad{{n{K`Ah}}}}11{cAj{}}0{{K`{Gh{Gf}}{Gh{Gf}}Ff}{{n{dHn}}}}{{K`cFf}{{n{dHn}}}{In{Jf{}{{Ij{Kd}}}}}}{{K`{Gh{Gf}}Ff}{{n{dHn}}}}88`{Kf{{Gh{Gf}}}}99{KfKf}{{ce}d{}{}}{fc{}}0{fd}{{KfKf}h}{{ce}h{}{}}0{{Kfj}Cf}{DfKf}{cc{}}{{{Gh{Gf}}}{{n{KfHn}}}}{{}f}{ce{}{}}{KfAd}1{c{{n{e}}}{}{}}{Ad{{n{KfAh}}}}1{cAj{}}{{Kf{Gh{Gf}}{Gh{Gf}}Ff}{{n{dHn}}}}5`````````{cEl{}}66666666`{{{Kh{c}}KjKl}{{n{{Fd{Kn}}L`}}}{D`LbLd}}{{cEbLf}{{n{KnLh}}}Bf}{LhEb}{{c{Gh{Gf}}}{{n{LfBd}}}Bf}{{}Lj}{fc{}}0000000{{cDf{Fd{Gf}}}{{n{{Fd{Gf}}L`}}}Bf}{{cEbLff}{{n{LlLh}}}Bf}{{cAlLj}{{B`{C`An}}}Bf}{{cLfLj}{{n{LlLh}}}Bf}{fd}000{{{Kh{c}}KjKl{Gh{Ln}}}{{n{M`L`}}}{D`LbLd}}{{cEbG`Lff}{{n{MbLh}}}Bf}{{cLfLj}{{n{{B`{BjMd}}Lh}}}Bf}{{Lhj}Cf}0{{Llj}Cf}{cc{}}{MfLh}11{C`Ll}2{{}f}000{ce{}{}}000{Lh{{n{LhLh}}}}`{LhDf}{{{Mj{Mh}}Lf}{{n{dL`}}}}`{{{Kh{c}}KjDf{Fd{Gf}}}{{n{{Fd{Gf}}L`}}}{D`LbLd}}`=`{{{Kh{c}}{Mn{Ml}}}d{D`LbLd}}`{Lh{{Bb{N`}}}}`{cFl{}}{c{{n{e}}}{}{}}0000000```{cAj{}}0009999``{cEl{}}::{L`L`}{{ce}d{}{}}{NbEb}`{{}L`}{fc{}}0{fd}{{L`j}{{n{dl}}}}0{NdL`}{NfL`}{NhL`}{BdL`}{NjL`}{NlL`}{NnL`}{O`L`}{ObL`}{OdL`}{cc{}}{OfL`}{OhL`}{LhL`}{OjL`}{{}f}{ce{}{}}{Nb{{n{LhNb}}}}{NbC`}{L`Ad}``{NbDf}{{DfEbDf}L`}5{cFl{}}{{}{{n{L`Ah}}}}{c{{n{e}}}{}{}}{Ad{{n{L`Ah}}}}1{cAj{}}:````::{OlOl}{{ce}d{}{}}{OnEb}{fc{}}0{fd}{{DfEbAd}Ol}{{Olj}Cf}{cc{}}{{}f}{ce{}{}}{OnOl}{A`Md}{AbMd}`{{}Df}4{c{{n{e}}}{}{}}0?`5````{cEl{}}66{ObEb}{{DjA`Ad}{{n{{Fd{Af}}Ob}}}}{{DjA`}{{n{DdOb}}}}??>{{Obj}Cf}0<;:{Ob{{n{LhOb}}}}{ObDf}{cFl{}}88{cAj{}}>``````````````````````````````````````````>>{Dn{{Ed{Dn}}}}{Ah{{Ed{Dn}}}}``{Dnd}{Ahd}{AhAh}{{ce}d{}{}}{fc{}}0{fd}`{cc{}}{cCj{{Al{}{{Aj{{Gh{Gf}}}}}}}}{{DnCjCh}{{n{AnMf}}}}{{AhCjCh}{{n{AnMf}}}}{{DnCj}{{n{AnMf}}}}{{AhCj}{{n{AnMf}}}}{{DnCjCh}{{n{AA`Mf}}}}{{AhCjCh}{{n{AA`Mf}}}}{{DnCj}{{n{AA`Mf}}}}{{AhCj}{{n{AA`Mf}}}}{{}f}`{ce{}{}}`````0{c{{n{e}}}{}{}}0{cAj{}}2```````````````````````{{cAAbC`}dBf}{{cC`}{{n{C`Bd}}}Bf}{{c{Gh{Gf}}}{{n{dBd}}}Bf}{{cAAd}{{n{dBd}}}Bf}{{cLf}{{n{dBd}}}Bf}{{cAl}{{n{dBd}}}Bf}{cdBf}9999{c{{n{dBd}}}Bf}{{cDf{Gh{Gf}}}{{n{{Bb{Lf}}Bd}}}Bf}{fc{}}000{{cAdk}{{AAf{AdC`}}}BfE`AAhNb{{AAl{ce}{{AAj{{n{gi}}}}}}}}{{cDfAd}{{AAf{AdC`}}}Bf}{{cDfAAn}{{AAf{AAnd}}}Bf}{{cAdk}{{AAf{Ad{n{AdL`}}}}}BfE`AAhNb{{AAl{ce}{{AAj{{n{gi}}}}}}}}{{cDfAd}{{AAf{Ad{n{AdL`}}}}}Bf}{fd}09{{C`j}Cf}{cc{}}0{{}f}0{{cAB`e}hBf{}}{ce{}{}}0{Dfh}00{C`h}{c{{ABd{FlABb}}}Bf}{{{AAf{ce}}g}{{n{eg}}}{}{}{}}{{{AAf{ce}}i}{{n{eg}}}{}{}{}{{AAl{}{{AAj{g}}}}}}{{}c{}}{{{Mj{Mh}}DfAdAAb}{{AAf{Ad{n{dL`}}}}}}{cd{}}{{}{{Fd{ABf}}}}{c{{n{e}}}{}{}}000{cAj{}}0{C`Ad}{{{ABj{}{{ABh{c}}}}}{{n{dc}}}{}}==````````````````````````````{{cAAbC`}dBf}{{cC`}{{n{C`Bd}}}Bf}{cEl{}}0{{cLf}{{n{dBd}}}Bf}`{ce{}{}}0000000000000{{ABlABn}{{n{dNd}}}}0{{ABlABn}{{n{dBd}}}}0{c{{n{dBd}}}Bf}{{cAAb}{{n{ABlBd}}}Bf}0{AC`AC`}{ACbACb}{ACdACd}{{ce}d{}{}}00{NdEb}{ACfEb}`{{}AC`}{{}ACb}{{}ACd}`{fc{}}0000000000000{{cDfAd}{{AAf{AdC`}}}Bf}{{cDfAd}{{AAf{Ad{n{AdL`}}}}}Bf}{fd}000000{cdBf}{{ABlABn}{{n{dNd}}}}`{{Ndj}Cf}0{{ACfj}Cf}{{AC`j}Cf}{{ACbj}Cf}{{AChj}Cf}0{{ACdj}Cf}{cc{}}0{BdNd}11111`{ACj{{n{{Fd{ABl}}Nd}}}}0{{ABlACj}{{n{AClNd}}}}0{ABl{{n{ACnNd}}}}0{ACj{{n{AD`Nd}}}}0{ABl{{n{A`Nd}}}}0{{}{{n{{ABd{ACjACl}}Nd}}}}0{ABld}0{ACdd}{{}f}000000{{cAB`e}hBf{}}{ce{}{}}000000{Nd{{n{LhNd}}}}{ACfAd}{AC`Ad}{ACbAd}{ACdAd}{Dfh}{{ABlABn}{{n{dNd}}}}0{c{{ABd{FlABb}}}Bf}{NdDf}{{}Df}`{{{Mj{Mh}}DfAdAAb}{{AAf{Ad{n{dL`}}}}}}{{ABlABn}d}0{{ABlA`}d}0{hd}0{ABnd}0{Nd{{Bb{N`}}}}`{{}{{Fd{ABf}}}}{{}h}0{ce{}{}}00{cFl{}}0`{{ABlABlABn}{{n{dNd}}}}000`{{}{{n{AC`Ah}}}}{{}{{n{ACbAh}}}}{{}{{n{ACdAh}}}}{c{{n{e}}}{}{}}000000{Ad{{n{AC`Ah}}}}{Ad{{n{ACbAh}}}}{Ad{{n{ACdAh}}}}3333333`{cAj{}}000000`{{cAAb}{{n{dBd}}}Bf}0;;;;;;;``````````{ADbACl}<<<<<<{ADdADd}{ADbADb}{{ce}d{}{}}0{ADd{{ABd{ACjACl}}}}{ADdADf}{{}ADd}{{}ADb}{ADbACj}{fc{}}00000{fd}00{{ADdj}Cf}{{ADbj}Cf}{cc{}}00{{}f}00{ce{}{}}009{ADbABl}`{{ADdABlABn}d}{{ADdACl}d}`33{c{{n{e}}}{}{}}00000{ADd{{Bb{ADb}}}}{cAj{}}00666```````````````6666666666666666{ADhADh}{ADjADj}{ADlADl}{ADnADn}{AE`AE`}{ACnACn}{AEbAEb}{AD`AD`}{{ce}d{}{}}0000000`{{}ADh}{{}ADj}{{}ADl}{{}ADn}{{}AE`}{{}ACn}{{}AEb}{{}AD`}``{fc{}}000000000000000{fd}0000000{{ADhj}Cf}{{ADjj}Cf}{{ADlj}Cf}{{ADnj}Cf}{{AE`j}Cf}{{ACnj}Cf}{{AEbj}Cf}{{AD`j}Cf}{cc{}}0000000{{}f}0000000{ce{}{}}0000000{ADhAd}{ADjAd}{ADlAd}{ADnAd}{AE`Ad}{ACnAd}{AEbAd}{AD`Ad}``88888888{{}{{n{ADhAh}}}}{{}{{n{ADjAh}}}}{{}{{n{ADlAh}}}}{{}{{n{ADnAh}}}}{{}{{n{AE`Ah}}}}{{}{{n{ACnAh}}}}{{}{{n{AEbAh}}}}{{}{{n{AD`Ah}}}}{c{{n{e}}}{}{}}0000000{Ad{{n{ADhAh}}}}{Ad{{n{ADjAh}}}}{Ad{{n{ADlAh}}}}{Ad{{n{ADnAh}}}}{Ad{{n{AE`Ah}}}}{Ad{{n{ACnAh}}}}{Ad{{n{AEbAh}}}}{Ad{{n{AD`Ah}}}}88888888{cAj{}}0000000{ce{}{}}0000000``````````````````{{cABl}{{n{AEdNh}}}Bf}0{{cACl}{{n{AClNh}}}Bf}000{cEl{}}033333333333333{AEfAEf}{AEhAEh}{AEjAEj}{{ce}d{}{}}00{AElEb}{NhEb}{{}{{n{ACjNh}}}}0``{{}AEf}{{}AEh}{{}AEj}{{cABlABl}{{n{AEnNh}}}Bf}0{fc{}}0000000000000{{cDfAd}{{AAf{AdC`}}}Bf}{{cDfAd}{{AAf{Ad{n{AdL`}}}}}Bf}{fd}000000{{}{{n{dNh}}}}0{{AEfAEf}h}{{AEhAEh}h}{{ce}h{}{}}000{{cABlABnAF`}{{n{dNh}}}Bf}0{{AEfj}Cf}{{AEhj}Cf}{{AFbj}Cf}0{{AElj}Cf}{{AEjj}Cf}{{Nhj}Cf}0{cc{}}00000{ObNh}{BdNh}{OjNh}3`{{cCh}{{n{A`Nh}}}Bf}0{AEjd}{{}f}000000{{cAB`e}hBf{}}{ce{}{}}000000{Nh{{n{LhNh}}}}{AEfAd}{AEhAd}{AElAd}{AEjAd}`{c{{ABd{FlABb}}}Bf}{{}Df}{NhDf}`{{cABlAClAF`}{{n{dNh}}}Bf}0`{{cEjA`}{{n{{Bb{AFd}}Nh}}}Bf}0{Nh{{Bb{N`}}}}{{}{{Fd{ABf}}}}<<<{cFl{}}0{{cABlABnAF`}{{n{dNh}}}Bf}0{{}{{n{AEfAh}}}}{{}{{n{AEhAh}}}}{{}{{n{AEjAh}}}}{c{{n{e}}}{}{}}000000{Ad{{n{AEfAh}}}}{Ad{{n{AEhAh}}}}{Ad{{n{AEjAh}}}}3333333{cAj{}}000000`{AEh{{n{dc}}}{}}{ce{}{}}000000::````0000{AFfAFf}{AFhAFh}{{ce}d{}{}}0{fc{}}000{fd}0{{AFfj}Cf}{{AFhj}Cf}{cc{}}0{{}f}099{AFfAd}{AFhAd}```;;{c{{n{e}}}{}{}}0{Ad{{n{AFfAh}}}}{Ad{{n{AFhAh}}}}22{cAj{}}0??````````````````````{cEl{}}{ce{}{}}00000000000{c{{n{dBd}}}Bf}{AFjAFj}{AFlAFl}{AFnAFn}{{ce}d{}{}}00{OhEb}{AG`Eb}{{}AFj}{{}AFl}{{}AFn}{{cABlA`ABlABnh}{{n{dOh}}}Bf}0{{cABlA`ABlABn}{{n{dOh}}}Bf}0{fc{}}00000000000````{{cDfAd}{{AAf{AdC`}}}Bf}{{cDfAAn}{{AAf{AAnd}}}Bf}{{cDfAd}{{AAf{Ad{n{AdL`}}}}}Bf}{fd}00000{cdBf}{{Ohj}Cf}0{{AFjj}Cf}{{AFlj}Cf}{{AG`j}Cf}{{AFnj}Cf}{cc{}}{NhOh}{BdOh}22222`{{}f}{AFnd}11111{{cAB`e}hBf{}}{ce{}{}}00000{Oh{{n{LhOh}}}}{AFjAd}{AFlAd}{AG`Ad}{AFnAd}{c{{ABd{FlABb}}}Bf}{OhDf}{{}Df}`{{{Mj{Mh}}DfAdAAb}{{AAf{Ad{n{dL`}}}}}}{Oh{{Bb{N`}}}}``{{}{{Fd{ABf}}}}`;;;{cFl{}}{{}{{n{AFjAh}}}}{{}{{n{AFlAh}}}}{{}{{n{AFnAh}}}}{c{{n{e}}}{}{}}00000{Ad{{n{AFjAh}}}}{Ad{{n{AFlAh}}}}{Ad{{n{AFnAh}}}}333333````{cAj{}}00000`{{cABlA`ABlAClh}{{n{dOh}}}Bf}0{ce{}{}}00000{{cABlA`ABlABn}{{n{dOh}}}Bf}0``````````````````````````````{{ABlABlACl}{{n{dOh}}}}{{ABlABlChAClA`}{{n{A`Oh}}}}33{fc{}}0{fd}`{cc{}}`{{ABlABl}{{n{AGbOh}}}}{ABl{{n{{Fd{AGd}}Oh}}}}{{}{{n{{ABd{ABlACl}}Oh}}}}{Ch{{n{{Fd{AGf}}Oh}}}}{ABl{{n{{Fd{AGh}}Oh}}}}{{}f}<{{ABlAGjA`AGl}d};{{ABlAGjA`}{{Bb{AGl}}}}{AGf{{n{AGbOh}}}}`{{{Gh{Gf}}}{{n{AGfc}}}{}}{c{{n{e}}}{}{}}0{cAj{}}{ce{}{}}`````````````````````````````````````000000000000000000000000000000000000000000{AGnAGn}{AH`AH`}{AHbAHb}{AHdAHd}{AGjAGj}{AHfAHf}{AGlAGl}{AHhAHh}{AHjAHj}{AHlAHl}{AHnAHn}{AI`AI`}{AIbAIb}{AGbAGb}{AGdAGd}{AGhAGh}{AIdAId}{AIfAIf}{AIhAIh}{AIjAIj}{AIlAIl}{{ce}d{}{}}00000000000000000000`{{}AGn}{{}AH`}{{}AHb}{{}AHd}{{}AGj}{{}AHf}{{}AGl}{{}AHh}{{}AHj}{{}AHl}{{}AHn}{{}AI`}{{}AIb}{{}AGb}{{}AGd}{{}AGh}{{}AId}{{}AIf}{{}AIh}{{}AIj}{{}AIl}{fc{}}00000000000000000000000000000000000000000{fd}00000000000000000000``{{AIlAIl}h}{{ce}h{}{}}0`{{AGnj}Cf}{{AH`j}Cf}{{AHbj}Cf}{{AHdj}Cf}{{AGjj}Cf}{{AHfj}Cf}{{AGlj}Cf}{{AHhj}Cf}{{AHjj}Cf}{{AHlj}Cf}{{AHnj}Cf}{{AI`j}Cf}{{AIbj}Cf}{{AGbj}Cf}{{AGdj}Cf}{{AGhj}Cf}{{AIdj}Cf}{{AIfj}Cf}{{AIhj}Cf}{{AIjj}Cf}{{AIlj}Cf}{cc{}}0000000000000000000{AInAIl}1````````{{}f}00000000000000000000{ce{}{}}00000000000000000000{AGnAd}{AH`Ad}{AHbAd}{AHdAd}{AGjAd}{AHfAd}{AGlAd}{AHhAd}{AHjAd}{AHlAd}{AHnAd}{AI`Ad}{AIbAd}{AGbAd}{AGdAd}{AGhAd}{AIdAd}{AIfAd}{AIhAd}{AIjAd}{AIlAd}{AGjh}```````````````````````````{ce{}{}}00000000000000000000{{}{{n{AGnAh}}}}{{}{{n{AH`Ah}}}}{{}{{n{AHbAh}}}}{{}{{n{AHdAh}}}}{{}{{n{AHfAh}}}}{{}{{n{AGlAh}}}}{{}{{n{AHhAh}}}}{{}{{n{AHjAh}}}}{{}{{n{AHlAh}}}}{{}{{n{AHnAh}}}}{{}{{n{AI`Ah}}}}{{}{{n{AIbAh}}}}{{}{{n{AGbAh}}}}{{}{{n{AGdAh}}}}{{}{{n{AGhAh}}}}{{}{{n{AIdAh}}}}{{}{{n{AIfAh}}}}{{}{{n{AIhAh}}}}{{}{{n{AIjAh}}}}{{}{{n{AIlAh}}}}{c{{n{e}}}{}{}}00000000000000000000{Ad{{n{AGnAh}}}}{Ad{{n{AH`Ah}}}}{Ad{{n{AHbAh}}}}{Ad{{n{AHdAh}}}}{Ad{{n{AGjAh}}}}{Ad{{n{AHfAh}}}}{Ad{{n{AGlAh}}}}{Ad{{n{AHhAh}}}}{Ad{{n{AHjAh}}}}{Ad{{n{AHlAh}}}}{Ad{{n{AHnAh}}}}{Ad{{n{AI`Ah}}}}{Ad{{n{AIbAh}}}}{Ad{{n{AGbAh}}}}{Ad{{n{AGdAh}}}}{Ad{{n{AGhAh}}}}{Ad{{n{AIdAh}}}}{Ad{{n{AIfAh}}}}{Ad{{n{AIhAh}}}}{Ad{{n{AIjAh}}}}{Ad{{n{AIlAh}}}}{c{{n{e}}}{}{}}00000000000000000000{cAj{}}00000000000000000000{ce{}{}}00000000000000000000`````````````````````````````````````````````````{{cC`}{{n{C`Bd}}}Bf}{{c{Gh{Gf}}}{{n{dBd}}}Bf}{{cAAd}{{n{dBd}}}Bf}{cEl{}}00``{{cAl}{{n{dBd}}}Bf}{cdBf}66666666666666666666`{AJ`AJ`}{AJbAJb}{AJdAJd}{AJfAJf}{AJhAJh}{{ce}d{}{}}0000{BdEb}{AJjEb}{AJlEb}{{}AJ`}{{}AJb}{{}AJd}{{}AJf}{{}AJh}{fc{}}0000000000000000000{{cDfAd}{{AAf{Ad{n{AdL`}}}}}Bf}{fd}000000000``{cdBf}{{AJlAJl}h}{{ce}h{}{}}0{cA`Bf}0`{{Bdj}Cf}0{{AJjj}Cf}0{{AJlj}Cf}{{AJ`j}Cf}{{AJbj}Cf}{{AJnj}Cf}0{{AJdj}Cf}{{AJfj}Cf}{{AJhj}Cf}{cc{}}{AJjBd}{AK`Bd}222222222`{{}h}0{AJfd}{{}f}000000000{{cAB`e}hBf{}}{ce{}{}}000000000{Bd{{n{LhBd}}}}{AJlAd}{AJ`Ad}{AJbAd}{AJdAd}{AJfAd}{AJhAd}{Dfh}{AJjh}1{{}A`}0`````{{cACj}{{Bb{ACl}}}Bf}0```{c{{ABd{FlABb}}}Bf}{BdDf}{AJjDf}{{}Df}{{A`A`}Bd}`{{cAKb}{{n{A`Bd}}}Bf}7777{A`d}0{AKdd}0{Bd{{Bb{N`}}}}``{{}{{Fd{ABf}}}};;{{}AKd}0`{ce{}{}}0000{cFl{}}00{{}{{n{AJ`Ah}}}}{{}{{n{AJbAh}}}}{{}{{n{AJdAh}}}}{{}{{n{AJfAh}}}}{{}{{n{AJhAh}}}}{c{{n{e}}}{}{}}0{C`{{n{AJjc}}}{}}11111111{Ad{{n{AJ`Ah}}}}{Ad{{n{AJbAh}}}}{Ad{{n{AJdAh}}}}{Ad{{n{AJfAh}}}}{Ad{{n{AJhAh}}}}6666666666`{cAj{}}000000000`{A`{{n{dBd}}}}000{{}A`}000{AJd{{n{dc}}}{}}{ce{}{}}000000000``````````````````000000000000000000`{AB`AB`}{AKbAKb}{AKfAKf}{AKhAKh}{ABfABf}{ABbABb}{AKjAKj}{AKlAKl}{AKnAKn}{{ce}d{}{}}00000000{{}AB`}{{}AKf}{{}AKl}{{}AKn}{fc{}}00000000000000000{fd}00000000`{{AB`j}Cf}{{AKbj}Cf}{{AKfj}Cf}{{AKhj}Cf}{{ABfj}Cf}{{ABbj}Cf}{{AKjj}Cf}{{AKlj}Cf}{{AKnj}Cf}{cc{}}00000000{{}f}00000000{ce{}{}}00000000{AB`Ad}{AKbAd}{AKfAd}{AKhAd}{ABfAd}{ABbAd}{AKjAd}{AKlAd}{AKnAd}``````````999999999{{}{{n{AB`Ah}}}}{{}{{n{AKfAh}}}}{{}{{n{AKlAh}}}}{{}{{n{AKnAh}}}}{c{{n{e}}}{}{}}00000000{Ad{{n{AB`Ah}}}}{Ad{{n{AKbAh}}}}{Ad{{n{AKfAh}}}}{Ad{{n{AKhAh}}}}{Ad{{n{ABfAh}}}}{Ad{{n{ABbAh}}}}{Ad{{n{AKjAh}}}}{Ad{{n{AKlAh}}}}{Ad{{n{AKnAh}}}}999999999``{cAj{}}00000000``{ce{}{}}00000000`````````{cEl{}}01111111111{AL`AL`}{ALbALb}{{ce}d{}{}}0{NjEb}{{}AL`}{{}ALb}{fc{}}000000000{{cDfAd}{{AAf{Ad{n{AdL`}}}}}Bf}{fd}0000{cdBf}{{Njj}Cf}0{{AL`j}Cf}{{ALdj}Cf}0{{ALbj}Cf}{cc{}}00{ALfALd}11{{}f}0000{{cAB`e}hBf{}}{ce{}{}}0000{Nj{{n{LhNj}}}}{AL`Ad}{ALbAd}{c{{ABd{FlABb}}}Bf}{NjDf}````{ALd{{Bb{N`}}}}`66{cFl{}}0{{}{{n{AL`Ah}}}}{{}{{n{ALbAh}}}}{c{{n{e}}}{}{}}0000{Ad{{n{AL`Ah}}}}{Ad{{n{ALbAh}}}}22222{cAj{}}0000`{AL`{{n{dc}}}{}}>>>>>``````````{cEl{}}??????????{ALhALh}{ALjALj}{ALlALl}{ALnALn}{{ce}d{}{}}000{{}ALh}{{}ALj}{{}ALl}{{}ALn}{fc{}}000000000{fd}0000{{ALlALl}h}{{ce}h{}{}}0{{ALhj}Cf}{{ALjj}Cf}{{ALfj}Cf}0{{ALlj}Cf}{{ALnj}Cf}{{ALnA`A`}{{`{{AM`{}{{Aj{ABl}}}}}}}}{{ALjCh}ABn}{ALld}{cc{}}00001{{}f}0000{ce{}{}}0000{ALhAd}{ALjAd}{ALlAd}{ALnAd}``4444{cFl{}}{{}{{n{ALhAh}}}}{{}{{n{ALjAh}}}}{{}{{n{ALlAh}}}}{{}{{n{ALnAh}}}}{c{{n{e}}}{}{}}0000{Ad{{n{ALhAh}}}}{Ad{{n{ALjAh}}}}{Ad{{n{ALlAh}}}}{Ad{{n{ALnAh}}}}44444{cAj{}}0000`{ALj{{n{dALf}}}}{ALlA`}{ce{}{}}0000```````{{}{{Bb{AMb}}}}{{}}{Dfh}00{cdBf}0{{}d}{{}{{Bb{AMd}}}}```{cEl{}}77{OdEb}{fc{}}0{fd}{{AMf{Bb{G`}}Eb}{{n{{Bb{Kl}}Od}}}}{{Odj}Cf}0{cc{}}{{}f}>{Od{{n{LhOd}}}}{OdDf}{cFl{}}{c{{n{e}}}{}{}}0{cAj{}}{ce{}{}}``00{AKdAKd}{{ce}d{}{}}{{}AKd}>>={{AKdAKd}h}{{ce}h{}{}}0{{AKdj}Cf}={AKd{{Fd{Gf}}}}=7`799`87``````````````{{AMhDf}{{AMj{c}}}AMl}8888888888888888{H`H`}{AMnAMn}{AN`AN`}{ANbANb}::::{AMhd}{{}d}`{{}H`}{{}AMn}{{}ANb}{fc{}}000000000000000{fd}0000000{{AMhc}dOn}{{AMhOl}d}{{AMhcANdAF`}{{n{dBd}}}Bf}2{AMhf}0{{AMhc}EbBf}{{cg}eANf{}{{AAl{}{{AAj{e}}}}}}{{ANbcg}eANf{}{{AAl{}{{AAj{e}}}}}}{AMhAMn}{{H`H`}h}{{ce}h{}{}}0{{H`j}Cf}0{{AMnj}Cf}{{AN`j}Cf}{{ANbj}Cf}{cc{}}{{{n{ce}}}{{ANh{{n{ce}}}}}{}{}}1{d{{ANh{d}}}}22222{LfAN`}3{{{AMj{c}}}{{Bb{c}}}AMl}0{AMhh}`{AMhd}`{{}f}00000004`{ce{}{}}0000000{AMnh}000000{AMhf}{{AMhDf}{{AMj{c}}}AMl}{AMnH`}`{{}ANb}7{{{AMj{c}}}c{AMlANj}}4{AMhFn}`9{{}d}{{{AMj{c}}c}cAMl}`1{AMhANf}>{AMhAb}0{AMh{{Fd{{B`{ANdAF`}}}}}}1<<<<{cFl{}}{c{{n{e}}}{}{}}000000000000000`{AMnAAb}{AMnBh}{AMnABl}{AMnf}{AMnEb}{cAj{}}0000000{ce{}{}}0000000{ec{}{{AAl{AMh}{{AAj{c}}}}}}{ec{}{{AAl{AMn}{{AAj{c}}}}}}{{ANbh}ANb}{{ANbH`}ANb}{ANbANb}{ec{}{{AAl{ANf}{{AAj{c}}}}}}{gc{}{{ANl{{ANh{c}}}}}{{AAl{}{{AAj{e}}}}}}{{ANbg}c{}{{ANl{{ANh{c}}}}}{{AAl{}{{AAj{e}}}}}}{{ANbAN`}ANb}```````````{Mh{{Gh{Gf}}}}{cf{}};;;;;;;;;;;;{c{{n{{Fd{Hf}}}}}{}}{MhMh}{{ce}d{}{}}{{MhMh}Hh}{{{AO`{}{{ANn{c}}}}}c{}}{{{AOb{c}}}eAOd{}}{{{AOf{c}}}eANf{}}`{{}Mh}{fc{}}00000{Mh}1111101{fd}00000{ce{}{{Hl{Hj}}}}0{{MhMh}h}{{ce}h{}{}}0{{Mhj}{{n{dl}}}}{cc{}}00000{{{Fd{Gf}}}Mh}{{ANf{Gh{Gf}}}{{Bb{{Fd{Gf}}}}}}{{{AOh{ce}}{Gh{Gf}}}{{Bb{{Fd{Gf}}}}}ANfIn}{{{AOb{c}}{Gh{Gf}}}{{Bb{{Fd{Gf}}}}}AOd}{{{AOf{c}}{Gh{Gf}}}{{Bb{{Fd{Gf}}}}}ANf}{{{AOj{ce}}{Gh{Gf}}}{{Bb{{Fd{Gf}}}}}ANf{{AOl{{Gh{Gf}}}}}}{{{AOn{c}}e}{{Bb{g}}}ANf{{AOl{{Gh{Gf}}}}}E`}{{{AO`{}{{ANn{c}}}}}h{}}{{{AOb{c}}}hAOd}{{{AOf{c}}}hANf}{{}f}00000{{ANf{Gh{Gf}}{Gh{Gf}}}d}{{{AOh{ce}}{Gh{Gf}}{Gh{Gf}}}dANfIn}{{{AOb{c}}{Gh{Gf}}{Gh{Gf}}}dAOd}{{{AOf{c}}{Gh{Gf}}{Gh{Gf}}}dANf}{{{AOj{ce}}{Gh{Gf}}{Gh{Gf}}}dANf{{AOl{{Gh{Gf}}}}}}{{{AOn{c}}eg}dANf{{AOl{{Gh{Gf}}}}}AAh}{ce{}{}}00000{MhAd}{ANf{{Ed{B`}}}}{{{AOh{ce}}}{{Ed{B`}}}ANfIn}{{{AOb{c}}}{{Ed{B`}}}AOd}{{{AOf{c}}}{{Ed{B`}}}ANf}{{{AOj{ce}}}{{Ed{B`}}}ANf{{AOl{{Gh{Gf}}}}}}{{{AOn{c}}}{{`{eg}}}ANf{{Bb{{Gh{Gf}}}}}{E`ANj}}{c{{AOh{ce}}}ANfIn}{c{{AOb{c}}}AOd}{c{{AOf{c}}}ANf}{{ce}{{AOj{ce}}}ANf{{AOl{{Gh{Gf}}}}}}{c{{AOn{c}}}ANf}{{MhMh}{{Bb{Hh}}}}{{{AO`{}{{ANn{c}}}}}f{}}{{{AOb{c}}}fAOd}{{{AOf{c}}}fANf}{{ANf{Fd{Mh}}Af}d}{{{AOh{ce}}{Fd{Mh}}Af}dANfIn}{{{AOb{c}}{Fd{Mh}}Af}dAOd}{{{AOf{c}}{Fd{Mh}}Af}dANf}{{{AOj{ce}}{Fd{Mh}}Af}dANf{{AOl{{Gh{Gf}}}}}}{{ANf{Gh{Gf}}}d}{{{AOh{ce}}{Gh{Gf}}}dANfIn}{{{AOb{c}}{Gh{Gf}}}dAOd}{{{AOf{c}}{Gh{Gf}}}dANf}{{{AOj{ce}}{Gh{Gf}}}dANf{{AOl{{Gh{Gf}}}}}}{{{AOn{c}}e}dANf{{AOl{{Gh{Gf}}}}}}{{{AO`{}{{ANn{c}}}}}c{}}{{{AOb{c}}}eAOd{}}{{{AOf{c}}}eANf{}}{ce{}{}}{{}{{n{MhAh}}}}{c{{n{e}}}{}{}}00000{Ad{{n{MhAh}}}}111111{cAj{}}00000444444{{ce}{{n{d}}}{}Ib}``````{cEl{}}6666{fc{}}000{fd}0{{Bdj}Cf}0{cc{}}0{{{Bf{c}}{Gh{Gf}}}{{Bb{{Fd{Gf}}}}}ANf}{{}f}0{{{Bf{c}}{Gh{Gf}}{Gh{Gf}}}dANf}=={{{Bf{c}}}{{Ed{B`}}}ANf}{{c{Bh{Gf}}{Gh{{Gh{Gf}}}}}{{Bf{c}}}ANf}{{{Bf{c}}{Fd{Mh}}Af}dANf}{{{Bf{c}}{Gh{Gf}}}dANf}{cFl{}}{c{{n{e}}}{}{}}000??{ce{}{}}0{{{Bf{c}}}dANf}`````111111{{cBje}{{n{BlBd}}}BfBn}``{BjBj}{{ce}d{}{}}{fc{}}00000{fd}00{{Bjj}Cf}{{Blj}Cf}{cc{}}00`{cAfBf}{{}f}00;;;```;<<<<<<{cAj{}}00{{BnBj}{{n{dBd}}}}{{BA`Bj}{{n{dBd}}}}>>>```````````````````````````````````````````{cEl{}}{Cj{{Gh{Gf}}}}{BAb{{Gh{Gf}}}}{cf{}}0{ce{}{}}0000000000000{BAd{{Ed{Dn}}}}{c{{n{{Fd{Hf}}}}}{}}0``{BAdd}{CjCj}{BAbBAb}{AnAn}{AA`AA`}{AMdAMd}{BAdBAd}{{ce}d{}{}}00000{{CjCj}Hh}{{}Cj}{{}BAb}{{}An}{{}AA`}{{}AMd}{{}BAd}{fc{}}0000000000000{fd}000000{ce{}{{Hl{Hj}}}}000{{CjCj}h}{{AA`AA`}h}{{ce}h{}{}}000`{{Mfj}{{n{dl}}}}0{{Cjj}{{n{dl}}}}00{{AA`j}{{n{dl}}}}{{AMdj}{{n{dl}}}}{cc{}}{NnMf}{OjMf}{NfMf}{{{Fd{Gf}}}Cj}4{DfCj}{{{Gh{Gf}}}Cj}66666{{Cb{Fd{Gf}}}An}{Df{{n{CjBAf}}}}{{}An}{{BAdCjCh}{{n{AnMf}}}}{{BAdCj}{{n{AnMf}}}}{{BAdCjCh}{{n{AA`Mf}}}}{{BAdCj}{{n{AA`Mf}}}}{{Cjc}dAb}{{}f}000000`{ce{}{}}000000{CjAd}{BAbAd}{AnAd}{AA`Ad}{AMdAd}`6{{CbCdBAb{Fd{Gf}}}An}{{Cb{Fd{Gf}}EjCj{Bb{A`}}{Mn{BAh}}}{{n{AA`Nn}}}}{{}BAd}{{CjCj}{{Bb{Hh}}}}``{Mf{{Bb{N`}}}}``::::::{cFl{}}0{{}{{n{CjAh}}}}{{}{{n{BAbAh}}}}{{}{{n{AnAh}}}}{{}{{n{AA`Ah}}}}{{}{{n{AMdAh}}}}{c{{n{e}}}{}{}}000000{Ad{{n{CjAh}}}}{Ad{{n{BAbAh}}}}{Ad{{n{AnAh}}}}{Ad{{n{AA`Ah}}}}{Ad{{n{AMdAh}}}}5555555{cAj{}}000000{{AA`EjCj{Bb{A`}}{Bb{A`}}If}{{n{dNn}}}}{{AMdBAj}{{n{BAlMf}}}}{ce{}{}}000000{{ce}{{n{d}}}{}Ib}0{Cjd}{BAbd}```````{{}ABl}{{}Fb}{{}Id}{{}BAn}3210321032{{}J`}1430143{{}Kf}25402`````9999999999{{BB`cDfe}LlBfAAh}{{BB`cDfeBBb}LlBfAAh}{BBbBBb}{{ce}d{}{}}`{BBd{{Db{BBf}}}}{{BBdh}{{Db{c}}}D`}{{}BBd}{{}BBb}{fc{}}000000000{fd}0000{{}{{AOb{{BBj{BBh}}}}}}``{{BBbj}Cf}{cc{}}0000{{}}``{{}f}0000{ce{}{}}0000`{{A`BAn}BB`}{{BB`cDfe}{{n{gL`}}}BfAAhE`}``{BB`BAn}3{{}Lf}{c{{n{e}}}{}{}}000000000{cAj{}}000066666{{{ABd{FlAd}}}BBd}``````````````````````{cEl{}}{ABl{{Gh{Gf}}}}{cf{}}::::::{c{{n{{Fd{Hf}}}}}{}}{BAnBAn}{ABlABl}{{ce}d{}{}}0{{ABlABl}Hh}{{}ABl}{fc{}}00000{fd}00{ce{}{{Hl{Hj}}}}0{{BAnBAn}h}{{ABlABl}h}{{ce}h{}{}}000{{BAnj}Cf}{{BBlj}Cf}0{{ABlj}Cf}00{cc{}}00{DfABl}{Df{{n{ABlBBl}}}}{{{Gh{Gf}}}{{n{ABlBBl}}}}{{{Gh{Gf}}}ABl}{{DfDf}ABl}{{Df{Gh{Gf}}}ABl}{EnABl}{EjABl}{BAnABl}{{ABlc}dAb}{{}f}00{ce{}{}}00{ABl{{Bh{Gf}}}}{BAnAd}{ABlAd}{{{Gh{Gf}}Gf{Gh{Gf}}}ABl}{{ABlABl}{{Bb{Hh}}}}{BAnFb}{ABlFl}77{cFl{}}0{{}{{n{ABlAh}}}}{c{{n{e}}}{}{}}0{{{Gh{Gf}}}{{n{ABlc}}}{}}1{Ad{{n{BAnAh}}}}{Ad{{n{ABlAh}}}}333{cAj{}}00>>>{{ce}{{n{d}}}{}Ib}```????{BBnBBn}{BC`BC`}{{ce}d{}{}}0``{{}BBn}{{}BC`}{fc{}}000{fd}0`{{BBnj}Cf}{{BC`j}Cf}{cc{}}0{{}f}0{ce{}{}}0{BBnAd}{BC`Ad}```22{{}{{n{BBnAh}}}}{{}{{n{BC`Ah}}}}{c{{n{e}}}{}{}}0{Ad{{n{BBnAh}}}}{Ad{{n{BC`Ah}}}}22{cAj{}}088```8888{AF`AF`}{AAnAAn}{{ce}d{}{}}0``{fc{}}000{fd}0`{{AF`j}Cf}{{AAnj}Cf}{cc{}}0``{{}f}0{ce{}{}}0{AF`Ad}`{{Flc}AF`AAh}``22??{Ad{{n{AF`Ah}}}}{c{{n{e}}}{}{}}0>>44``````{ABnACl}{cEl{}}{ACj{{Gh{Gf}}}}{cf{}}888888{c{{n{{Fd{Hf}}}}}{}}{ACjACj}{ABnABn}{{ce}d{}{}}0{{ACjACj}Hh}{{ABnABn}Hh}{{}ACj}{{}ABn}{ABnACj}{fc{}}00000{fd}00{ce{}{{Hl{Hj}}}}0{{ACjACj}h}{{ABnABn}h}{{ce}h{}{}}000{{ACjj}Cf}0{{BCbj}Cf}0{{ABnj}Cf}0{cc{}}00{Df{{n{ACjc}}}{}}{{ACjc}dAb}{{}f}00{ce{}{}}00{ACjAd}{ABnAd}{ACj{{Fd{Gf}}}}{ACjh}{{AClACj}ABn}{{ACjACj}{{Bb{Hh}}}}{{ABnABn}{{Bb{Hh}}}}77{cFl{}}00{{}{{n{ACjAh}}}}{{}{{n{ABnAh}}}}{{{Gh{Gf}}}{{n{ACjc}}}{}}{c{{n{e}}}{}{}}00{Ad{{n{ACjAh}}}}{Ad{{n{ABnAh}}}}222{cAj{}}00???{{ce}{{n{d}}}{}Ib}``````````````````````````````{BCdABl}{BCfABl}``{cEl{}}`{{BCfBCh}{{n{{B`{{Fd{Fb}}{Fd{Ff}}}}AK`}}}}`{ce{}{}}00000000000000000000000`{BCfBCd}{BChBCh}{AAdAAd}{LfLf}{BhBh}{AlAl}{AAbAAb}{BCjBCj}{BCdBCd}{BCfBCf}{BClBCl}{BjBj}{{ce}d{}{}}0000000000`{{}Bh}{{}Al}{{}AAb}{{}BCj}{{}Bj}{fc{}}00000000000000000000000{fd}00000000000{{BhBh}h}{{ce}h{}{}}0`{{AK`j}Cf}0{{BChj}Cf}{{AAdj}Cf}{{Lfj}Cf}{{Bhj}Cf}{{Alj}Cf}{{AAbj}Cf}{{BCjj}Cf}{{BCdj}Cf}{{BCfj}Cf}{{BClj}Cf}{{Bjj}Cf}`{cc{}}00000000000{C`Bj}`{BCjACl}{{}f}00000000000{ce{}{}}00000000000{Bj{{Bb{C`}}}}{BChAd}{AAdAd}{LfAd}{BhAd}{AlAd}{AAbAd}{BCjAd}{BCdAd}{BCfAd}{BClAd}{BjAd}{Bjh}`{{EnA`}BCl}{{BAnA`}BCl}`````???????????{cFl{}}{{}{{n{BhAh}}}}{{}{{n{AlAh}}}}{{}{{n{AAbAh}}}}{{}{{n{BCjAh}}}}{c{{n{e}}}{}{}}00000000000{Ad{{n{BChAh}}}}{Ad{{n{AAdAh}}}}{Ad{{n{LfAh}}}}{Ad{{n{BhAh}}}}{Ad{{n{AlAh}}}}{Ad{{n{AAbAh}}}}{Ad{{n{BCjAh}}}}{Ad{{n{BCdAh}}}}{Ad{{n{BCfAh}}}}{Ad{{n{BClAh}}}}{Ad{{n{BjAh}}}};;;;;;;;;;;;{cAj{}}00000000000{BjAd}{Lf{{n{dAK`}}}}{AAd{{n{LfAK`}}}}`{ce{}{}}00000000000{BCdBCd}```","c":[],"p":[[5,"Version",0],[1,"unit"],[1,"usize"],[1,"bool"],[5,"Formatter",4577],[5,"Error",4577],[6,"Result",4578],[1,"u64"],[10,"Hasher",4579],[6,"Value",4580],[1,"u16"],[6,"DecodeError",4581],[5,"TypeId",4582],[5,"Call",4289],[6,"Metadata",62],[1,"tuple"],[6,"Option",4583],[6,"Error",2391],[10,"Context",107],[6,"CallFormat",4289],[6,"CallResult",4289],[5,"PublicKey",4584],[5,"StaticSecret",4584],[6,"CallResult",900],[5,"PublicKey",4585],[5,"PrivateKey",4585],[8,"Result",4577],[8,"EpochTime",4586],[5,"KeyPairId",3643],[5,"ScheduleControl",89],[17,"Runtime"],[10,"Runtime",3125],[5,"RuntimeBatchContext",107],[5,"ConsensusState",4587],[1,"str"],[5,"Logger",4588],[10,"HistoryHost",796],[5,"HostInfo",4589],[10,"KeyManager",821],[10,"Decode",4590],[1,"u32"],[5,"Box",4591],[5,"Header",4592],[5,"RoundResults",4593],[5,"Namespace",4594],[10,"Fail",4595],[5,"Config",151],[8,"SignatureSet",151],[6,"PublicKey",262],[5,"Vec",4596],[5,"Signature",262],[6,"Error",151],[5,"Signer",151],[5,"String",4597],[5,"RootRng",219],[5,"Hash",4598],[10,"RngCore",4599],[5,"LeafRng",219],[1,"u8"],[1,"slice"],[10,"Sized",4600],[5,"BigInt",4601],[5,"BigUint",4602],[6,"Mode",3189],[5,"Error",4603],[6,"SignatureType",262],[5,"u5",4604],[6,"Ordering",4605],[1,"char"],[10,"FromIterator",4606],[6,"Error",262],[6,"MemorySigner",262],[10,"WriteBase32",4604],[5,"PublicKey",430],[5,"PublicKey",4607],[5,"MemorySigner",430],[17,"OutputSize"],[8,"U64",4608],[10,"Digest",4609],[5,"PublicKey",474],[5,"MemorySigner",474],[8,"U32",4608],[10,"FixedOutput",4610],[5,"PublicKey",518],[5,"MemorySigner",518],[10,"BlockSizeUser",4611],[10,"FixedOutputReset",4610],[5,"PublicKey",560],[5,"MemorySigner",560],[8,"U48",4608],[5,"PublicKey",602],[5,"Dispatcher",628],[5,"Context",4612],[5,"TxnBatch",4613],[5,"CheckTxResult",4614],[5,"RuntimeError",721],[10,"Send",4600],[10,"Sync",4600],[5,"Transaction",4289],[6,"Error",628],[5,"DispatchOptions",628],[5,"DispatchResult",628],[5,"IncomingMessage",4615],[5,"ExecuteBatchResult",4616],[5,"ExecuteTxResult",4616],[8,"Tags",4617],[6,"KeyManagerError",3643],[5,"Prefix",3391],[5,"BTreeSet",4618],[5,"AtomicBool",4619],[5,"Arc",4620],[10,"Error",4621],[10,"Error",721],[6,"Error",985],[6,"Error",4622],[6,"Error",1440],[6,"Error",2898],[6,"ProtocolError",4589],[5,"Error",4623],[5,"JoinError",4624],[6,"Error",796],[6,"Error",3141],[6,"Error",4625],[6,"Error",1672],[6,"StateError",4587],[5,"EventTag",768],[10,"Event",768],[10,"IntoTags",768],[8,"EventTags",768],[6,"EventKind",4614],[6,"Event",4626],[5,"KeyManagerClientWithContext",821],[17,"Item"],[10,"IntoIterator",4606],[5,"KeyPair",3643],[5,"SignedPublicKey",3643],[5,"AuthInfo",4289],[5,"UnverifiedTransaction",4289],[6,"DispatchResult",900],[10,"Encode",4627],[17,"Output"],[10,"FnOnce",4628],[5,"MessageResult",4152],[5,"Metadata",2699],[5,"ModuleInfo",2699],[5,"BTreeMap",4629],[5,"MethodHandlerInfo",2699],[17,"Error"],[10,"Parameters",900],[5,"Address",4000],[5,"BaseUnits",4198],[5,"GasCosts",985],[5,"Parameters",985],[5,"Genesis",985],[6,"Event",985],[6,"ParameterValidationError",985],[5,"Denomination",4198],[1,"u128"],[5,"AccountBalances",1263],[5,"DenominationInfo",1263],[5,"TransactionFee",1200],[5,"FeeManager",1200],[5,"FeeUpdates",1200],[5,"Transfer",1263],[5,"Account",1263],[5,"NonceQuery",1263],[5,"AddressesQuery",1263],[5,"BalancesQuery",1263],[5,"DenominationInfoQuery",1263],[5,"Account",4630],[5,"GasCosts",1440],[5,"Parameters",1440],[5,"Genesis",1440],[6,"Event",1440],[5,"Delegation",4630],[5,"MessageEventHookInvocation",4152],[6,"ParameterValidationError",1440],[5,"RoundRoots",4593],[6,"RootKind",1629],[5,"RoundRootBody",1629],[5,"GasCosts",1672],[5,"Parameters",1672],[5,"Genesis",1672],[6,"Event",1672],[5,"DelegationInfo",1891],[5,"ExtendedDelegationInfo",1891],[5,"Undelegation",1859],[5,"UndelegationInfo",1891],[6,"ReceiptKind",1891],[5,"Receipt",1891],[5,"Deposit",1891],[5,"Withdraw",1891],[5,"Delegate",1891],[5,"Undelegate",1891],[5,"TakeReceipt",1891],[5,"BalanceQuery",1891],[5,"ConsensusAccountQuery",1891],[5,"DelegationQuery",1891],[5,"DelegationsQuery",1891],[5,"UndelegationsQuery",1891],[5,"AccountBalance",1891],[5,"ConsensusTransferContext",1891],[5,"ConsensusWithdrawContext",1891],[5,"ConsensusDelegateContext",1891],[5,"ConsensusUndelegateContext",1891],[5,"ConsensusError",1891],[8,"MessageEvent",4152],[5,"GasCosts",2391],[5,"DynamicMinGasPrice",2391],[5,"Parameters",2391],[5,"Genesis",2391],[5,"LocalConfig",2391],[5,"TxSimulationFailure",2391],[6,"Event",2391],[6,"ParameterValidationError",2391],[6,"Error",4289],[5,"EstimateGasQuery",2699],[5,"SenderMeta",3164],[5,"CallDataPublicKeyQueryResponse",2699],[6,"MethodHandlerKind",2699],[5,"RuntimeInfoResponse",2699],[5,"ExecuteReadOnlyTxQuery",2699],[5,"ExecuteReadOnlyTxResponse",2699],[5,"Parameters",2898],[5,"Genesis",2898],[6,"ParameterValidationError",2898],[6,"RewardScheduleError",3008],[5,"RewardStep",3008],[5,"RewardSchedule",3008],[6,"RewardAction",3008],[5,"EpochRewards",3008],[10,"Iterator",4631],[5,"TrustRoot",4622],[5,"TrustedPolicySigners",3643],[10,"ScheduleControlHost",3141],[5,"State",3189],[5,"StateValue",3189],[10,"Any",4582],[5,"Environment",3189],[5,"TransactionWithMeta",3189],[5,"Options",3189],[6,"Message",4615],[10,"Store",3391],[6,"TransactionResult",3189],[10,"Default",4632],[10,"Into",4633],[17,"Inner"],[10,"NestedStore",3391],[5,"MKVSStore",3391],[10,"MKVS",4634],[5,"OverlayStore",3391],[5,"HashedStore",3391],[5,"PrefixStore",3391],[10,"AsRef",4633],[5,"TypedStore",3391],[10,"Iterator",4634],[10,"TryFrom",4633],[6,"Error",3543],[5,"ConfidentialStore",3543],[1,"array"],[5,"SubcallInfo",3584],[5,"SubcallResult",3584],[10,"Validator",3584],[5,"AllowAllValidator",3584],[5,"StateKey",3643],[5,"MockKeyManagerClient",3643],[6,"FromHexError",4635],[10,"Signer",4607],[5,"SignedPolicySGX",4636],[5,"PolicySGX",4636],[6,"SignatureAddressSpec",4000],[5,"Signer",3905],[5,"CallOptions",3905],[5,"Mock",3905],[5,"EmptyRuntime",3905],[5,"Tree",4637],[5,"OverlayTree",4638],[6,"Error",4000],[5,"CallEnvelopeX25519DeoxysII",4103],[5,"ResultEnvelopeX25519DeoxysII",4103],[6,"Error",4198],[6,"CallerAddress",4289],[6,"AddressSpec",4289],[6,"AuthProof",4289],[5,"Fee",4289],[5,"SignerInfo",4289],[15,"EncryptedX25519DeoxysII",86],[10,"Module",900],[10,"MigrationHandler",900],[10,"TransactionHandler",900],[10,"BlockHandler",900],[10,"InvariantHandler",900],[10,"MethodHandler",900],[10,"ModuleInfoHandler",900],[15,"Failed",977],[5,"Module",985],[10,"API",985],[15,"Transfer",1193],[15,"Burn",1193],[15,"Mint",1193],[10,"API",1440],[5,"Module",1440],[5,"Module",1672],[10,"API",1672],[15,"Deposit",1834],[15,"Withdraw",1834],[15,"Delegate",1834],[15,"UndelegateDone",1834],[15,"UndelegateStart",1834],[10,"Config",2391],[10,"API",2391],[5,"Module",2391],[15,"GasUsed",2694],[5,"Module",2898],[5,"CurrentState",3189],[5,"Config",3905],[15,"NameTooLong",4288],[15,"Failed",4574]],"b":[[181,"impl-Display-for-Error"],[182,"impl-Debug-for-Error"],[351,"impl-Display-for-Error"],[352,"impl-Debug-for-Error"],[451,"impl-From%3CPublicKey%3E-for-PublicKey"],[452,"impl-From%3C%26str%3E-for-PublicKey"],[453,"impl-From%3C%26PublicKey%3E-for-PublicKey"],[671,"impl-Display-for-Error"],[672,"impl-Debug-for-Error"],[734,"impl-Display-for-Error"],[735,"impl-Debug-for-Error"],[736,"impl-From%3CError%3E-for-Error"],[737,"impl-From%3CError%3E-for-Error"],[738,"impl-From%3CError%3E-for-Error"],[739,"impl-From%3CError%3E-for-Error"],[740,"impl-From%3CError%3E-for-Error"],[741,"impl-From%3CProtocolError%3E-for-Error"],[742,"impl-From%3CError%3E-for-Error"],[743,"impl-From%3CJoinError%3E-for-Error"],[744,"impl-From%3CError%3E-for-Error"],[745,"impl-From%3CError%3E-for-Error"],[747,"impl-From%3CError%3E-for-Error"],[748,"impl-From%3CError%3E-for-Error"],[749,"impl-From%3CError%3E-for-Error"],[750,"impl-From%3CStateError%3E-for-Error"],[809,"impl-Debug-for-Error"],[810,"impl-Display-for-Error"],[1071,"impl-Display-for-Error"],[1072,"impl-Debug-for-Error"],[1076,"impl-Display-for-ParameterValidationError"],[1077,"impl-Debug-for-ParameterValidationError"],[1532,"impl-Debug-for-ParameterValidationError"],[1533,"impl-Display-for-ParameterValidationError"],[1536,"impl-Debug-for-Error"],[1537,"impl-Display-for-Error"],[1544,"impl-From%3CError%3E-for-Error"],[1545,"impl-From%3CError%3E-for-Error"],[1546,"impl-From%3CStateError%3E-for-Error"],[1747,"impl-Debug-for-Error"],[1748,"impl-Display-for-Error"],[1754,"impl-From%3CError%3E-for-Error"],[1755,"impl-From%3CError%3E-for-Error"],[2529,"impl-Display-for-Error"],[2530,"impl-Debug-for-Error"],[2531,"impl-Display-for-TxSimulationFailure"],[2532,"impl-Debug-for-TxSimulationFailure"],[2536,"impl-Display-for-ParameterValidationError"],[2537,"impl-Debug-for-ParameterValidationError"],[2542,"impl-From%3CTxSimulationFailure%3E-for-Error"],[2543,"impl-From%3CError%3E-for-Error"],[2943,"impl-Display-for-Error"],[2944,"impl-Debug-for-Error"],[2946,"impl-Debug-for-ParameterValidationError"],[2947,"impl-Display-for-ParameterValidationError"],[3060,"impl-Debug-for-RewardScheduleError"],[3061,"impl-Display-for-RewardScheduleError"],[3152,"impl-Display-for-Error"],[3153,"impl-Debug-for-Error"],[3271,"impl-Debug-for-Mode"],[3272,"impl-Display-for-Mode"],[3277,"impl-From%3CResult%3CR,+E%3E%3E-for-TransactionResult%3CResult%3CR,+E%3E%3E"],[3279,"impl-From%3C()%3E-for-TransactionResult%3C()%3E"],[3560,"impl-Debug-for-Error"],[3561,"impl-Display-for-Error"],[3759,"impl-Display-for-KeyManagerError"],[3760,"impl-Debug-for-KeyManagerError"],[3761,"impl-Display-for-KeyPairId"],[3762,"impl-Debug-for-KeyPairId"],[3763,"impl-LowerHex-for-KeyPairId"],[3767,"impl-From%3CError%3E-for-KeyManagerError"],[3768,"impl-From%3CStateError%3E-for-KeyManagerError"],[3769,"impl-From%3CError%3E-for-KeyManagerError"],[3770,"impl-From%3CVec%3Cu8%3E%3E-for-KeyPairId"],[3772,"impl-From%3C%26str%3E-for-KeyPairId"],[3773,"impl-From%3C%26%5Bu8%5D%3E-for-KeyPairId"],[4051,"impl-Display-for-Error"],[4052,"impl-Debug-for-Error"],[4053,"impl-LowerHex-for-Address"],[4054,"impl-Display-for-Address"],[4055,"impl-Debug-for-Address"],[4241,"impl-Display-for-Denomination"],[4242,"impl-Debug-for-Denomination"],[4243,"impl-Display-for-Error"],[4244,"impl-Debug-for-Error"],[4245,"impl-Debug-for-BaseUnits"],[4246,"impl-Display-for-BaseUnits"],[4420,"impl-Debug-for-Error"],[4421,"impl-Display-for-Error"]]}],\
["oasis_runtime_sdk_contracts",{"doc":"Smart contracts module.","t":"PRPPPPPPPPPPPKPPPPPPPPGGPPFFPPPFFPPFPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOONNNONNNONNNNNCNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONONONOONNNNNNNCNNNNNNNOOOOOOOOOOOOOOOOOOOOSSSSSSGPFFFFFFFFPFFFPFFFFFFFFFPPGPGFFGPFFFOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Abort","Accounts","CodeAlreadyUpgraded","CodeDeclaresMultipleSubVersions","CodeDeclaresReservedExport","CodeDeclaresStartFunction","CodeDeclaresTooManyFunctions","CodeDeclaresTooManyLocals","CodeDeclaresTooManyMemories","CodeMalformed","CodeMissingRequiredExport","CodeNotFound","CodeTooLarge","Config","Contract","Core","CryptoKeyDerivationFunctionFailure","CryptoMalformedKey","CryptoMalformedNonce","CryptoMalformedPrivateKey","CryptoMalformedPublicKey","CryptoMsgTooLarge","Error","Event","ExecutionFailed","Forbidden","GasCosts","Genesis","InstanceNotFound","InsufficientCallerBalance","InvalidArgument","LocalConfig","Module","ModuleLoadingFailed","ModuleUsesFloatingPoint","Parameters","ResultTooLarge","StorageKeyTooLarge","StorageValueTooLarge","TooManySubcalls","Unsupported","UnsupportedABI","as_fail","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","code","code","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","dispatch_call","dispatch_query","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","gas_costs","init","init","init","init","init","init","init","init_or_migrate","into","into","into","into","into","into","into","into_abort","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","is_allowed_interactive_call","is_expensive_query","load_code","max_code_size","max_crypto_signature_verify_message_size_bytes","max_instance_raw_storage_query_items","max_memory_pages","max_query_size_bytes","max_result_size_bytes","max_stack_size","max_storage_key_size_bytes","max_storage_value_size_bytes","max_subcall_count","max_subcall_depth","max_wasm_functions","max_wasm_locals","module_info","module_name","module_name","parameters","query_code","query_code_storage","query_custom","query_custom_max_gas","query_instance","query_instance_raw_storage","query_instance_storage","query_public_key","source","state","store_code","subcall_dispatch","supported_methods","to_owned","to_owned","to_owned","to_owned","to_string","try_default","try_default","try_default","try_default","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tx_call","tx_call","tx_change_upgrade_policy","tx_change_upgrade_policy","tx_instantiate","tx_instantiate","tx_upgrade","tx_upgrade","tx_upload","tx_upload","tx_upload_per_byte","type_id","type_id","type_id","type_id","type_id","type_id","type_id","types","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wasm_confidential_storage_get_base","wasm_confidential_storage_insert_base","wasm_confidential_storage_key_byte","wasm_confidential_storage_remove_base","wasm_confidential_storage_value_byte","wasm_crypto_deoxysii_base","wasm_crypto_deoxysii_byte","wasm_crypto_ecdsa_recover","wasm_crypto_random_bytes_base","wasm_crypto_random_bytes_byte","wasm_crypto_signature_verify_ed25519","wasm_crypto_signature_verify_secp256k1","wasm_crypto_signature_verify_sr25519","wasm_crypto_x25519_derive_symmetric","wasm_env_query_base","wasm_public_storage_get_base","wasm_public_storage_insert_base","wasm_public_storage_key_byte","wasm_public_storage_remove_base","wasm_public_storage_value_byte","CODE","CODE_INFO","INSTANCE_INFO","INSTANCE_STATE","NEXT_CODE_IDENTIFIER","NEXT_INSTANCE_IDENTIFIER","ABI","Address","Call","CallResult","ChangeUpgradePolicy","Code","CodeId","CodeQuery","CodeStorageQuery","CodeStorageQueryResult","Confidential","ContractEvent","CustomQuery","CustomQueryResult","Everyone","Instance","InstanceId","InstanceQuery","InstanceRawStorageQuery","InstanceRawStorageQueryResult","InstanceStorageQuery","InstanceStorageQueryResult","Instantiate","InstantiateResult","Nobody","OasisV1","Policy","Public","PublicKeyKind","PublicKeyQuery","PublicKeyQueryResult","StoreKind","Transaction","Upgrade","Upload","UploadResult","abi","abi","abi_sv","address","address_for","as_u64","as_u64","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","checksum","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code","code","code_id","code_id","code_id","creator","data","data","data","data","data","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","enforce","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","hash","hash","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","increment","increment","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","instantiate_policy","instantiate_policy","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","into_cbor_value","items","key","key","kind","limit","offset","signature","store_kind","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_storage_key","to_storage_key","tokens","tokens","tokens","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_default","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_from_cbor_value","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upgrades_policy","upgrades_policy","upgrades_policy","uploader","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"oasis_runtime_sdk_contracts"],[238,"oasis_runtime_sdk_contracts::state"],[244,"oasis_runtime_sdk_contracts::types"],[905,"failure"],[906,"oasis_cbor_value::values"],[907,"oasis_runtime_sdk::module"],[908,"oasis_runtime_sdk::module"],[909,"oasis_core_runtime::types"],[910,"core::result"],[911,"core::fmt"],[912,"core::fmt"],[913,"oasis_runtime_sdk::dispatcher"],[914,"oasis_runtime_sdk::modules::core::types"],[915,"alloc::vec"],[916,"alloc::string"],[917,"oasis_runtime_sdk::modules::core::types"],[918,"core::error"],[919,"core::option"],[920,"oasis_runtime_sdk::modules::core::types"],[921,"core::any"],[922,"oasis_runtime_sdk::types::address"],[923,"core::fmt"]],"d":["","Module that is used for accessing accounts.","","","","","","","","","","","","Module configuration.","","","","","","","","","Errors emitted by the contracts module.","Events emitted by the contracts module.","","","Gas costs.","Genesis state for the contracts module.","","","","Local configuration that can be provided by the node …","","","","Parameters for the contracts module.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Loads code with the specified code identifier.","","","Maximum number of items per page in InstanceRawStorage …","","","","","","","","","","","","","","","","","","Gas limit for custom queries that invoke smart contracts.","","","","","","State schema constants.","Stores code with the specified code identifier.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Contracts module types.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Uploaded code.","Information about uploaded code.","Information about the deployed contract instance.","Per-instance key/value store.","Next code identifier (u64).","Next instance identifier (u64).","ABI that the given contract should conform to.","","Contract call.","Contract call result.","Change upgrade policy call.","Stored code information.","Unique stored code identifier.","Code information query.","Code storage information query.","Code storage query result.","","An event emitted from a contract, wrapped to include …","Custom contract query.","Custom query result.","","Deployed code instance information.","Unique deployed code instance identifier.","Instance information query.","Instance raw storage query.","Instance raw storage query result.","Instance storage query.","","Instantiate call.","Instantiate call result.","","Custom Oasis SDK-specific ABI (v1).","A generic policy that specifies who is allowed to perform …","","Public key kind.","Public key query.","Public key query result.","Exposed wrapper for oasis-contract-sdk-types::StoreKind.","","Upgrade call.","Upload call.","Upload call result.","ABI.","ABI.","ABI sub-version.","Address associated with the contract.","Address associated with a specific contract instance.","Convert identifier to u64.","Convert identifier to u64.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checksum of the key manager state.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Compiled contract code.","Stored contract code.","Identifier of code used by the instance.","Identifier of code used by the instance.","Updated code identifier.","Instance creator address.","Arguments to contract’s instantiation function.","Call arguments.","Arguments to contract’s upgrade function.","Query arguments.","Raw event data emitted by the instance.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Enforce the given policy by returning an error if the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Code hash.","Unique code identifier.","Unique instance identifier.","Assigned code identifier.","Assigned instance identifier.","Instance identifier.","Instance identifier.","Instance identifier.","Code identifier.","Code identifier.","Instance identifier.","Instance identifier.","Instance identifier.","Instance identifier.","Instance identifier.","Identifier of the instance that emitted the event.","Return the next identifier in sequence.","Return the next identifier in sequence.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Who is allowed to instantiate this code.","Who is allowed to instantiate this code.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","List of key-value pairs in contract’s public store.","Storage key.","Public key.","Kind of public key.","Maximum number of items per page.","Number of skipped items.","Sign(sk, (key || checksum)) from the key manager.","Kind of the store to query.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert identifier to storage key representation.","Convert identifier to storage key representation.","Tokens that should be sent to the contract as part of the …","Tokens that should be sent to the contract as part of the …","Tokens that should be sent to the contract as part of the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Who is allowed to upgrade this instance.","Who is allowed to upgrade this instance.","Updated upgrade policy.","Code uploader address.","Storage value or <code>None</code> if key doesn’t exist.","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[7,69,7,7,7,7,7,7,7,7,7,7,7,0,7,7,7,7,7,7,7,7,0,0,7,7,0,0,7,7,7,0,0,7,7,0,7,7,7,7,7,7,7,70,7,9,2,3,4,5,70,7,9,2,3,4,5,2,3,4,5,2,3,4,5,7,9,2,3,4,5,70,7,9,2,3,4,5,70,7,9,2,3,4,5,70,70,70,7,9,2,3,4,5,7,7,9,2,3,4,5,70,7,7,7,9,2,3,4,5,3,70,7,9,2,3,4,5,70,70,7,9,2,3,4,5,7,9,2,3,4,5,70,70,70,3,3,5,3,3,3,3,3,3,3,3,3,3,70,7,9,4,70,70,70,5,70,70,70,70,7,0,70,2,70,2,3,4,5,7,2,3,4,5,70,7,9,2,3,4,5,2,3,4,5,70,7,9,2,3,4,5,70,2,70,2,70,2,70,2,70,2,2,70,7,9,2,3,4,5,0,70,7,9,2,3,4,5,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,61,0,0,0,0,0,0,0,0,63,0,0,0,61,0,0,0,0,0,0,0,0,0,61,62,0,63,0,0,0,0,64,0,0,0,24,54,24,36,36,59,58,59,58,61,62,24,36,54,55,51,52,48,49,53,50,30,31,32,35,39,40,63,37,38,64,41,42,33,34,65,59,58,61,62,24,36,54,55,51,52,48,49,53,50,30,31,32,35,39,40,63,37,38,64,41,42,33,34,65,42,59,58,61,62,24,36,54,55,51,52,48,49,53,50,30,31,32,35,39,40,63,37,38,64,41,42,33,34,65,59,58,61,62,24,36,54,55,51,52,48,49,53,50,30,31,32,35,39,40,63,37,38,64,41,42,33,34,65,54,32,36,51,53,36,51,48,53,33,65,59,58,55,52,49,31,32,35,39,40,38,42,33,34,65,59,58,61,62,24,36,54,55,51,52,48,49,53,50,30,31,32,35,39,40,63,37,38,64,41,42,33,34,65,59,58,61,62,24,36,54,55,51,52,48,49,53,50,30,31,32,35,39,40,63,37,38,64,41,42,33,34,65,59,58,61,62,24,36,54,55,51,52,48,49,53,50,30,31,32,35,39,40,63,37,38,64,41,42,33,34,65,61,59,58,62,59,59,59,58,58,58,62,62,62,59,58,61,62,24,36,54,55,51,52,48,49,53,50,30,31,32,35,39,40,63,37,38,64,41,42,33,34,65,59,59,58,58,61,62,24,36,54,55,51,52,48,49,53,50,30,31,32,35,39,40,63,37,38,64,41,42,33,34,65,62,24,24,36,55,52,48,53,50,30,31,35,39,37,41,33,65,59,58,59,58,61,62,24,36,54,55,51,52,48,49,53,50,30,31,32,35,39,40,63,37,38,64,41,42,33,34,65,24,54,59,58,61,62,24,36,54,55,51,52,48,49,53,50,30,31,32,35,39,40,63,37,38,64,41,42,33,34,65,59,58,61,62,24,36,54,55,51,52,48,49,53,50,30,31,32,35,39,40,63,37,38,64,41,42,33,34,65,38,39,42,41,37,37,42,37,59,58,61,62,24,36,54,55,51,52,48,49,53,50,30,31,32,35,39,40,63,37,38,64,41,42,33,34,65,59,58,51,48,53,59,58,55,52,49,31,32,35,39,40,38,42,33,34,65,59,58,61,62,24,36,54,55,51,52,48,49,53,50,30,31,32,35,39,40,63,37,38,64,41,42,33,34,65,59,58,61,62,24,36,54,55,51,52,48,49,53,50,30,31,32,35,39,40,63,37,38,64,41,42,33,34,65,59,58,61,62,24,36,54,55,51,52,48,49,53,50,30,31,32,35,39,40,63,37,38,64,41,42,33,34,65,59,58,61,62,24,36,54,55,51,52,48,49,53,50,30,31,32,35,39,40,63,37,38,64,41,42,33,34,65,36,51,50,24,40,59,58,61,62,24,36,54,55,51,52,48,49,53,50,30,31,32,35,39,40,63,37,38,64,41,42,33,34,65],"f":"``````````````````````````````````````````{cb{}}{ce{}{}}0000000000000{dd}{ff}{hh}{jj}{{ce}l{}{}}000{nA`}{AbA`}{{}d}{{}f}{{}h}{{}j}{Adc{}}0000000000000{{cAfAh}{{Al{AhAj}}}An}{{cAfAh}{{Al{Ah{Bb{AhB`}}}}}An}{Adl}000000{{nBd}Bf}0{{AbBd}Bf}{{dBd}Bf}{{fBd}Bf}{{hBd}Bf}{{jBd}Bf}{cc{}}0{Bhn}{Bjn}22222`{{}Ad}000000{{cBle}BnAn{}}{ce{}{}}000000{n{{Bb{Bjn}}}}{AbAh}{dAh}{fAh}{hAh}{jAh}{AfBn}0{C`{{Bb{{Cd{Cb}}n}}}}`````````````{c{{Cj{CfCh}}}An}{nAf}{{}Af}`{{cCl}{{Bb{C`n}}}An}{{cCn}{{Bb{D`n}}}An}{{cDb}{{Bb{Ddn}}}An}`{{cDf}{{Bb{Dhn}}}An}{{cDj}{{Bb{Dln}}}An}{{cDn}{{Bb{E`n}}}An}{{cEb}{{Bb{Edn}}}An}{n{{Eh{Ef}}}}`{{C`{Ej{Cb}}}{{Bb{ln}}}}`{{}{{Cd{El}}}}{ce{}{}}000{cCf{}}{{}{{Bb{dEn}}}}{{}{{Bb{fEn}}}}{{}{{Bb{hEn}}}}{{}{{Bb{jEn}}}}{c{{Bb{e}}}{}{}}000000{Ah{{Bb{dEn}}}}{Ah{{Bb{fEn}}}}{Ah{{Bb{hEn}}}}{Ah{{Bb{jEn}}}}4444444{{cF`}{{Bb{Fbn}}}An}`{{cFd}{{Bb{ln}}}An}`{{cFf}{{Bb{Fhn}}}An}`{{cFj}{{Bb{ln}}}An}`{{cFl}{{Bb{Fnn}}}An}``{cG`{}}000000`{ce{}{}}000000`````````````````````````````````````````````````````````````````{DhGb}{GdGb}{GfGh}{GdGh}4444444444444444444444444444444444444444444444444444444444`{GfGf}{GdGd}{GjGj}{GlGl}{C`C`}{DhDh}{FlFl}{FnFn}{FfFf}{FhFh}{F`F`}{FbFb}{FjFj}{FdFd}{ClCl}{CnCn}{D`D`}{DfDf}{DnDn}{E`E`}{GnGn}{DjDj}{DlDl}{H`H`}{EbEb}{EdEd}{DbDb}{DdDd}{HbHb}{{ce}l{}{}}0000000000000000000000000000```````````{{}Gf}{{}Gd}{{}Fn}{{}Fh}{{}Fb}{{}Cn}{{}D`}{{}Df}{{}Dn}{{}E`}{{}Dl}{{}Ed}{{}Db}{{}Dd}{{}Hb}{Adc{}}000000000000000000000000000000000000000000000000000000000{Adl}0000000000000000000000000000{{GjGb}{{Bb{ln}}}}{{GfGf}Bn}{{GdGd}Bn}{{GlGl}Bn}{{ce}Bn{}{}}00000000{{GfBd}{{Bb{lHd}}}}{{GdBd}{{Bb{lHd}}}}{{GjBd}Bf}{{GlBd}Bf}{{C`Bd}Bf}{{DhBd}Bf}{{FlBd}Bf}{{FnBd}Bf}{{FfBd}Bf}{{FhBd}Bf}{{F`Bd}Bf}{{FbBd}Bf}{{FjBd}Bf}{{FdBd}Bf}{{ClBd}Bf}{{CnBd}Bf}{{D`Bd}Bf}{{DfBd}Bf}{{DnBd}Bf}{{E`Bd}Bf}{{GnBd}Bf}{{DjBd}Bf}{{DlBd}Bf}{{H`Bd}Bf}{{EbBd}Bf}{{EdBd}Bf}{{DbBd}Bf}{{DdBd}Bf}{{HbBd}Bf}{cc{}}{GhGf}1{GhGd}222222222222222222222222222{{Glc}lHf}````````````````{GfGf}{GdGd}{{}Ad}0000000000000000000000000000``{ce{}{}}0000000000000000000000000000{GfAh}{GdAh}{GjAh}{GlAh}{C`Ah}{DhAh}{FlAh}{FnAh}{FfAh}{FhAh}{F`Ah}{FbAh}{FjAh}{FdAh}{ClAh}{CnAh}{D`Ah}{DfAh}{DnAh}{E`Ah}{GnAh}{DjAh}{DlAh}{H`Ah}{EbAh}{EdAh}{DbAh}{DdAh}{HbAh}````````{ce{}{}}0000000000000000000000000000{Gf{{Hh{Cb}}}}{Gd{{Hh{Cb}}}}```{{}{{Bb{GfEn}}}}{{}{{Bb{GdEn}}}}{{}{{Bb{FnEn}}}}{{}{{Bb{FhEn}}}}{{}{{Bb{FbEn}}}}{{}{{Bb{CnEn}}}}{{}{{Bb{D`En}}}}{{}{{Bb{DfEn}}}}{{}{{Bb{DnEn}}}}{{}{{Bb{E`En}}}}{{}{{Bb{DlEn}}}}{{}{{Bb{EdEn}}}}{{}{{Bb{DbEn}}}}{{}{{Bb{DdEn}}}}{{}{{Bb{HbEn}}}}{c{{Bb{e}}}{}{}}0000000000000000000000000000{Ah{{Bb{GfEn}}}}{Ah{{Bb{GdEn}}}}{Ah{{Bb{GjEn}}}}{Ah{{Bb{GlEn}}}}{Ah{{Bb{C`En}}}}{Ah{{Bb{DhEn}}}}{Ah{{Bb{FlEn}}}}{Ah{{Bb{FnEn}}}}{Ah{{Bb{FfEn}}}}{Ah{{Bb{FhEn}}}}{Ah{{Bb{F`En}}}}{Ah{{Bb{FbEn}}}}{Ah{{Bb{FjEn}}}}{Ah{{Bb{FdEn}}}}{Ah{{Bb{ClEn}}}}{Ah{{Bb{CnEn}}}}{Ah{{Bb{D`En}}}}{Ah{{Bb{DfEn}}}}{Ah{{Bb{DnEn}}}}{Ah{{Bb{E`En}}}}{Ah{{Bb{GnEn}}}}{Ah{{Bb{DjEn}}}}{Ah{{Bb{DlEn}}}}{Ah{{Bb{H`En}}}}{Ah{{Bb{EbEn}}}}{Ah{{Bb{EdEn}}}}{Ah{{Bb{DbEn}}}}{Ah{{Bb{DdEn}}}}{Ah{{Bb{HbEn}}}}{c{{Bb{e}}}{}{}}0000000000000000000000000000{cG`{}}0000000000000000000000000000`````{ce{}{}}0000000000000000000000000000","c":[],"p":[[10,"Fail",905],[5,"GasCosts",0],[5,"Parameters",0],[5,"Genesis",0],[5,"LocalConfig",0],[1,"unit"],[6,"Error",0],[1,"u32"],[6,"Event",0],[1,"usize"],[1,"str"],[6,"Value",906],[6,"CallResult",907],[6,"DispatchResult",907],[10,"Context",908],[5,"Error",909],[6,"Result",910],[5,"Formatter",911],[8,"Result",911],[6,"Error",912],[6,"Error",913],[5,"Metadata",914],[1,"bool"],[5,"Code",244],[1,"u8"],[5,"Vec",915],[5,"String",916],[5,"ModuleInfo",914],[5,"BTreeMap",917],[5,"CodeQuery",244],[5,"CodeStorageQuery",244],[5,"CodeStorageQueryResult",244],[5,"CustomQuery",244],[5,"CustomQueryResult",244],[5,"InstanceQuery",244],[5,"Instance",244],[5,"InstanceRawStorageQuery",244],[5,"InstanceRawStorageQueryResult",244],[5,"InstanceStorageQuery",244],[5,"InstanceStorageQueryResult",244],[5,"PublicKeyQuery",244],[5,"PublicKeyQueryResult",244],[10,"Error",918],[6,"Option",919],[1,"slice"],[5,"MethodHandlerInfo",914],[6,"DecodeError",920],[5,"Call",244],[5,"CallResult",244],[5,"ChangeUpgradePolicy",244],[5,"Instantiate",244],[5,"InstantiateResult",244],[5,"Upgrade",244],[5,"Upload",244],[5,"UploadResult",244],[5,"TypeId",921],[5,"Address",922],[5,"InstanceId",244],[5,"CodeId",244],[1,"u64"],[6,"Policy",244],[6,"ABI",244],[6,"StoreKind",244],[6,"PublicKeyKind",244],[5,"ContractEvent",244],[5,"Error",911],[10,"Hasher",923],[1,"array"],[10,"Config",0],[5,"Module",0]],"b":[[94,"impl-Display-for-Error"],[95,"impl-Debug-for-Error"],[103,"impl-From%3CError%3E-for-Error"],[104,"impl-From%3CError%3E-for-Error"]]}],\
["oasis_runtime_sdk_macros",{"doc":"","t":"YYXXXQ","n":["Error","Event","handler","migration","sdk_derive","version_from_cargo"],"q":[[0,"oasis_runtime_sdk_macros"]],"d":["Derives the <code>Error</code> trait on an enum.","Derives the <code>Event</code> trait on an enum.","A helper attribute for <code>#[sdk_derive(...)]</code>. It doesn’t do …","A helper attribute for <code>#[sdk_derive(...)]</code>. It doesn’t do …","Derives traits from a non-trait <code>impl</code> block (rather than …","Constructs an <code>oasis_sdk::core::common::version::Version</code> …"],"i":[0,0,0,0,0,0],"f":"``````","c":[],"p":[],"b":[]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
